GAS LISTING /tmp/cc64Bnbh.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB48:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** #include "../lib/console.h"
   3:src/main.cpp  **** #include "../h/tcb.hpp"
   4:src/main.cpp  **** //#include "../h/workers.hpp"
   5:src/main.cpp  **** #include "../h/Print.hpp"
   6:src/main.cpp  **** //#include "../h/MemoryAllocation.hpp"
   7:src/main.cpp  **** #include "../h/RiscV.hpp"
   8:src/main.cpp  **** #include "../h/syscall_c.hpp"
   9:src/main.cpp  **** #include "../h/semaphore.hpp"
  10:src/main.cpp  **** //#include "../src/userMain.cpp"
  11:src/main.cpp  **** //#include "../test/Threads_C_API_test.hpp"
  12:src/main.cpp  **** extern void userMain();
  13:src/main.cpp  **** //typedef semaphore* sem_t;
  14:src/main.cpp  **** //sem_t agent,mutex,matches,paper,tabacco,dummy;
  15:src/main.cpp  **** //void agentfun(void *arg);
  16:src/main.cpp  **** //void smoker1(void* arg);
  17:src/main.cpp  **** //void smoker2(void* arg);
  18:src/main.cpp  **** //void smoker3(void* arg);
  19:src/main.cpp  **** //void dummyfun(void* arg);
  20:src/main.cpp  **** 
  21:src/main.cpp  **** int main(){
  12              		.loc 1 21 11
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
  22:src/main.cpp  ****     MemoryAllocation* mem_obj;
  22              		.loc 1 22 5
  23:src/main.cpp  ****     mem_obj = mem_obj->getInstance();
  23              		.loc 1 23 5
  24              		.file 2 "src/../h/../h/../h/MemoryAllocation.hpp"
   1:src/../h/../h/../h/MemoryAllocation.hpp **** #include "../lib/hw.h"
   2:src/../h/../h/../h/MemoryAllocation.hpp **** 
   3:src/../h/../h/../h/MemoryAllocation.hpp **** 
   4:src/../h/../h/../h/MemoryAllocation.hpp **** #ifndef PROJECT_BASE_MEMORYALLOCATION_HPP
   5:src/../h/../h/../h/MemoryAllocation.hpp **** #define PROJECT_BASE_MEMORYALLOCATION_HPP
   6:src/../h/../h/../h/MemoryAllocation.hpp **** 
   7:src/../h/../h/../h/MemoryAllocation.hpp **** 
   8:src/../h/../h/../h/MemoryAllocation.hpp **** class MemoryAllocation {
   9:src/../h/../h/../h/MemoryAllocation.hpp **** 
  10:src/../h/../h/../h/MemoryAllocation.hpp ****     //===========================DEFINICIJA SINGLETON KLASE POCETAK=======================k
  11:src/../h/../h/../h/MemoryAllocation.hpp **** private:
GAS LISTING /tmp/cc64Bnbh.s 			page 2


  12:src/../h/../h/../h/MemoryAllocation.hpp **** 
  13:src/../h/../h/../h/MemoryAllocation.hpp ****     struct FreeMem {
  14:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *next;
  15:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *prev;
  16:src/../h/../h/../h/MemoryAllocation.hpp ****         size_t size;
  17:src/../h/../h/../h/MemoryAllocation.hpp ****     };
  18:src/../h/../h/../h/MemoryAllocation.hpp **** 
  19:src/../h/../h/../h/MemoryAllocation.hpp **** 
  20:src/../h/../h/../h/MemoryAllocation.hpp ****     static FreeMem *fmem_head; //koja pocetna vrednost?
  21:src/../h/../h/../h/MemoryAllocation.hpp **** 
  22:src/../h/../h/../h/MemoryAllocation.hpp **** 
  23:src/../h/../h/../h/MemoryAllocation.hpp **** 
  24:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *instance;
  25:src/../h/../h/../h/MemoryAllocation.hpp ****     int data;
  26:src/../h/../h/../h/MemoryAllocation.hpp **** 
  27:src/../h/../h/../h/MemoryAllocation.hpp **** 
  28:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation() { //OVO SE SADA NIGGDE
  29:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  30:src/../h/../h/../h/MemoryAllocation.hpp ****                                     (char *) HEAP_START_ADDR); //da li smem ovo da castujem u size_
  31:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->next = nullptr;
  32:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->prev = nullptr;
  33:src/../h/../h/../h/MemoryAllocation.hpp ****         data = 0;
  34:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  35:src/../h/../h/../h/MemoryAllocation.hpp **** 
  36:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation(MemoryAllocation const &);
  37:src/../h/../h/../h/MemoryAllocation.hpp **** 
  38:src/../h/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const &);
  39:src/../h/../h/../h/MemoryAllocation.hpp **** 
  40:src/../h/../h/../h/MemoryAllocation.hpp **** public:
  41:src/../h/../h/../h/MemoryAllocation.hpp **** 
  42:src/../h/../h/../h/MemoryAllocation.hpp **** 
  43:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *getInstance() {
  44:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!instance) {
  25              		.loc 2 44 9
  26              	.LBB8:
  27              	.LBB9:
  28              		.loc 2 44 13 is_stmt 0
  29 0010 97070000 		la	a5,_ZN16MemoryAllocation8instanceE
  29      83B70700 
  30 0018 83B70700 		ld	a5,0(a5)
  31              		.loc 2 44 9
  32 001c 63880704 		beqz	a5,.L4
  33              	.L2:
  34              	.LBE9:
  35              	.LBE8:
  24:src/main.cpp  ****     RiscV::w_stvec((uint64) &RiscV::supervisorTrap);
  36              		.loc 1 24 5 is_stmt 1
  37              		.loc 1 24 19 is_stmt 0
  38 0020 97070000 		la	a5,_ZN5RiscV14supervisorTrapEv
  38      83B70700 
  39              	.LVL0:
  40              	.LBB12:
  41              	.LBB13:
  42              		.file 3 "src/../h/RiscV.hpp"
   1:src/../h/RiscV.hpp **** //
   2:src/../h/RiscV.hpp **** // Created by os on 8/14/22.
   3:src/../h/RiscV.hpp **** //
GAS LISTING /tmp/cc64Bnbh.s 			page 3


   4:src/../h/RiscV.hpp **** 
   5:src/../h/RiscV.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/RiscV.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/RiscV.hpp **** #include "../lib/hw.h"
   8:src/../h/RiscV.hpp **** 
   9:src/../h/RiscV.hpp **** class RiscV {
  10:src/../h/RiscV.hpp **** public:
  11:src/../h/RiscV.hpp ****     //pop sstatus.spp and sstatus.spie bits(mora da bude ne inline funkcija)
  12:src/../h/RiscV.hpp ****     static void popSppSpie();
  13:src/../h/RiscV.hpp **** 
  14:src/../h/RiscV.hpp ****     //push x3...x31 registers on stack
  15:src/../h/RiscV.hpp ****     static void pushRegisters();
  16:src/../h/RiscV.hpp **** 
  17:src/../h/RiscV.hpp ****     //pop x3...x31 registers on stack
  18:src/../h/RiscV.hpp ****     static void popRegisters();
  19:src/../h/RiscV.hpp **** 
  20:src/../h/RiscV.hpp ****     //read register scause
  21:src/../h/RiscV.hpp ****     static uint64 r_scause();
  22:src/../h/RiscV.hpp **** 
  23:src/../h/RiscV.hpp ****     //write register scause
  24:src/../h/RiscV.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/RiscV.hpp **** 
  26:src/../h/RiscV.hpp ****     //read register sepc
  27:src/../h/RiscV.hpp ****     static uint64 r_sepc();
  28:src/../h/RiscV.hpp **** 
  29:src/../h/RiscV.hpp ****     //write register sepc
  30:src/../h/RiscV.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/RiscV.hpp **** 
  32:src/../h/RiscV.hpp ****     //read register stvec
  33:src/../h/RiscV.hpp ****     static uint64 r_stvec();
  34:src/../h/RiscV.hpp **** 
  35:src/../h/RiscV.hpp ****     //write register stvec
  36:src/../h/RiscV.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/RiscV.hpp **** 
  38:src/../h/RiscV.hpp ****     //write register stval
  39:src/../h/RiscV.hpp ****     static uint64 r_stval();
  40:src/../h/RiscV.hpp **** 
  41:src/../h/RiscV.hpp ****     //write register stval
  42:src/../h/RiscV.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/RiscV.hpp **** 
  44:src/../h/RiscV.hpp ****     enum BitMaskSip{
  45:src/../h/RiscV.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/RiscV.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/RiscV.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/RiscV.hpp ****     };
  49:src/../h/RiscV.hpp **** 
  50:src/../h/RiscV.hpp ****     //mask set register sip
  51:src/../h/RiscV.hpp ****     static void ms_sip(uint64 mask);
  52:src/../h/RiscV.hpp **** 
  53:src/../h/RiscV.hpp ****     //mask clear register sip
  54:src/../h/RiscV.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/RiscV.hpp **** 
  56:src/../h/RiscV.hpp ****     //read register sip
  57:src/../h/RiscV.hpp ****     static uint64 r_sip();
  58:src/../h/RiscV.hpp **** 
  59:src/../h/RiscV.hpp ****     //write register sip
  60:src/../h/RiscV.hpp ****     static void w_sip(uint64 sip);
GAS LISTING /tmp/cc64Bnbh.s 			page 4


  61:src/../h/RiscV.hpp **** 
  62:src/../h/RiscV.hpp ****     enum BitMaskSstatus{
  63:src/../h/RiscV.hpp ****         SSTATUS_SIE = (1<<1),
  64:src/../h/RiscV.hpp ****         SSTATUS_SPIE = (1<<5),
  65:src/../h/RiscV.hpp ****         SSTATUS_SPP=  (1<<8),
  66:src/../h/RiscV.hpp ****     };
  67:src/../h/RiscV.hpp **** 
  68:src/../h/RiscV.hpp ****     //mask set register sstatus
  69:src/../h/RiscV.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/RiscV.hpp **** 
  71:src/../h/RiscV.hpp ****     //mask clear register sstatus
  72:src/../h/RiscV.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/RiscV.hpp **** 
  74:src/../h/RiscV.hpp ****     //read register sstatus
  75:src/../h/RiscV.hpp ****     static uint64 r_sstatus();
  76:src/../h/RiscV.hpp **** 
  77:src/../h/RiscV.hpp ****     //write register sstatus
  78:src/../h/RiscV.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/RiscV.hpp **** 
  80:src/../h/RiscV.hpp ****     static void supervisorTrap();
  81:src/../h/RiscV.hpp **** 
  82:src/../h/RiscV.hpp **** private:
  83:src/../h/RiscV.hpp ****     //obradjuje trap handler
  84:src/../h/RiscV.hpp ****     static void handleSupervisorTrap();
  85:src/../h/RiscV.hpp **** };
  86:src/../h/RiscV.hpp **** 
  87:src/../h/RiscV.hpp **** inline uint64 RiscV::r_scause() {
  88:src/../h/RiscV.hpp ****     uint64 volatile scause;
  89:src/../h/RiscV.hpp ****     __asm__ volatile("csrr %[scause], scause" : [scause] "=r"(scause));
  90:src/../h/RiscV.hpp ****     return scause;
  91:src/../h/RiscV.hpp **** 
  92:src/../h/RiscV.hpp **** }
  93:src/../h/RiscV.hpp **** 
  94:src/../h/RiscV.hpp **** inline void RiscV::w_scause(uint64 scause){
  95:src/../h/RiscV.hpp ****     __asm__ volatile("csrw scause, %[scause]": : [scause] "r"(scause));
  96:src/../h/RiscV.hpp **** 
  97:src/../h/RiscV.hpp **** }
  98:src/../h/RiscV.hpp **** 
  99:src/../h/RiscV.hpp **** inline uint64 RiscV::r_sepc(){
 100:src/../h/RiscV.hpp ****     uint64  sepc;
 101:src/../h/RiscV.hpp ****     __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 102:src/../h/RiscV.hpp ****     return sepc;
 103:src/../h/RiscV.hpp **** }
 104:src/../h/RiscV.hpp **** 
 105:src/../h/RiscV.hpp **** inline void RiscV::w_sepc(uint64 volatile sepc){
 106:src/../h/RiscV.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]": : [sepc] "r"(sepc));
 107:src/../h/RiscV.hpp **** }
 108:src/../h/RiscV.hpp **** 
 109:src/../h/RiscV.hpp **** inline uint64 RiscV::r_stvec() {
 110:src/../h/RiscV.hpp ****     uint64 volatile stvec;
 111:src/../h/RiscV.hpp ****     __asm__ volatile ("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 112:src/../h/RiscV.hpp ****     return stvec;
 113:src/../h/RiscV.hpp **** }
 114:src/../h/RiscV.hpp **** 
 115:src/../h/RiscV.hpp **** inline void RiscV::w_stvec(uint64 stvec){
 116:src/../h/RiscV.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]": : [stvec] "r"(stvec));
  43              		.loc 3 116 5 is_stmt 1
GAS LISTING /tmp/cc64Bnbh.s 			page 5


  44              		.loc 3 116 68 is_stmt 0
  45              	#APP
  46              	# 116 "src/../h/RiscV.hpp" 1
 117              	}
  47              		csrw stvec, a5
  48              	# 0 "" 2
  49              	.LVL1:
  50              	#NO_APP
  51              	.LBE13:
  52              	.LBE12:
  25:src/main.cpp  ****     //__asm__ volatile ("csrs sstatus, 0x2"); //todo nesto treba sa ovim spoljasnjim prekidima da s
  26:src/main.cpp  ****     //RiscV::ms_sstatus(RiscV::SSTATUS_SIE);
  27:src/main.cpp  ****     thread_t main;
  53              		.loc 1 27 5 is_stmt 1
  28:src/main.cpp  ****     thread_create(&main, nullptr, nullptr);
  54              		.loc 1 28 5
  55              		.loc 1 28 18 is_stmt 0
  56 002c 13060000 		li	a2,0
  57 0030 93050000 		li	a1,0
  58 0034 130584FE 		addi	a0,s0,-24
  59 0038 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  59      E7800000 
  60              	.LVL2:
  29:src/main.cpp  ****     TCB::running = main;
  61              		.loc 1 29 5 is_stmt 1
  62              		.loc 1 29 18 is_stmt 0
  63 0040 97070000 		la	a5,_ZN3TCB7runningE
  63      83B70700 
  64 0048 033784FE 		ld	a4,-24(s0)
  65 004c 23B0E700 		sd	a4,0(a5)
  30:src/main.cpp  **** 
  31:src/main.cpp  **** 
  32:src/main.cpp  **** //    sem_open(&mutex,1);
  33:src/main.cpp  **** //    sem_open(&paper,0);
  34:src/main.cpp  **** //    sem_open(&matches, 0);
  35:src/main.cpp  **** //    sem_open(&agent,0);
  36:src/main.cpp  **** //    sem_open(&tabacco,0);
  37:src/main.cpp  **** //
  38:src/main.cpp  **** //    thread_t t= nullptr;
  39:src/main.cpp  **** //    thread_t t1= nullptr;
  40:src/main.cpp  **** //    thread_t t2= nullptr;
  41:src/main.cpp  **** //    thread_t t3= nullptr;
  42:src/main.cpp  **** //
  43:src/main.cpp  **** //    thread_create(&t, agentfun, nullptr);
  44:src/main.cpp  **** //    thread_create(&t1, smoker1, nullptr);
  45:src/main.cpp  **** //    thread_create(&t2, smoker2, nullptr);
  46:src/main.cpp  **** //    thread_create(&t3, smoker3, nullptr);
  47:src/main.cpp  **** //
  48:src/main.cpp  **** //
  49:src/main.cpp  **** //    sem_open(&dummy,-1);
  50:src/main.cpp  **** //    thread_t tt= nullptr;
  51:src/main.cpp  **** //    thread_t t11= nullptr;
  52:src/main.cpp  **** //    thread_t t21= nullptr;
  53:src/main.cpp  **** //    thread_t t31= nullptr;
  54:src/main.cpp  **** //
  55:src/main.cpp  **** //    thread_create(&tt, dummyfun, nullptr);
  56:src/main.cpp  **** //    thread_create(&t11, dummyfun, nullptr);
GAS LISTING /tmp/cc64Bnbh.s 			page 6


  57:src/main.cpp  **** //    thread_create(&t21, dummyfun, nullptr);
  58:src/main.cpp  **** //    thread_create(&t31, dummyfun, nullptr);
  59:src/main.cpp  **** //    for (int i = 0; i < 30; ++i) {
  60:src/main.cpp  **** //        thread_dispatch();
  61:src/main.cpp  **** //    }
  62:src/main.cpp  **** //    if(sem_wait(dummy)==-1) printString("ubien semafor\n");
  63:src/main.cpp  ****     userMain();
  66              		.loc 1 63 5 is_stmt 1
  67              		.loc 1 63 13 is_stmt 0
  68 0050 97000000 		call	_Z8userMainv@plt
  68      E7800000 
  69              	.LVL3:
  64:src/main.cpp  **** //    char x=getc();
  65:src/main.cpp  **** //    putc(x);
  66:src/main.cpp  **** 
  67:src/main.cpp  ****     return 0;
  70              		.loc 1 67 5 is_stmt 1
  68:src/main.cpp  **** }
  71              		.loc 1 68 1 is_stmt 0
  72 0058 13050000 		li	a0,0
  73 005c 83308101 		ld	ra,24(sp)
  74              		.cfi_remember_state
  75              		.cfi_restore 1
  76 0060 03340101 		ld	s0,16(sp)
  77              		.cfi_restore 8
  78              		.cfi_def_cfa 2, 32
  79 0064 13010102 		addi	sp,sp,32
  80              		.cfi_def_cfa_offset 0
  81 0068 67800000 		jr	ra
  82              	.L4:
  83              		.cfi_restore_state
  84              	.LBB14:
  85              	.LBB11:
  86              	.LBB10:
  45:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head =  (FreeMem*) HEAP_START_ADDR;
  87              		.loc 2 45 13 is_stmt 1
  88              		.loc 2 45 23 is_stmt 0
  89 006c 97070000 		la	a5,HEAP_START_ADDR
  89      83B70700 
  90 0074 83B70700 		ld	a5,0(a5)
  91 0078 97060000 		la	a3,_ZN16MemoryAllocation9fmem_headE
  91      83B60600 
  92 0080 23B0F600 		sd	a5,0(a3)
  46:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  93              		.loc 2 46 13 is_stmt 1
  94              		.loc 2 46 41 is_stmt 0
  95 0084 17070000 		la	a4,HEAP_END_ADDR
  95      03370700 
  96 008c 03370700 		ld	a4,0(a4)
  97              		.loc 2 46 64
  98 0090 3307F740 		sub	a4,a4,a5
  99              		.loc 2 46 29
 100 0094 23B8E700 		sd	a4,16(a5)
  47:src/../h/../h/../h/MemoryAllocation.hpp ****                                         (char *) HEAP_START_ADDR); //da li smem ovo da castujem u s
  48:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->next = nullptr;
 101              		.loc 2 48 13 is_stmt 1
 102              		.loc 2 48 29 is_stmt 0
GAS LISTING /tmp/cc64Bnbh.s 			page 7


 103 0098 23B00700 		sd	zero,0(a5)
  49:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->prev = nullptr;
 104              		.loc 2 49 13 is_stmt 1
 105              		.loc 2 49 24 is_stmt 0
 106 009c 83B70600 		ld	a5,0(a3)
 107              		.loc 2 49 29
 108 00a0 23B40700 		sd	zero,8(a5)
  50:src/../h/../h/../h/MemoryAllocation.hpp ****             static MemoryAllocation* instance;
 109              		.loc 2 50 13 is_stmt 1
  51:src/../h/../h/../h/MemoryAllocation.hpp ****             return instance;
 110              		.loc 2 51 13
 111              		.loc 2 51 20 is_stmt 0
 112 00a4 6FF0DFF7 		j	.L2
 113              	.LBE10:
 114              	.LBE11:
 115              	.LBE14:
 116              		.cfi_endproc
 117              	.LFE48:
 119              	.Letext0:
 120              		.file 4 "src/../lib/hw.h"
 121              		.file 5 "src/../h/tcb.hpp"
 122              		.file 6 "src/../h/../h/semaphore.hpp"
 123              		.file 7 "src/../h/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/cc64Bnbh.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc64Bnbh.s:9      .text:0000000000000000 main
     /tmp/cc64Bnbh.s:13     .text:0000000000000000 .L0 
     /tmp/cc64Bnbh.s:14     .text:0000000000000000 .L0 
     /tmp/cc64Bnbh.s:15     .text:0000000000000004 .L0 
     /tmp/cc64Bnbh.s:18     .text:000000000000000c .L0 
     /tmp/cc64Bnbh.s:19     .text:000000000000000c .L0 
     /tmp/cc64Bnbh.s:21     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:23     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:25     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:28     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:29     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:32     .text:000000000000001c .L0 
     /tmp/cc64Bnbh.s:37     .text:0000000000000020 .L0 
     /tmp/cc64Bnbh.s:38     .text:0000000000000020 .L0 
     /tmp/cc64Bnbh.s:44     .text:0000000000000028 .L0 
  src/../h/RiscV.hpp:116    .text:0000000000000028 .L0 
     /tmp/cc64Bnbh.s:54     .text:000000000000002c .L0 
     /tmp/cc64Bnbh.s:55     .text:000000000000002c .L0 
     /tmp/cc64Bnbh.s:56     .text:000000000000002c .L0 
     /tmp/cc64Bnbh.s:62     .text:0000000000000040 .L0 
     /tmp/cc64Bnbh.s:63     .text:0000000000000040 .L0 
     /tmp/cc64Bnbh.s:67     .text:0000000000000050 .L0 
     /tmp/cc64Bnbh.s:68     .text:0000000000000050 .L0 
     /tmp/cc64Bnbh.s:71     .text:0000000000000058 .L0 
     /tmp/cc64Bnbh.s:72     .text:0000000000000058 .L0 
     /tmp/cc64Bnbh.s:74     .text:0000000000000060 .L0 
     /tmp/cc64Bnbh.s:75     .text:0000000000000060 .L0 
     /tmp/cc64Bnbh.s:77     .text:0000000000000064 .L0 
     /tmp/cc64Bnbh.s:78     .text:0000000000000064 .L0 
     /tmp/cc64Bnbh.s:80     .text:0000000000000068 .L0 
     /tmp/cc64Bnbh.s:83     .text:000000000000006c .L0 
     /tmp/cc64Bnbh.s:88     .text:000000000000006c .L0 
     /tmp/cc64Bnbh.s:89     .text:000000000000006c .L0 
     /tmp/cc64Bnbh.s:94     .text:0000000000000084 .L0 
     /tmp/cc64Bnbh.s:95     .text:0000000000000084 .L0 
     /tmp/cc64Bnbh.s:98     .text:0000000000000090 .L0 
     /tmp/cc64Bnbh.s:100    .text:0000000000000094 .L0 
     /tmp/cc64Bnbh.s:102    .text:0000000000000098 .L0 
     /tmp/cc64Bnbh.s:103    .text:0000000000000098 .L0 
     /tmp/cc64Bnbh.s:105    .text:000000000000009c .L0 
     /tmp/cc64Bnbh.s:106    .text:000000000000009c .L0 
     /tmp/cc64Bnbh.s:108    .text:00000000000000a0 .L0 
     /tmp/cc64Bnbh.s:110    .text:00000000000000a4 .L0 
     /tmp/cc64Bnbh.s:111    .text:00000000000000a4 .L0 
     /tmp/cc64Bnbh.s:112    .text:00000000000000a4 .L0 
     /tmp/cc64Bnbh.s:116    .text:00000000000000a8 .L0 
     /tmp/cc64Bnbh.s:124    .text:00000000000000a8 .L0 
     /tmp/cc64Bnbh.s:29     .text:0000000000000010 .L0 
     /tmp/cc64Bnbh.s:38     .text:0000000000000020 .L0 
     /tmp/cc64Bnbh.s:63     .text:0000000000000040 .L0 
     /tmp/cc64Bnbh.s:89     .text:000000000000006c .L0 
     /tmp/cc64Bnbh.s:91     .text:0000000000000078 .L0 
     /tmp/cc64Bnbh.s:95     .text:0000000000000084 .L0 
     /tmp/cc64Bnbh.s:82     .text:000000000000006c .L4
     /tmp/cc64Bnbh.s:33     .text:0000000000000020 .L2
GAS LISTING /tmp/cc64Bnbh.s 			page 9


     /tmp/cc64Bnbh.s:1239   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc64Bnbh.s:2354   .debug_str:000000000000087a .LASF153
     /tmp/cc64Bnbh.s:2154   .debug_str:000000000000022a .LASF154
     /tmp/cc64Bnbh.s:2164   .debug_str:0000000000000288 .LASF155
     /tmp/cc64Bnbh.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc64Bnbh.s:119    .text:00000000000000a8 .Letext0
     /tmp/cc64Bnbh.s:2080   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc64Bnbh.s:2182   .debug_str:000000000000030d .LASF0
     /tmp/cc64Bnbh.s:2204   .debug_str:00000000000003ab .LASF1
     /tmp/cc64Bnbh.s:2306   .debug_str:0000000000000720 .LASF2
     /tmp/cc64Bnbh.s:2314   .debug_str:0000000000000769 .LASF4
     /tmp/cc64Bnbh.s:2190   .debug_str:0000000000000337 .LASF3
     /tmp/cc64Bnbh.s:2092   .debug_str:0000000000000051 .LASF5
     /tmp/cc64Bnbh.s:2282   .debug_str:0000000000000687 .LASF6
     /tmp/cc64Bnbh.s:2194   .debug_str:0000000000000352 .LASF7
     /tmp/cc64Bnbh.s:2160   .debug_str:0000000000000257 .LASF8
     /tmp/cc64Bnbh.s:2168   .debug_str:00000000000002b2 .LASF9
     /tmp/cc64Bnbh.s:2114   .debug_str:00000000000000e1 .LASF10
     /tmp/cc64Bnbh.s:2152   .debug_str:000000000000021b .LASF11
     /tmp/cc64Bnbh.s:2126   .debug_str:000000000000012c .LASF12
     /tmp/cc64Bnbh.s:2112   .debug_str:00000000000000d1 .LASF13
     /tmp/cc64Bnbh.s:2336   .debug_str:0000000000000802 .LASF14
     /tmp/cc64Bnbh.s:2146   .debug_str:00000000000001d8 .LASF15
     /tmp/cc64Bnbh.s:2330   .debug_str:00000000000007d8 .LASF16
     /tmp/cc64Bnbh.s:2214   .debug_str:00000000000003fc .LASF23
     /tmp/cc64Bnbh.s:2348   .debug_str:0000000000000857 .LASF38
     /tmp/cc64Bnbh.s:2116   .debug_str:00000000000000f0 .LASF17
     /tmp/cc64Bnbh.s:2098   .debug_str:0000000000000069 .LASF18
     /tmp/cc64Bnbh.s:2202   .debug_str:00000000000003a6 .LASF19
     /tmp/cc64Bnbh.s:2326   .debug_str:00000000000007bb .LASF20
     /tmp/cc64Bnbh.s:2122   .debug_str:0000000000000110 .LASF21
     /tmp/cc64Bnbh.s:2198   .debug_str:0000000000000393 .LASF22
     /tmp/cc64Bnbh.s:2242   .debug_str:0000000000000509 .LASF24
     /tmp/cc64Bnbh.s:2308   .debug_str:000000000000072e .LASF25
     /tmp/cc64Bnbh.s:2310   .debug_str:000000000000074b .LASF26
     /tmp/cc64Bnbh.s:2250   .debug_str:000000000000056c .LASF27
     /tmp/cc64Bnbh.s:2392   .debug_str:0000000000000a6a .LASF52
     /tmp/cc64Bnbh.s:2234   .debug_str:00000000000004ba .LASF54
     /tmp/cc64Bnbh.s:2404   .debug_str:0000000000000ad3 .LASF58
     /tmp/cc64Bnbh.s:2344   .debug_str:000000000000082b .LASF60
     /tmp/cc64Bnbh.s:2232   .debug_str:00000000000004b2 .LASF28
     /tmp/cc64Bnbh.s:2266   .debug_str:000000000000060a .LASF30
     /tmp/cc64Bnbh.s:2200   .debug_str:0000000000000398 .LASF29
     /tmp/cc64Bnbh.s:2272   .debug_str:0000000000000637 .LASF31
     /tmp/cc64Bnbh.s:2188   .debug_str:000000000000032d .LASF32
     /tmp/cc64Bnbh.s:2196   .debug_str:0000000000000365 .LASF33
     /tmp/cc64Bnbh.s:2340   .debug_str:0000000000000817 .LASF34
     /tmp/cc64Bnbh.s:2400   .debug_str:0000000000000aab .LASF35
     /tmp/cc64Bnbh.s:2238   .debug_str:00000000000004ec .LASF36
     /tmp/cc64Bnbh.s:2368   .debug_str:000000000000099c .LASF37
     /tmp/cc64Bnbh.s:2262   .debug_str:00000000000005d5 .LASF156
     /tmp/cc64Bnbh.s:2118   .debug_str:00000000000000f5 .LASF39
     /tmp/cc64Bnbh.s:2406   .debug_str:0000000000000adb .LASF40
     /tmp/cc64Bnbh.s:2166   .debug_str:00000000000002a6 .LASF41
     /tmp/cc64Bnbh.s:2108   .debug_str:00000000000000a6 .LASF42
     /tmp/cc64Bnbh.s:2158   .debug_str:000000000000024b .LASF43
     /tmp/cc64Bnbh.s:2084   .debug_str:0000000000000005 .LASF44
GAS LISTING /tmp/cc64Bnbh.s 			page 10


     /tmp/cc64Bnbh.s:2228   .debug_str:0000000000000499 .LASF45
     /tmp/cc64Bnbh.s:2328   .debug_str:00000000000007c5 .LASF46
     /tmp/cc64Bnbh.s:2172   .debug_str:00000000000002db .LASF47
     /tmp/cc64Bnbh.s:2316   .debug_str:0000000000000770 .LASF48
     /tmp/cc64Bnbh.s:2090   .debug_str:0000000000000045 .LASF49
     /tmp/cc64Bnbh.s:2334   .debug_str:00000000000007f5 .LASF50
     /tmp/cc64Bnbh.s:2264   .debug_str:00000000000005e5 .LASF51
     /tmp/cc64Bnbh.s:2274   .debug_str:000000000000065e .LASF157
     /tmp/cc64Bnbh.s:2296   .debug_str:00000000000006ed .LASF68
     /tmp/cc64Bnbh.s:2218   .debug_str:0000000000000427 .LASF70
     /tmp/cc64Bnbh.s:2230   .debug_str:00000000000004a6 .LASF53
     /tmp/cc64Bnbh.s:2150   .debug_str:0000000000000204 .LASF55
     /tmp/cc64Bnbh.s:2294   .debug_str:00000000000006e2 .LASF56
     /tmp/cc64Bnbh.s:2224   .debug_str:0000000000000450 .LASF57
     /tmp/cc64Bnbh.s:2254   .debug_str:0000000000000591 .LASF59
     /tmp/cc64Bnbh.s:2312   .debug_str:0000000000000755 .LASF61
     /tmp/cc64Bnbh.s:2346   .debug_str:000000000000084b .LASF62
     /tmp/cc64Bnbh.s:2320   .debug_str:000000000000077c .LASF63
     /tmp/cc64Bnbh.s:2342   .debug_str:0000000000000820 .LASF64
     /tmp/cc64Bnbh.s:2248   .debug_str:0000000000000555 .LASF65
     /tmp/cc64Bnbh.s:2102   .debug_str:0000000000000082 .LASF66
     /tmp/cc64Bnbh.s:2370   .debug_str:00000000000009be .LASF67
     /tmp/cc64Bnbh.s:2206   .debug_str:00000000000003be .LASF69
     /tmp/cc64Bnbh.s:2356   .debug_str:000000000000093e .LASF71
     /tmp/cc64Bnbh.s:2210   .debug_str:00000000000003d6 .LASF72
     /tmp/cc64Bnbh.s:2292   .debug_str:00000000000006ca .LASF73
     /tmp/cc64Bnbh.s:2350   .debug_str:000000000000085f .LASF158
     /tmp/cc64Bnbh.s:2082   .debug_str:0000000000000000 .LASF74
     /tmp/cc64Bnbh.s:2402   .debug_str:0000000000000acd .LASF75
     /tmp/cc64Bnbh.s:2366   .debug_str:0000000000000994 .LASF76
     /tmp/cc64Bnbh.s:2338   .debug_str:000000000000080e .LASF77
     /tmp/cc64Bnbh.s:2280   .debug_str:000000000000067d .LASF78
     /tmp/cc64Bnbh.s:2288   .debug_str:00000000000006b8 .LASF79
     /tmp/cc64Bnbh.s:2358   .debug_str:000000000000094e .LASF80
     /tmp/cc64Bnbh.s:2176   .debug_str:00000000000002f3 .LASF81
     /tmp/cc64Bnbh.s:2106   .debug_str:0000000000000098 .LASF82
     /tmp/cc64Bnbh.s:2212   .debug_str:00000000000003e3 .LASF84
     /tmp/cc64Bnbh.s:2132   .debug_str:0000000000000171 .LASF159
     /tmp/cc64Bnbh.s:2088   .debug_str:000000000000001d .LASF160
     /tmp/cc64Bnbh.s:2140   .debug_str:00000000000001b3 .LASF83
     /tmp/cc64Bnbh.s:2120   .debug_str:00000000000000fd .LASF85
     /tmp/cc64Bnbh.s:2324   .debug_str:00000000000007aa .LASF86
     /tmp/cc64Bnbh.s:2394   .debug_str:0000000000000a76 .LASF161
     /tmp/cc64Bnbh.s:2298   .debug_str:00000000000006fd .LASF87
     /tmp/cc64Bnbh.s:2300   .debug_str:0000000000000702 .LASF88
     /tmp/cc64Bnbh.s:2178   .debug_str:0000000000000301 .LASF89
     /tmp/cc64Bnbh.s:2260   .debug_str:00000000000005be .LASF90
     /tmp/cc64Bnbh.s:2138   .debug_str:00000000000001ab .LASF91
     /tmp/cc64Bnbh.s:2258   .debug_str:00000000000005a2 .LASF92
     /tmp/cc64Bnbh.s:2192   .debug_str:0000000000000349 .LASF93
     /tmp/cc64Bnbh.s:2110   .debug_str:00000000000000b6 .LASF94
     /tmp/cc64Bnbh.s:2278   .debug_str:0000000000000675 .LASF95
     /tmp/cc64Bnbh.s:2216   .debug_str:000000000000040d .LASF96
     /tmp/cc64Bnbh.s:2104   .debug_str:000000000000008e .LASF97
     /tmp/cc64Bnbh.s:2362   .debug_str:0000000000000960 .LASF98
     /tmp/cc64Bnbh.s:2180   .debug_str:0000000000000307 .LASF99
     /tmp/cc64Bnbh.s:2144   .debug_str:00000000000001c2 .LASF100
GAS LISTING /tmp/cc64Bnbh.s 			page 11


     /tmp/cc64Bnbh.s:2086   .debug_str:0000000000000015 .LASF101
     /tmp/cc64Bnbh.s:2136   .debug_str:0000000000000193 .LASF102
     /tmp/cc64Bnbh.s:2268   .debug_str:000000000000062a .LASF103
     /tmp/cc64Bnbh.s:2382   .debug_str:0000000000000a36 .LASF104
     /tmp/cc64Bnbh.s:2096   .debug_str:0000000000000063 .LASF105
     /tmp/cc64Bnbh.s:2174   .debug_str:00000000000002e8 .LASF106
     /tmp/cc64Bnbh.s:2244   .debug_str:0000000000000523 .LASF107
     /tmp/cc64Bnbh.s:2322   .debug_str:000000000000079c .LASF108
     /tmp/cc64Bnbh.s:2170   .debug_str:00000000000002c0 .LASF109
     /tmp/cc64Bnbh.s:2184   .debug_str:000000000000031a .LASF110
     /tmp/cc64Bnbh.s:2246   .debug_str:000000000000053b .LASF111
     /tmp/cc64Bnbh.s:2374   .debug_str:00000000000009f1 .LASF112
     /tmp/cc64Bnbh.s:2396   .debug_str:0000000000000a81 .LASF113
     /tmp/cc64Bnbh.s:2302   .debug_str:000000000000070c .LASF114
     /tmp/cc64Bnbh.s:2398   .debug_str:0000000000000a96 .LASF115
     /tmp/cc64Bnbh.s:2290   .debug_str:00000000000006c3 .LASF116
     /tmp/cc64Bnbh.s:2352   .debug_str:0000000000000867 .LASF117
     /tmp/cc64Bnbh.s:2256   .debug_str:000000000000059b .LASF118
     /tmp/cc64Bnbh.s:2130   .debug_str:000000000000015e .LASF119
     /tmp/cc64Bnbh.s:2390   .debug_str:0000000000000a62 .LASF120
     /tmp/cc64Bnbh.s:2100   .debug_str:000000000000006e .LASF121
     /tmp/cc64Bnbh.s:2252   .debug_str:0000000000000589 .LASF122
     /tmp/cc64Bnbh.s:2134   .debug_str:000000000000017f .LASF123
     /tmp/cc64Bnbh.s:2220   .debug_str:0000000000000442 .LASF124
     /tmp/cc64Bnbh.s:2156   .debug_str:0000000000000237 .LASF125
     /tmp/cc64Bnbh.s:2410   .debug_str:0000000000000afc .LASF126
     /tmp/cc64Bnbh.s:2408   .debug_str:0000000000000ae8 .LASF127
     /tmp/cc64Bnbh.s:2332   .debug_str:00000000000007ee .LASF128
     /tmp/cc64Bnbh.s:2124   .debug_str:0000000000000119 .LASF129
     /tmp/cc64Bnbh.s:2318   .debug_str:0000000000000775 .LASF130
     /tmp/cc64Bnbh.s:2240   .debug_str:00000000000004f6 .LASF131
     /tmp/cc64Bnbh.s:2142   .debug_str:00000000000001bc .LASF132
     /tmp/cc64Bnbh.s:2276   .debug_str:0000000000000663 .LASF133
     /tmp/cc64Bnbh.s:2186   .debug_str:0000000000000327 .LASF134
     /tmp/cc64Bnbh.s:2208   .debug_str:00000000000003c4 .LASF135
     /tmp/cc64Bnbh.s:2094   .debug_str:0000000000000058 .LASF136
     /tmp/cc64Bnbh.s:2364   .debug_str:000000000000097c .LASF137
     /tmp/cc64Bnbh.s:2304   .debug_str:0000000000000715 .LASF138
     /tmp/cc64Bnbh.s:2376   .debug_str:00000000000009fa .LASF139
     /tmp/cc64Bnbh.s:2386   .debug_str:0000000000000a49 .LASF140
     /tmp/cc64Bnbh.s:2380   .debug_str:0000000000000a20 .LASF141
     /tmp/cc64Bnbh.s:2384   .debug_str:0000000000000a3f .LASF142
     /tmp/cc64Bnbh.s:2148   .debug_str:00000000000001ee .LASF143
     /tmp/cc64Bnbh.s:2388   .debug_str:0000000000000a53 .LASF144
     /tmp/cc64Bnbh.s:2372   .debug_str:00000000000009d5 .LASF145
     /tmp/cc64Bnbh.s:2284   .debug_str:000000000000069a .LASF146
     /tmp/cc64Bnbh.s:2128   .debug_str:000000000000013c .LASF147
     /tmp/cc64Bnbh.s:2270   .debug_str:0000000000000632 .LASF148
     /tmp/cc64Bnbh.s:10     .text:0000000000000000 .LFB48
     /tmp/cc64Bnbh.s:117    .text:00000000000000a8 .LFE48
     /tmp/cc64Bnbh.s:2360   .debug_str:0000000000000958 .LASF162
     /tmp/cc64Bnbh.s:26     .text:0000000000000010 .LBB8
     /tmp/cc64Bnbh.s:2072   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc64Bnbh.s:86     .text:000000000000006c .LBB10
     /tmp/cc64Bnbh.s:113    .text:00000000000000a8 .LBE10
     /tmp/cc64Bnbh.s:40     .text:0000000000000028 .LBB12
     /tmp/cc64Bnbh.s:52     .text:000000000000002c .LBE12
GAS LISTING /tmp/cc64Bnbh.s 			page 12


     /tmp/cc64Bnbh.s:60     .text:0000000000000040 .LVL2
     /tmp/cc64Bnbh.s:69     .text:0000000000000058 .LVL3
     /tmp/cc64Bnbh.s:2222   .debug_str:000000000000044a .LASF163
     /tmp/cc64Bnbh.s:2226   .debug_str:0000000000000469 .LASF164
     /tmp/cc64Bnbh.s:2162   .debug_str:0000000000000267 .LASF149
     /tmp/cc64Bnbh.s:2378   .debug_str:0000000000000a12 .LASF151
     /tmp/cc64Bnbh.s:2236   .debug_str:00000000000004df .LASF150
     /tmp/cc64Bnbh.s:2286   .debug_str:00000000000006af .LASF152
     /tmp/cc64Bnbh.s:125    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc64Bnbh.s:35     .text:0000000000000020 .LBE8
     /tmp/cc64Bnbh.s:84     .text:000000000000006c .LBB14
     /tmp/cc64Bnbh.s:115    .text:00000000000000a8 .LBE14

UNDEFINED SYMBOLS
_ZN16MemoryAllocation8instanceE
_ZN5RiscV14supervisorTrapEv
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z8userMainv
HEAP_START_ADDR
_ZN16MemoryAllocation9fmem_headE
HEAP_END_ADDR
