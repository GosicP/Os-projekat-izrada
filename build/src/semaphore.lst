GAS LISTING /tmp/ccaEfZAR.s 			page 1


   1              		.file	"semaphore.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN9semaphore5blockEv
   9              	_ZN9semaphore5blockEv:
  10              	.LFB29:
  11              		.file 1 "src/semaphore.cpp"
   1:src/semaphore.cpp **** //
   2:src/semaphore.cpp **** // Created by os on 9/6/22.
   3:src/semaphore.cpp **** //
   4:src/semaphore.cpp **** 
   5:src/semaphore.cpp **** #include "../h/semaphore.hpp"
   6:src/semaphore.cpp **** #include "../h/tcb.hpp"
   7:src/semaphore.cpp **** 
   8:src/semaphore.cpp **** void semaphore::block() {
  12              		.loc 1 8 25
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
   9:src/semaphore.cpp ****         //setjmp je linija old=running;
  10:src/semaphore.cpp ****         TCB *old = TCB::running;
  24              		.loc 1 10 9
  25              		.loc 1 10 14 is_stmt 0
  26 0014 97070000 		la	a5,_ZN3TCB7runningE
  26      83B70700 
  27 001c 83B40700 		ld	s1,0(a5)
  28              	.LVL0:
  11:src/semaphore.cpp ****         if (!old->isFinished()) {
  29              		.loc 1 11 9 is_stmt 1
  30              		.loc 1 11 29 is_stmt 0
  31 0020 13850400 		mv	a0,s1
  32 0024 97000000 		call	_ZNK3TCB10isFinishedEv@plt
  32      E7800000 
  33              	.LVL1:
  34              		.loc 1 11 9
  35 002c 630E0502 		beqz	a0,.L4
  36              	.L2:
  12:src/semaphore.cpp ****             blocked.put(old);
  13:src/semaphore.cpp ****         }
  14:src/semaphore.cpp ****         TCB::running = Scheduler::get();
  37              		.loc 1 14 9 is_stmt 1
  38              		.loc 1 14 38 is_stmt 0
  39 0030 97000000 		call	_ZN9Scheduler3getEv@plt
  39      E7800000 
  40              	.LVL2:
  41              		.loc 1 14 22
GAS LISTING /tmp/ccaEfZAR.s 			page 2


  42 0038 97070000 		la	a5,_ZN3TCB7runningE
  42      83B70700 
  43 0040 23B0A700 		sd	a0,0(a5)
  15:src/semaphore.cpp ****         TCB::contextSwitch(&old->context, &TCB::running->context); //TODO proveri ovaj dispatch da 
  44              		.loc 1 15 9 is_stmt 1
  45              		.loc 1 15 27 is_stmt 0
  46 0044 93050501 		addi	a1,a0,16
  47 0048 13850401 		addi	a0,s1,16
  48 004c 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
  48      E7800000 
  49              	.LVL3:
  16:src/semaphore.cpp ****         //longjmp je linija context switch
  17:src/semaphore.cpp ****         //mozda bi zapravo trebao ceo block da bude dispatch, jer pola blocka je slicno dispatchu, 
  18:src/semaphore.cpp ****         //TODO MILICEV JE SAM REKAO DA JE JEDINA RAZLIKA STO NE STAVLJAMO NIT U SCHEDULER NEGO JE S
  19:src/semaphore.cpp ****         //strana 261 u pdfu
  20:src/semaphore.cpp ****         //marinko kaze da je dobar ovaj block
  21:src/semaphore.cpp **** }
  50              		.loc 1 21 1
  51 0054 83308101 		ld	ra,24(sp)
  52              		.cfi_remember_state
  53              		.cfi_restore 1
  54 0058 03340101 		ld	s0,16(sp)
  55              		.cfi_restore 8
  56              		.cfi_def_cfa 2, 32
  57 005c 83348100 		ld	s1,8(sp)
  58              		.cfi_restore 9
  59              	.LVL4:
  60 0060 13010102 		addi	sp,sp,32
  61              		.cfi_def_cfa_offset 0
  62 0064 67800000 		jr	ra
  63              	.LVL5:
  64              	.L4:
  65              		.cfi_restore_state
  12:src/semaphore.cpp ****         }
  66              		.loc 1 12 13 is_stmt 1
  12:src/semaphore.cpp ****         }
  67              		.loc 1 12 24 is_stmt 0
  68 0068 13850400 		mv	a0,s1
  69 006c 97000000 		call	_ZN5Queue3putEP3TCB@plt
  69      E7800000 
  70              	.LVL6:
  71 0074 6FF0DFFB 		j	.L2
  72              		.cfi_endproc
  73              	.LFE29:
  75              		.align	2
  76              		.globl	_ZN9semaphore7unblockEv
  78              	_ZN9semaphore7unblockEv:
  79              	.LFB30:
  22:src/semaphore.cpp **** 
  23:src/semaphore.cpp **** void semaphore::unblock() {
  80              		.loc 1 23 27 is_stmt 1
  81              		.cfi_startproc
  82 0078 130101FF 		addi	sp,sp,-16
  83              		.cfi_def_cfa_offset 16
  84 007c 23341100 		sd	ra,8(sp)
  85 0080 23308100 		sd	s0,0(sp)
  86              		.cfi_offset 1, -8
GAS LISTING /tmp/ccaEfZAR.s 			page 3


  87              		.cfi_offset 8, -16
  88 0084 13040101 		addi	s0,sp,16
  89              		.cfi_def_cfa 8, 0
  24:src/semaphore.cpp ****     TCB* t = blocked.get();
  90              		.loc 1 24 5
  91              		.loc 1 24 25 is_stmt 0
  92 0088 97000000 		call	_ZN5Queue3getEv@plt
  92      E7800000 
  93              	.LVL7:
  25:src/semaphore.cpp ****     Scheduler::put(t);
  94              		.loc 1 25 5 is_stmt 1
  95              		.loc 1 25 19 is_stmt 0
  96 0090 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
  96      E7800000 
  97              	.LVL8:
  26:src/semaphore.cpp **** }
  98              		.loc 1 26 1
  99 0098 83308100 		ld	ra,8(sp)
 100              		.cfi_restore 1
 101 009c 03340100 		ld	s0,0(sp)
 102              		.cfi_restore 8
 103              		.cfi_def_cfa 2, 16
 104 00a0 13010101 		addi	sp,sp,16
 105              		.cfi_def_cfa_offset 0
 106 00a4 67800000 		jr	ra
 107              		.cfi_endproc
 108              	.LFE30:
 110              		.align	2
 111              		.globl	_ZN9semaphore7semOpenEPPS_j
 113              	_ZN9semaphore7semOpenEPPS_j:
 114              	.LFB31:
  27:src/semaphore.cpp **** 
  28:src/semaphore.cpp **** int semaphore::semOpen(semaphore **handle, unsigned int init) {
 115              		.loc 1 28 63 is_stmt 1
 116              		.cfi_startproc
 117              	.LVL9:
 118 00a8 130101FF 		addi	sp,sp,-16
 119              		.cfi_def_cfa_offset 16
 120 00ac 23348100 		sd	s0,8(sp)
 121              		.cfi_offset 8, -8
 122 00b0 13040101 		addi	s0,sp,16
 123              		.cfi_def_cfa 8, 0
  29:src/semaphore.cpp ****     *handle=(semaphore*)MemoryAllocation::mem_alloc(MemoryAllocation::bytesToBlocks(sizeof(semaphor
 124              		.loc 1 29 5
 125              	.LVL10:
 126              		.file 2 "src/../h/../h/../h/MemoryAllocation.hpp"
   1:src/../h/../h/../h/MemoryAllocation.hpp **** #include "../lib/hw.h"
   2:src/../h/../h/../h/MemoryAllocation.hpp **** 
   3:src/../h/../h/../h/MemoryAllocation.hpp **** 
   4:src/../h/../h/../h/MemoryAllocation.hpp **** #ifndef PROJECT_BASE_MEMORYALLOCATION_HPP
   5:src/../h/../h/../h/MemoryAllocation.hpp **** #define PROJECT_BASE_MEMORYALLOCATION_HPP
   6:src/../h/../h/../h/MemoryAllocation.hpp **** 
   7:src/../h/../h/../h/MemoryAllocation.hpp **** 
   8:src/../h/../h/../h/MemoryAllocation.hpp **** class MemoryAllocation {
   9:src/../h/../h/../h/MemoryAllocation.hpp **** 
  10:src/../h/../h/../h/MemoryAllocation.hpp ****     //===========================DEFINICIJA SINGLETON KLASE POCETAK=======================k
  11:src/../h/../h/../h/MemoryAllocation.hpp **** private:
GAS LISTING /tmp/ccaEfZAR.s 			page 4


  12:src/../h/../h/../h/MemoryAllocation.hpp **** 
  13:src/../h/../h/../h/MemoryAllocation.hpp ****     struct FreeMem {
  14:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *next;
  15:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *prev;
  16:src/../h/../h/../h/MemoryAllocation.hpp ****         size_t size;
  17:src/../h/../h/../h/MemoryAllocation.hpp ****     };
  18:src/../h/../h/../h/MemoryAllocation.hpp **** 
  19:src/../h/../h/../h/MemoryAllocation.hpp **** 
  20:src/../h/../h/../h/MemoryAllocation.hpp ****     static FreeMem *fmem_head; //koja pocetna vrednost?
  21:src/../h/../h/../h/MemoryAllocation.hpp **** 
  22:src/../h/../h/../h/MemoryAllocation.hpp **** 
  23:src/../h/../h/../h/MemoryAllocation.hpp **** 
  24:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *instance;
  25:src/../h/../h/../h/MemoryAllocation.hpp ****     int data;
  26:src/../h/../h/../h/MemoryAllocation.hpp **** 
  27:src/../h/../h/../h/MemoryAllocation.hpp **** 
  28:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation() { //OVO SE SADA NIGGDE
  29:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  30:src/../h/../h/../h/MemoryAllocation.hpp ****                                     (char *) HEAP_START_ADDR); //da li smem ovo da castujem u size_
  31:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->next = nullptr;
  32:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->prev = nullptr;
  33:src/../h/../h/../h/MemoryAllocation.hpp ****         data = 0;
  34:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  35:src/../h/../h/../h/MemoryAllocation.hpp **** 
  36:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation(MemoryAllocation const &);
  37:src/../h/../h/../h/MemoryAllocation.hpp **** 
  38:src/../h/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const &);
  39:src/../h/../h/../h/MemoryAllocation.hpp **** 
  40:src/../h/../h/../h/MemoryAllocation.hpp **** public:
  41:src/../h/../h/../h/MemoryAllocation.hpp **** 
  42:src/../h/../h/../h/MemoryAllocation.hpp **** 
  43:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *getInstance() {
  44:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!instance) {
  45:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head =  (FreeMem*) HEAP_START_ADDR;
  46:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  47:src/../h/../h/../h/MemoryAllocation.hpp ****                                         (char *) HEAP_START_ADDR); //da li smem ovo da castujem u s
  48:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->next = nullptr;
  49:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->prev = nullptr;
  50:src/../h/../h/../h/MemoryAllocation.hpp ****             static MemoryAllocation* instance;
  51:src/../h/../h/../h/MemoryAllocation.hpp ****             return instance;
  52:src/../h/../h/../h/MemoryAllocation.hpp ****         }
  53:src/../h/../h/../h/MemoryAllocation.hpp ****         return instance;
  54:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  55:src/../h/../h/../h/MemoryAllocation.hpp **** 
  56:src/../h/../h/../h/MemoryAllocation.hpp **** 
  57:src/../h/../h/../h/MemoryAllocation.hpp ****     int getData() {
  58:src/../h/../h/../h/MemoryAllocation.hpp ****         return this->data;
  59:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  60:src/../h/../h/../h/MemoryAllocation.hpp **** 
  61:src/../h/../h/../h/MemoryAllocation.hpp ****     void setData(int data) {
  62:src/../h/../h/../h/MemoryAllocation.hpp ****         this->data = data;
  63:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  64:src/../h/../h/../h/MemoryAllocation.hpp **** 
  65:src/../h/../h/../h/MemoryAllocation.hpp ****     /*MemoryAllocation(MemoryAllocation const&) = delete;
  66:src/../h/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const&)  = delete;*/
  67:src/../h/../h/../h/MemoryAllocation.hpp **** //===========================DEFINICIJA SINGLETON KLASE KRAJ========================
  68:src/../h/../h/../h/MemoryAllocation.hpp ****     static int bytesToBlocks(size_t size){
GAS LISTING /tmp/ccaEfZAR.s 			page 5


  69:src/../h/../h/../h/MemoryAllocation.hpp ****         return (size+sizeof(FreeMem)+MEM_BLOCK_SIZE-1)/MEM_BLOCK_SIZE;
 127              		.loc 2 69 9
 128              	.LBB16:
 129              	.LBB17:
  70:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  71:src/../h/../h/../h/MemoryAllocation.hpp **** 
  72:src/../h/../h/../h/MemoryAllocation.hpp **** 
  73:src/../h/../h/../h/MemoryAllocation.hpp **** //===========================METODE ZA ALOKACIJU MEMORIJE===========================
  74:src/../h/../h/../h/MemoryAllocation.hpp ****     static void tryToJoin (FreeMem* curr) {
  75:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!curr) return;
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
  77:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->size += curr->next->size;
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
  81:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
  82:src/../h/../h/../h/MemoryAllocation.hpp ****         }
  83:src/../h/../h/../h/MemoryAllocation.hpp **** 
  84:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  85:src/../h/../h/../h/MemoryAllocation.hpp **** 
  86:src/../h/../h/../h/MemoryAllocation.hpp ****     //===================================== mem_free, ali sa ptr ===============
  87:src/../h/../h/../h/MemoryAllocation.hpp ****         static int mem_free(void* ptr) { //radi i kada posaljem sa &
  88:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         if(!fmem_head || ptr < (char*)fmem_head)
  90:src/../h/../h/../h/MemoryAllocation.hpp ****         {
  91:src/../h/../h/../h/MemoryAllocation.hpp ****             cur=nullptr;
  92:src/../h/../h/../h/MemoryAllocation.hpp ****         }else {
  93:src/../h/../h/../h/MemoryAllocation.hpp ****                 for (cur=fmem_head; cur->next!=ptr && ptr>(char*)(cur->next); cur=cur->next); //moz
  94:src/../h/../h/../h/MemoryAllocation.hpp ****             }
  95:src/../h/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newSeg = (FreeMem*)ptr;
  96:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->next=nullptr;
  97:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=nullptr;
  98:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->size=bytesToBlocks(sizeof(ptr))*MEM_BLOCK_SIZE;
  99:src/../h/../h/../h/MemoryAllocation.hpp ****                         //sizeof(ptr);
 100:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=cur;
 101:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(cur) {
 102:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = cur->next;
 103:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 104:src/../h/../h/../h/MemoryAllocation.hpp ****                 else {
 105:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = fmem_head;
 106:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 107:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(newSeg->next) {
 108:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 109:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 110:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur) {
 111:src/../h/../h/../h/MemoryAllocation.hpp ****                     cur->next = newSeg; //zasto ovde odjednom uzme vrednost x8000 umesto x8000f...?
 112:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 113:src/../h/../h/../h/MemoryAllocation.hpp ****                 else {
 114:src/../h/../h/../h/MemoryAllocation.hpp ****                     fmem_head = newSeg;
 115:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 116:src/../h/../h/../h/MemoryAllocation.hpp ****                 // Try to merge with the previous and next segments:
 117:src/../h/../h/../h/MemoryAllocation.hpp ****             tryToJoin(newSeg);
 118:src/../h/../h/../h/MemoryAllocation.hpp ****             tryToJoin(cur);
 119:src/../h/../h/../h/MemoryAllocation.hpp ****             //mozda da fmem_head nije jednako starom fmem_headu?
 120:src/../h/../h/../h/MemoryAllocation.hpp ****             if(newSeg==nullptr){
 121:src/../h/../h/../h/MemoryAllocation.hpp ****                 return -1;
 122:src/../h/../h/../h/MemoryAllocation.hpp ****             }else{return 0;}
GAS LISTING /tmp/ccaEfZAR.s 			page 6


 123:src/../h/../h/../h/MemoryAllocation.hpp **** 
 124:src/../h/../h/../h/MemoryAllocation.hpp **** 
 125:src/../h/../h/../h/MemoryAllocation.hpp ****     }
 126:src/../h/../h/../h/MemoryAllocation.hpp ****     //===================================== kraj probe ==========================
 127:src/../h/../h/../h/MemoryAllocation.hpp **** 
 128:src/../h/../h/../h/MemoryAllocation.hpp **** 
 129:src/../h/../h/../h/MemoryAllocation.hpp **** 
 130:src/../h/../h/../h/MemoryAllocation.hpp ****     /*int mem_free(char* addr, size_t size) {
 131:src/../h/../h/../h/MemoryAllocation.hpp ****         // Find the place where to insert the new free segment (just after cur):
 132:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
 133:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!fmem_head || addr<(char*)fmem_head)
 134:src/../h/../h/../h/MemoryAllocation.hpp ****             cur = 0; // insert as the first
 135:src/../h/../h/../h/MemoryAllocation.hpp ****         else
 136:src/../h/../h/../h/MemoryAllocation.hpp ****             for (cur=fmem_head; cur->next!=0 && addr>(char*)(cur->next);
 137:src/../h/../h/../h/MemoryAllocation.hpp ****                  cur=cur->next);
 138:src/../h/../h/../h/MemoryAllocation.hpp ****             // Insert the new segment after cur:
 139:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* newSeg = (FreeMem*)addr;
 140:src/../h/../h/../h/MemoryAllocation.hpp ****         newSeg->size = size;
 141:src/../h/../h/../h/MemoryAllocation.hpp ****         newSeg->prev = cur;
 142:src/../h/../h/../h/MemoryAllocation.hpp ****         if (cur) newSeg->next = cur->next;
 143:src/../h/../h/../h/MemoryAllocation.hpp ****         else newSeg->next = fmem_head;
 144:src/../h/../h/../h/MemoryAllocation.hpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
 145:src/../h/../h/../h/MemoryAllocation.hpp ****         if (cur) cur->next = newSeg;
 146:src/../h/../h/../h/MemoryAllocation.hpp ****         else fmem_head = newSeg;
 147:src/../h/../h/../h/MemoryAllocation.hpp ****             // Try to merge with the previous and next segments:
 148:src/../h/../h/../h/MemoryAllocation.hpp ****         tryToJoin(newSeg);
 149:src/../h/../h/../h/MemoryAllocation.hpp ****         tryToJoin(cur);
 150:src/../h/../h/../h/MemoryAllocation.hpp ****     }*/
 151:src/../h/../h/../h/MemoryAllocation.hpp **** 
 152:src/../h/../h/../h/MemoryAllocation.hpp ****     static void* mem_alloc(size_t size) {//uopste ne radi, iako u lotsofsmallmallocs pise da radi
 153:src/../h/../h/../h/MemoryAllocation.hpp ****         //size_t x=sizeof(fmem_head);
 154:src/../h/../h/../h/MemoryAllocation.hpp ****         //pozovi ovde samo bytes to blocks od size, da ne moras to da radis iz maina
 155:src/../h/../h/../h/MemoryAllocation.hpp ****         size=(size)*(size_t)MEM_BLOCK_SIZE; //kada je ovo ukljuceno, pravi problem u memfree, so il
 130              		.loc 2 155 9
 156:src/../h/../h/../h/MemoryAllocation.hpp ****         for (FreeMem* cur = fmem_head; cur != nullptr; cur=cur->next){ // U DRUGOJ ITERACIJI FMEM_H
 131              		.loc 2 156 9
 132              	.LBB18:
 133              		.loc 2 156 23 is_stmt 0
 134 00b4 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 134      83B70700 
 135 00bc 83B70700 		ld	a5,0(a5)
 136              	.LVL11:
 137              	.L9:
 138              		.loc 2 156 44 is_stmt 1
 139 00c0 638A070C 		beqz	a5,.L8
 140              	.LBB19:
 157:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 141              		.loc 2 157 13
 142              		.loc 2 157 34 is_stmt 0
 143 00c4 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 143      03370700 
 144 00cc 83360700 		ld	a3,0(a4)
 145 00d0 83B60600 		ld	a3,0(a3)
 146              		.loc 2 157 22
 147 00d4 23B0D700 		sd	a3,0(a5)
 158:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 148              		.loc 2 158 13 is_stmt 1
GAS LISTING /tmp/ccaEfZAR.s 			page 7


 149              		.loc 2 158 34 is_stmt 0
 150 00d8 03370700 		ld	a4,0(a4)
 151 00dc 03368700 		ld	a2,8(a4)
 152              		.loc 2 158 22
 153 00e0 23B4C700 		sd	a2,8(a5)
 159:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 154              		.loc 2 159 13 is_stmt 1
 155              		.loc 2 159 22 is_stmt 0
 156 00e4 03B70701 		ld	a4,16(a5)
 157              		.loc 2 159 13
 158 00e8 1308F003 		li	a6,63
 159 00ec 6376E802 		bleu	a4,a6,.L18
 160:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 160              		.loc 2 160 13 is_stmt 1
 161              	.LBB20:
 162              		.loc 2 160 26 is_stmt 0
 163 00f0 130707FC 		addi	a4,a4,-64
 164              		.loc 2 160 13
 165 00f4 13088001 		li	a6,24
 166 00f8 636CE802 		bgtu	a4,a6,.L10
 161:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 167              		.loc 2 161 17 is_stmt 1
 168 00fc 63020602 		beqz	a2,.L11
 169              		.loc 2 161 32
 170              		.loc 2 161 48 is_stmt 0
 171 0100 2330D600 		sd	a3,0(a2)
 172              	.L12:
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->next) cur->next->prev = cur->prev;
 173              		.loc 2 163 17 is_stmt 1
 174              		.loc 2 163 26 is_stmt 0
 175 0104 03B70700 		ld	a4,0(a5)
 176              		.loc 2 163 17
 177 0108 63060708 		beqz	a4,.L8
 178              		.loc 2 163 32 is_stmt 1
 179              		.loc 2 163 55 is_stmt 0
 180 010c 83B68700 		ld	a3,8(a5)
 181              		.loc 2 163 48
 182 0110 2334D700 		sd	a3,8(a4)
 164:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 183              		.loc 2 164 17 is_stmt 1
 184              		.loc 2 164 24 is_stmt 0
 185 0114 6F000008 		j	.L8
 186              	.L18:
 187              	.LBE20:
 188              	.LBE19:
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 189              		.loc 2 156 59
 190 0118 93870600 		mv	a5,a3
 191              	.LVL12:
 192 011c 6FF05FFA 		j	.L9
 193              	.LVL13:
 194              	.L11:
 195              	.LBB25:
 196              	.LBB23:
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 197              		.loc 2 162 22 is_stmt 1
GAS LISTING /tmp/ccaEfZAR.s 			page 8


 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 198              		.loc 2 162 32 is_stmt 0
 199 0120 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 199      03370700 
 200 0128 2330D700 		sd	a3,0(a4)
 201 012c 6FF09FFD 		j	.L12
 202              	.L10:
 203              	.LBB21:
 165:src/../h/../h/../h/MemoryAllocation.hpp ****             }else {
 166:src/../h/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newfrgm = (FreeMem*)((char*)cur+size);
 204              		.loc 2 166 17 is_stmt 1
 205              		.loc 2 166 26 is_stmt 0
 206 0130 13870704 		addi	a4,a5,64
 207              	.LVL14:
 167:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev=nullptr;
 208              		.loc 2 167 17 is_stmt 1
 209              		.loc 2 167 30 is_stmt 0
 210 0134 23340700 		sd	zero,8(a4)
 168:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next=nullptr;
 211              		.loc 2 168 17 is_stmt 1
 212              		.loc 2 168 30 is_stmt 0
 213 0138 23B00704 		sd	zero,64(a5)
 169:src/../h/../h/../h/MemoryAllocation.hpp ****                 //newfrgm->size=cur->size-size;// DODATO TOKOM PROBE NITI
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->prev) cur->prev->next = newfrgm;
 214              		.loc 2 170 17 is_stmt 1
 215              		.loc 2 170 33 is_stmt 0
 216 013c 83B68700 		ld	a3,8(a5)
 217              		.loc 2 170 25
 218 0140 638A0606 		beqz	a3,.L14
 219              		.loc 2 170 39 is_stmt 1
 220              		.loc 2 170 55 is_stmt 0
 221 0144 23B0E600 		sd	a4,0(a3)
 222              	.L15:
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 223              		.loc 2 172 17 is_stmt 1
 224              		.loc 2 172 33 is_stmt 0
 225 0148 83B60700 		ld	a3,0(a5)
 226              		.loc 2 172 25
 227 014c 63840600 		beqz	a3,.L16
 228              		.loc 2 172 39 is_stmt 1
 229              		.loc 2 172 55 is_stmt 0
 230 0150 23B4E600 		sd	a4,8(a3)
 231              	.L16:
 173:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 232              		.loc 2 173 17 is_stmt 1
 233              		.loc 2 173 38 is_stmt 0
 234 0154 03B68700 		ld	a2,8(a5)
 235              		.loc 2 173 31
 236 0158 2334C700 		sd	a2,8(a4)
 174:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 237              		.loc 2 174 17 is_stmt 1
 238              		.loc 2 174 38 is_stmt 0
 239 015c 83B60700 		ld	a3,0(a5)
 240              		.loc 2 174 31
 241 0160 2330D700 		sd	a3,0(a4)
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
GAS LISTING /tmp/ccaEfZAR.s 			page 9


 242              		.loc 2 175 17 is_stmt 1
 243              		.loc 2 175 38 is_stmt 0
 244 0164 83B70701 		ld	a5,16(a5)
 245              	.LVL15:
 246              		.loc 2 175 42
 247 0168 938707FC 		addi	a5,a5,-64
 248              		.loc 2 175 31
 249 016c 2338F700 		sd	a5,16(a4)
 176:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 250              		.loc 2 176 17 is_stmt 1
 251              		.loc 2 176 35 is_stmt 0
 252 0170 9306070C 		addi	a3,a4,192
 253              		.loc 2 176 27
 254 0174 17080000 		la	a6,_ZN16MemoryAllocation9fmem_headE
 254      03380800 
 255 017c 2330D800 		sd	a3,0(a6)
 177:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
 256              		.loc 2 177 17 is_stmt 1
 257              		.loc 2 177 42 is_stmt 0
 258 0180 03380700 		ld	a6,0(a4)
 259              		.loc 2 177 32
 260 0184 2330070D 		sd	a6,192(a4)
 178:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 261              		.loc 2 178 17 is_stmt 1
 262              		.loc 2 178 32 is_stmt 0
 263 0188 2334C70C 		sd	a2,200(a4)
 179:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->size=newfrgm->size;
 264              		.loc 2 179 17 is_stmt 1
 265              		.loc 2 179 32 is_stmt 0
 266 018c 2338F70C 		sd	a5,208(a4)
 180:src/../h/../h/../h/MemoryAllocation.hpp ****                 //fmem_head = (FreeMem*) (char*)newfrgm;
 181:src/../h/../h/../h/MemoryAllocation.hpp ****                 return newfrgm;
 267              		.loc 2 181 17 is_stmt 1
 268              		.loc 2 181 24 is_stmt 0
 269 0190 93070700 		mv	a5,a4
 270              	.LVL16:
 271              	.L8:
 272              	.LBE21:
 273              	.LBE23:
 274              	.LBE25:
 275              	.LBE18:
 276              	.LBE17:
 277              	.LBE16:
 278              		.loc 1 29 12
 279 0194 2330F500 		sd	a5,0(a0)
  30:src/semaphore.cpp ****     (*handle)->val=init;
 280              		.loc 1 30 5 is_stmt 1
 281              		.loc 1 30 19 is_stmt 0
 282 0198 23A0B700 		sw	a1,0(a5)
  31:src/semaphore.cpp ****     if (*handle==nullptr){
 283              		.loc 1 31 5 is_stmt 1
 284              		.loc 1 31 9 is_stmt 0
 285 019c 83370500 		ld	a5,0(a0)
 286              		.loc 1 31 5
 287 01a0 63840702 		beqz	a5,.L21
  32:src/semaphore.cpp ****         return 0;
  33:src/semaphore.cpp ****     }else{return 1;}
GAS LISTING /tmp/ccaEfZAR.s 			page 10


 288              		.loc 1 33 18
 289 01a4 13051000 		li	a0,1
 290              	.LVL17:
 291              	.L17:
  34:src/semaphore.cpp **** }
 292              		.loc 1 34 1
 293 01a8 03348100 		ld	s0,8(sp)
 294              		.cfi_remember_state
 295              		.cfi_restore 8
 296              		.cfi_def_cfa 2, 16
 297 01ac 13010101 		addi	sp,sp,16
 298              		.cfi_def_cfa_offset 0
 299 01b0 67800000 		jr	ra
 300              	.LVL18:
 301              	.L14:
 302              		.cfi_restore_state
 303              	.LBB29:
 304              	.LBB28:
 305              	.LBB27:
 306              	.LBB26:
 307              	.LBB24:
 308              	.LBB22:
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 309              		.loc 2 171 22 is_stmt 1
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 310              		.loc 2 171 41 is_stmt 0
 311 01b4 9306070C 		addi	a3,a4,192
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 312              		.loc 2 171 32
 313 01b8 17060000 		la	a2,_ZN16MemoryAllocation9fmem_headE
 313      03360600 
 314 01c0 2330D600 		sd	a3,0(a2)
 315 01c4 6FF05FF8 		j	.L15
 316              	.LVL19:
 317              	.L21:
 318              	.LBE22:
 319              	.LBE24:
 320              	.LBE26:
 321              	.LBE27:
 322              	.LBE28:
 323              	.LBE29:
  32:src/semaphore.cpp ****         return 0;
 324              		.loc 1 32 16
 325 01c8 13050000 		li	a0,0
 326              	.LVL20:
 327 01cc 6FF0DFFD 		j	.L17
 328              		.cfi_endproc
 329              	.LFE31:
 331              		.align	2
 332              		.globl	_ZN9semaphore8semCloseEPPS_
 334              	_ZN9semaphore8semCloseEPPS_:
 335              	.LFB32:
  35:src/semaphore.cpp **** 
  36:src/semaphore.cpp **** int semaphore::semClose(semaphore **semID) {
 336              		.loc 1 36 44 is_stmt 1
 337              		.cfi_startproc
 338              	.LVL21:
GAS LISTING /tmp/ccaEfZAR.s 			page 11


 339 01d0 130101FE 		addi	sp,sp,-32
 340              		.cfi_def_cfa_offset 32
 341 01d4 233C1100 		sd	ra,24(sp)
 342 01d8 23388100 		sd	s0,16(sp)
 343 01dc 23349100 		sd	s1,8(sp)
 344              		.cfi_offset 1, -8
 345              		.cfi_offset 8, -16
 346              		.cfi_offset 9, -24
 347 01e0 13040102 		addi	s0,sp,32
 348              		.cfi_def_cfa 8, 0
 349 01e4 93040500 		mv	s1,a0
 350              	.LVL22:
 351              	.L24:
  37:src/semaphore.cpp ****     while(((*semID)->blocked.isEmpty())==false){
 352              		.loc 1 37 5
 353              		.loc 1 37 40
 354              		.loc 1 37 37 is_stmt 0
 355 01e8 97000000 		call	_ZN5Queue7isEmptyEv@plt
 355      E7800000 
 356              	.LVL23:
 357              		.loc 1 37 40
 358 01f0 63180500 		bnez	a0,.L23
  38:src/semaphore.cpp ****         unblock();
 359              		.loc 1 38 9 is_stmt 1
 360              		.loc 1 38 16 is_stmt 0
 361 01f4 97000000 		call	_ZN9semaphore7unblockEv
 361      E7800000 
 362              	.LVL24:
  37:src/semaphore.cpp ****     while(((*semID)->blocked.isEmpty())==false){
 363              		.loc 1 37 5
 364 01fc 6FF0DFFE 		j	.L24
 365              	.L23:
  39:src/semaphore.cpp ****         //TODO wait treba da vrati gresku? Kako to?
  40:src/semaphore.cpp ****     }
  41:src/semaphore.cpp ****     MemoryAllocation::mem_free(*semID); //TODO mozda moze i samo (*handle)=nullptr
 366              		.loc 1 41 5 is_stmt 1
 367              		.loc 1 41 31 is_stmt 0
 368 0200 03B70400 		ld	a4,0(s1)
 369              	.LVL25:
 370              	.LBB36:
 371              	.LBB37:
  88:src/../h/../h/../h/MemoryAllocation.hpp ****         if(!fmem_head || ptr < (char*)fmem_head)
 372              		.loc 2 88 9 is_stmt 1
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         {
 373              		.loc 2 89 9
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         {
 374              		.loc 2 89 12 is_stmt 0
 375 0204 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 375      83B70700 
 376 020c 83B70700 		ld	a5,0(a5)
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         {
 377              		.loc 2 89 9
 378 0210 638E0700 		beqz	a5,.L34
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         {
 379              		.loc 2 89 23
 380 0214 6360F702 		bltu	a4,a5,.L35
 381              	.LVL26:
GAS LISTING /tmp/ccaEfZAR.s 			page 12


 382              	.L26:
  93:src/../h/../h/../h/MemoryAllocation.hpp ****             }
 383              		.loc 2 93 52 is_stmt 1
 384 0218 93860700 		mv	a3,a5
  93:src/../h/../h/../h/MemoryAllocation.hpp ****             }
 385              		.loc 2 93 42 is_stmt 0
 386 021c 83B70700 		ld	a5,0(a5)
 387              	.LVL27:
  93:src/../h/../h/../h/MemoryAllocation.hpp ****             }
 388              		.loc 2 93 52
 389 0220 630CF700 		beq	a4,a5,.L25
 390 0224 E3EAE7FE 		bgtu	a4,a5,.L26
 391 0228 6F000001 		j	.L25
 392              	.LVL28:
 393              	.L34:
  91:src/../h/../h/../h/MemoryAllocation.hpp ****         }else {
 394              		.loc 2 91 16
 395 022c 93860700 		mv	a3,a5
 396 0230 6F008000 		j	.L25
 397              	.L35:
 398 0234 93060000 		li	a3,0
 399              	.LVL29:
 400              	.L25:
  95:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->next=nullptr;
 401              		.loc 2 95 17 is_stmt 1
  96:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=nullptr;
 402              		.loc 2 96 17
  96:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=nullptr;
 403              		.loc 2 96 29 is_stmt 0
 404 0238 23300700 		sd	zero,0(a4)
  97:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->size=bytesToBlocks(sizeof(ptr))*MEM_BLOCK_SIZE;
 405              		.loc 2 97 17 is_stmt 1
  98:src/../h/../h/../h/MemoryAllocation.hpp ****                         //sizeof(ptr);
 406              		.loc 2 98 17
 407              	.LVL30:
 408              	.LBE37:
 409              	.LBE36:
  69:src/../h/../h/../h/MemoryAllocation.hpp ****     }
 410              		.loc 2 69 9
 411              	.LBB48:
 412              	.LBB46:
  98:src/../h/../h/../h/MemoryAllocation.hpp ****                         //sizeof(ptr);
 413              		.loc 2 98 29 is_stmt 0
 414 023c 93070004 		li	a5,64
 415 0240 2338F700 		sd	a5,16(a4)
 100:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(cur) {
 416              		.loc 2 100 17 is_stmt 1
 100:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(cur) {
 417              		.loc 2 100 29 is_stmt 0
 418 0244 2334D700 		sd	a3,8(a4)
 101:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = cur->next;
 419              		.loc 2 101 17 is_stmt 1
 420 0248 63840606 		beqz	a3,.L27
 102:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 421              		.loc 2 102 21
 102:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 422              		.loc 2 102 41 is_stmt 0
GAS LISTING /tmp/ccaEfZAR.s 			page 13


 423 024c 83B70600 		ld	a5,0(a3)
 102:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 424              		.loc 2 102 34
 425 0250 2330F700 		sd	a5,0(a4)
 426              	.L28:
 107:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 427              		.loc 2 107 17 is_stmt 1
 107:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 428              		.loc 2 107 28 is_stmt 0
 429 0254 83370700 		ld	a5,0(a4)
 107:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 430              		.loc 2 107 17
 431 0258 63840700 		beqz	a5,.L29
 108:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 432              		.loc 2 108 21 is_stmt 1
 108:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 433              		.loc 2 108 39 is_stmt 0
 434 025c 23B4E700 		sd	a4,8(a5)
 435              	.L29:
 110:src/../h/../h/../h/MemoryAllocation.hpp ****                     cur->next = newSeg; //zasto ovde odjednom uzme vrednost x8000 umesto x8000f...?
 436              		.loc 2 110 17 is_stmt 1
 437 0260 63820606 		beqz	a3,.L30
 111:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 438              		.loc 2 111 21
 111:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 439              		.loc 2 111 31 is_stmt 0
 440 0264 23B0E600 		sd	a4,0(a3)
 441              	.L31:
 117:src/../h/../h/../h/MemoryAllocation.hpp ****             tryToJoin(cur);
 442              		.loc 2 117 13 is_stmt 1
 443              	.LVL31:
 444              	.LBB38:
 445              	.LBB39:
  75:src/../h/../h/../h/MemoryAllocation.hpp ****         if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
 446              		.loc 2 75 9
 447 0268 630C0700 		beqz	a4,.L32
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 448              		.loc 2 76 9
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 449              		.loc 2 76 19 is_stmt 0
 450 026c 83370700 		ld	a5,0(a4)
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 451              		.loc 2 76 9
 452 0270 63880700 		beqz	a5,.L32
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 453              		.loc 2 76 45
 454 0274 03360701 		ld	a2,16(a4)
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 455              		.loc 2 76 38
 456 0278 B305C700 		add	a1,a4,a2
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 457              		.loc 2 76 24
 458 027c 638CB704 		beq	a5,a1,.L37
 459              	.L32:
 460              	.LVL32:
 461              	.LBE39:
 462              	.LBE38:
GAS LISTING /tmp/ccaEfZAR.s 			page 14


 118:src/../h/../h/../h/MemoryAllocation.hpp ****             //mozda da fmem_head nije jednako starom fmem_headu?
 463              		.loc 2 118 13 is_stmt 1
 464              	.LBB41:
 465              	.LBB42:
  75:src/../h/../h/../h/MemoryAllocation.hpp ****         if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
 466              		.loc 2 75 9
 467 0280 638C0600 		beqz	a3,.L33
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 468              		.loc 2 76 9
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 469              		.loc 2 76 19 is_stmt 0
 470 0284 83B70600 		ld	a5,0(a3)
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 471              		.loc 2 76 9
 472 0288 63880700 		beqz	a5,.L33
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 473              		.loc 2 76 45
 474 028c 03B70601 		ld	a4,16(a3)
 475              	.LVL33:
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 476              		.loc 2 76 38
 477 0290 3386E600 		add	a2,a3,a4
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
 478              		.loc 2 76 24
 479 0294 6380C706 		beq	a5,a2,.L38
 480              	.L33:
 481              	.LVL34:
 482              	.LBE42:
 483              	.LBE41:
 120:src/../h/../h/../h/MemoryAllocation.hpp ****                 return -1;
 484              		.loc 2 120 13 is_stmt 1
 485              	.LBE46:
 486              	.LBE48:
  42:src/semaphore.cpp ****     return 0;
 487              		.loc 1 42 5
  43:src/semaphore.cpp **** }
 488              		.loc 1 43 1 is_stmt 0
 489 0298 13050000 		li	a0,0
 490 029c 83308101 		ld	ra,24(sp)
 491              		.cfi_remember_state
 492              		.cfi_restore 1
 493 02a0 03340101 		ld	s0,16(sp)
 494              		.cfi_restore 8
 495              		.cfi_def_cfa 2, 32
 496 02a4 83348100 		ld	s1,8(sp)
 497              		.cfi_restore 9
 498              	.LVL35:
 499 02a8 13010102 		addi	sp,sp,32
 500              		.cfi_def_cfa_offset 0
 501 02ac 67800000 		jr	ra
 502              	.LVL36:
 503              	.L27:
 504              		.cfi_restore_state
 505              	.LBB49:
 506              	.LBB47:
 105:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 507              		.loc 2 105 21 is_stmt 1
GAS LISTING /tmp/ccaEfZAR.s 			page 15


 105:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 508              		.loc 2 105 34 is_stmt 0
 509 02b0 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 509      83B70700 
 510 02b8 83B70700 		ld	a5,0(a5)
 511 02bc 2330F700 		sd	a5,0(a4)
 512 02c0 6FF05FF9 		j	.L28
 513              	.L30:
 114:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 514              		.loc 2 114 21 is_stmt 1
 114:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 515              		.loc 2 114 31 is_stmt 0
 516 02c4 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 516      83B70700 
 517 02cc 23B0E700 		sd	a4,0(a5)
 518 02d0 6FF09FF9 		j	.L31
 519              	.LVL37:
 520              	.L37:
 521              	.LBB44:
 522              	.LBB40:
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 523              		.loc 2 78 13 is_stmt 1
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 524              		.loc 2 78 39 is_stmt 0
 525 02d4 83B50701 		ld	a1,16(a5)
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 526              		.loc 2 78 24
 527 02d8 3306B600 		add	a2,a2,a1
 528 02dc 2338C700 		sd	a2,16(a4)
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 529              		.loc 2 79 13 is_stmt 1
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 530              		.loc 2 79 38 is_stmt 0
 531 02e0 83B70700 		ld	a5,0(a5)
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 532              		.loc 2 79 24
 533 02e4 2330F700 		sd	a5,0(a4)
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 534              		.loc 2 80 13 is_stmt 1
 535 02e8 E38C07F8 		beqz	a5,.L32
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 536              		.loc 2 80 29
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 537              		.loc 2 80 46 is_stmt 0
 538 02ec 23B4E700 		sd	a4,8(a5)
 539 02f0 6FF01FF9 		j	.L32
 540              	.LVL38:
 541              	.L38:
 542              	.LBE40:
 543              	.LBE44:
 544              	.LBB45:
 545              	.LBB43:
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 546              		.loc 2 78 13 is_stmt 1
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 547              		.loc 2 78 39 is_stmt 0
 548 02f4 03B60701 		ld	a2,16(a5)
GAS LISTING /tmp/ccaEfZAR.s 			page 16


  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
 549              		.loc 2 78 24
 550 02f8 3307C700 		add	a4,a4,a2
 551 02fc 23B8E600 		sd	a4,16(a3)
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 552              		.loc 2 79 13 is_stmt 1
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 553              		.loc 2 79 38 is_stmt 0
 554 0300 83B70700 		ld	a5,0(a5)
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
 555              		.loc 2 79 24
 556 0304 23B0F600 		sd	a5,0(a3)
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 557              		.loc 2 80 13 is_stmt 1
 558 0308 E38807F8 		beqz	a5,.L33
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 559              		.loc 2 80 29
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
 560              		.loc 2 80 46 is_stmt 0
 561 030c 23B4D700 		sd	a3,8(a5)
 562 0310 6FF09FF8 		j	.L33
 563              	.LBE43:
 564              	.LBE45:
 565              	.LBE47:
 566              	.LBE49:
 567              		.cfi_endproc
 568              	.LFE32:
 570              		.align	2
 571              		.globl	_ZN9semaphore7semWaitEPPS_
 573              	_ZN9semaphore7semWaitEPPS_:
 574              	.LFB33:
  44:src/semaphore.cpp **** 
  45:src/semaphore.cpp **** int semaphore::semWait(semaphore **semID) {
 575              		.loc 1 45 43 is_stmt 1
 576              		.cfi_startproc
 577              	.LVL39:
 578 0314 130101FE 		addi	sp,sp,-32
 579              		.cfi_def_cfa_offset 32
 580 0318 233C1100 		sd	ra,24(sp)
 581 031c 23388100 		sd	s0,16(sp)
 582 0320 23349100 		sd	s1,8(sp)
 583              		.cfi_offset 1, -8
 584              		.cfi_offset 8, -16
 585              		.cfi_offset 9, -24
 586 0324 13040102 		addi	s0,sp,32
 587              		.cfi_def_cfa 8, 0
 588 0328 93040500 		mv	s1,a0
  46:src/semaphore.cpp ****     if((--((*semID)->val))<0) { (*semID) ->block(); }
 589              		.loc 1 46 5
 590              		.loc 1 46 13 is_stmt 0
 591 032c 03370500 		ld	a4,0(a0)
 592              		.loc 1 46 22
 593 0330 83270700 		lw	a5,0(a4)
 594              		.loc 1 46 9
 595 0334 9B87F7FF 		addiw	a5,a5,-1
 596              		.loc 1 46 27
 597 0338 2320F700 		sw	a5,0(a4)
GAS LISTING /tmp/ccaEfZAR.s 			page 17


 598              		.loc 1 46 5
 599 033c 13970702 		slli	a4,a5,32
 600 0340 63420702 		bltz	a4,.L44
 601              	.LVL40:
 602              	.L40:
  47:src/semaphore.cpp ****     if(*semID == nullptr){return -1;}
 603              		.loc 1 47 5 is_stmt 1
 604              		.loc 1 47 8 is_stmt 0
 605 0344 83B70400 		ld	a5,0(s1)
 606              		.loc 1 47 5
 607 0348 63840702 		beqz	a5,.L45
  48:src/semaphore.cpp ****     else{return 0;}
 608              		.loc 1 48 17
 609 034c 13050000 		li	a0,0
 610              	.L41:
  49:src/semaphore.cpp ****     return 0;
  50:src/semaphore.cpp **** }
 611              		.loc 1 50 1
 612 0350 83308101 		ld	ra,24(sp)
 613              		.cfi_remember_state
 614              		.cfi_restore 1
 615 0354 03340101 		ld	s0,16(sp)
 616              		.cfi_restore 8
 617              		.cfi_def_cfa 2, 32
 618 0358 83348100 		ld	s1,8(sp)
 619              		.cfi_restore 9
 620              	.LVL41:
 621 035c 13010102 		addi	sp,sp,32
 622              		.cfi_def_cfa_offset 0
 623 0360 67800000 		jr	ra
 624              	.LVL42:
 625              	.L44:
 626              		.cfi_restore_state
  46:src/semaphore.cpp ****     if(*semID == nullptr){return -1;}
 627              		.loc 1 46 33 is_stmt 1 discriminator 1
  46:src/semaphore.cpp ****     if(*semID == nullptr){return -1;}
 628              		.loc 1 46 49 is_stmt 0 discriminator 1
 629 0364 97000000 		call	_ZN9semaphore5blockEv
 629      E7800000 
 630              	.LVL43:
 631 036c 6FF09FFD 		j	.L40
 632              	.L45:
  47:src/semaphore.cpp ****     else{return 0;}
 633              		.loc 1 47 35
 634 0370 1305F0FF 		li	a0,-1
 635 0374 6FF0DFFD 		j	.L41
 636              		.cfi_endproc
 637              	.LFE33:
 639              		.align	2
 640              		.globl	_ZN9semaphore9semSignalEPPS_
 642              	_ZN9semaphore9semSignalEPPS_:
 643              	.LFB34:
  51:src/semaphore.cpp **** 
  52:src/semaphore.cpp **** int semaphore::semSignal(semaphore **semID) {
 644              		.loc 1 52 45 is_stmt 1
 645              		.cfi_startproc
 646              	.LVL44:
GAS LISTING /tmp/ccaEfZAR.s 			page 18


  53:src/semaphore.cpp ****     if((++((*semID)->val))<=0) { (*semID)->block(); }
 647              		.loc 1 53 5
 648              		.loc 1 53 13 is_stmt 0
 649 0378 03370500 		ld	a4,0(a0)
 650              		.loc 1 53 22
 651 037c 83270700 		lw	a5,0(a4)
 652              		.loc 1 53 9
 653 0380 9B871700 		addiw	a5,a5,1
 654 0384 9B860700 		sext.w	a3,a5
 655              		.loc 1 53 27
 656 0388 2320F700 		sw	a5,0(a4)
 657              		.loc 1 53 5
 658 038c 6356D000 		blez	a3,.L52
  54:src/semaphore.cpp ****     return 0;
 659              		.loc 1 54 5 is_stmt 1
  55:src/semaphore.cpp **** }
 660              		.loc 1 55 1 is_stmt 0
 661 0390 13050000 		li	a0,0
 662              	.LVL45:
 663 0394 67800000 		ret
 664              	.LVL46:
 665              	.L52:
  52:src/semaphore.cpp ****     if((++((*semID)->val))<=0) { (*semID)->block(); }
 666              		.loc 1 52 45 discriminator 1
 667 0398 130101FF 		addi	sp,sp,-16
 668              		.cfi_def_cfa_offset 16
 669 039c 23341100 		sd	ra,8(sp)
 670 03a0 23308100 		sd	s0,0(sp)
 671              		.cfi_offset 1, -8
 672              		.cfi_offset 8, -16
 673 03a4 13040101 		addi	s0,sp,16
 674              		.cfi_def_cfa 8, 0
  53:src/semaphore.cpp ****     return 0;
 675              		.loc 1 53 34 is_stmt 1 discriminator 1
  53:src/semaphore.cpp ****     return 0;
 676              		.loc 1 53 49 is_stmt 0 discriminator 1
 677 03a8 97000000 		call	_ZN9semaphore5blockEv
 677      E7800000 
 678              	.LVL47:
  54:src/semaphore.cpp **** }
 679              		.loc 1 54 5 is_stmt 1 discriminator 1
 680              		.loc 1 55 1 is_stmt 0 discriminator 1
 681 03b0 13050000 		li	a0,0
 682 03b4 83308100 		ld	ra,8(sp)
 683              		.cfi_restore 1
 684 03b8 03340100 		ld	s0,0(sp)
 685              		.cfi_restore 8
 686              		.cfi_def_cfa 2, 16
 687 03bc 13010101 		addi	sp,sp,16
 688              		.cfi_def_cfa_offset 0
 689 03c0 67800000 		jr	ra
 690              		.cfi_endproc
 691              	.LFE34:
 693              	.Letext0:
 694              		.file 3 "src/../h/../h/../h/../lib/hw.h"
 695              		.file 4 "src/../h/../h/queue.hpp"
 696              		.file 5 "src/../h/tcb.hpp"
GAS LISTING /tmp/ccaEfZAR.s 			page 19


 697              		.file 6 "src/../h/semaphore.hpp"
 698              		.file 7 "src/../h/../h/Scheduler.hpp"
GAS LISTING /tmp/ccaEfZAR.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 semaphore.cpp
     /tmp/ccaEfZAR.s:9      .text:0000000000000000 _ZN9semaphore5blockEv
     /tmp/ccaEfZAR.s:13     .text:0000000000000000 .L0 
     /tmp/ccaEfZAR.s:14     .text:0000000000000000 .L0 
     /tmp/ccaEfZAR.s:15     .text:0000000000000004 .L0 
     /tmp/ccaEfZAR.s:19     .text:0000000000000010 .L0 
     /tmp/ccaEfZAR.s:20     .text:0000000000000010 .L0 
     /tmp/ccaEfZAR.s:21     .text:0000000000000010 .L0 
     /tmp/ccaEfZAR.s:23     .text:0000000000000014 .L0 
     /tmp/ccaEfZAR.s:25     .text:0000000000000014 .L0 
     /tmp/ccaEfZAR.s:26     .text:0000000000000014 .L0 
     /tmp/ccaEfZAR.s:30     .text:0000000000000020 .L0 
     /tmp/ccaEfZAR.s:31     .text:0000000000000020 .L0 
     /tmp/ccaEfZAR.s:35     .text:000000000000002c .L0 
     /tmp/ccaEfZAR.s:38     .text:0000000000000030 .L0 
     /tmp/ccaEfZAR.s:39     .text:0000000000000030 .L0 
     /tmp/ccaEfZAR.s:42     .text:0000000000000038 .L0 
     /tmp/ccaEfZAR.s:45     .text:0000000000000044 .L0 
     /tmp/ccaEfZAR.s:46     .text:0000000000000044 .L0 
     /tmp/ccaEfZAR.s:51     .text:0000000000000054 .L0 
     /tmp/ccaEfZAR.s:52     .text:0000000000000058 .L0 
     /tmp/ccaEfZAR.s:53     .text:0000000000000058 .L0 
     /tmp/ccaEfZAR.s:55     .text:000000000000005c .L0 
     /tmp/ccaEfZAR.s:56     .text:000000000000005c .L0 
     /tmp/ccaEfZAR.s:58     .text:0000000000000060 .L0 
     /tmp/ccaEfZAR.s:61     .text:0000000000000064 .L0 
     /tmp/ccaEfZAR.s:65     .text:0000000000000068 .L0 
     /tmp/ccaEfZAR.s:67     .text:0000000000000068 .L0 
     /tmp/ccaEfZAR.s:68     .text:0000000000000068 .L0 
     /tmp/ccaEfZAR.s:72     .text:0000000000000078 .L0 
     /tmp/ccaEfZAR.s:78     .text:0000000000000078 _ZN9semaphore7unblockEv
     /tmp/ccaEfZAR.s:81     .text:0000000000000078 .L0 
     /tmp/ccaEfZAR.s:82     .text:0000000000000078 .L0 
     /tmp/ccaEfZAR.s:83     .text:000000000000007c .L0 
     /tmp/ccaEfZAR.s:86     .text:0000000000000084 .L0 
     /tmp/ccaEfZAR.s:87     .text:0000000000000084 .L0 
     /tmp/ccaEfZAR.s:89     .text:0000000000000088 .L0 
     /tmp/ccaEfZAR.s:91     .text:0000000000000088 .L0 
     /tmp/ccaEfZAR.s:92     .text:0000000000000088 .L0 
     /tmp/ccaEfZAR.s:95     .text:0000000000000090 .L0 
     /tmp/ccaEfZAR.s:96     .text:0000000000000090 .L0 
     /tmp/ccaEfZAR.s:99     .text:0000000000000098 .L0 
     /tmp/ccaEfZAR.s:100    .text:000000000000009c .L0 
     /tmp/ccaEfZAR.s:102    .text:00000000000000a0 .L0 
     /tmp/ccaEfZAR.s:103    .text:00000000000000a0 .L0 
     /tmp/ccaEfZAR.s:105    .text:00000000000000a4 .L0 
     /tmp/ccaEfZAR.s:107    .text:00000000000000a8 .L0 
     /tmp/ccaEfZAR.s:113    .text:00000000000000a8 _ZN9semaphore7semOpenEPPS_j
     /tmp/ccaEfZAR.s:116    .text:00000000000000a8 .L0 
     /tmp/ccaEfZAR.s:118    .text:00000000000000a8 .L0 
     /tmp/ccaEfZAR.s:119    .text:00000000000000ac .L0 
     /tmp/ccaEfZAR.s:121    .text:00000000000000b0 .L0 
     /tmp/ccaEfZAR.s:123    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:127    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:130    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:131    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccaEfZAR.s 			page 21


     /tmp/ccaEfZAR.s:133    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:134    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:139    .text:00000000000000c0 .L0 
     /tmp/ccaEfZAR.s:142    .text:00000000000000c4 .L0 
     /tmp/ccaEfZAR.s:143    .text:00000000000000c4 .L0 
     /tmp/ccaEfZAR.s:147    .text:00000000000000d4 .L0 
     /tmp/ccaEfZAR.s:149    .text:00000000000000d8 .L0 
     /tmp/ccaEfZAR.s:150    .text:00000000000000d8 .L0 
     /tmp/ccaEfZAR.s:153    .text:00000000000000e0 .L0 
     /tmp/ccaEfZAR.s:155    .text:00000000000000e4 .L0 
     /tmp/ccaEfZAR.s:156    .text:00000000000000e4 .L0 
     /tmp/ccaEfZAR.s:158    .text:00000000000000e8 .L0 
     /tmp/ccaEfZAR.s:162    .text:00000000000000f0 .L0 
     /tmp/ccaEfZAR.s:163    .text:00000000000000f0 .L0 
     /tmp/ccaEfZAR.s:165    .text:00000000000000f4 .L0 
     /tmp/ccaEfZAR.s:168    .text:00000000000000fc .L0 
     /tmp/ccaEfZAR.s:170    .text:0000000000000100 .L0 
     /tmp/ccaEfZAR.s:171    .text:0000000000000100 .L0 
     /tmp/ccaEfZAR.s:174    .text:0000000000000104 .L0 
     /tmp/ccaEfZAR.s:175    .text:0000000000000104 .L0 
     /tmp/ccaEfZAR.s:177    .text:0000000000000108 .L0 
     /tmp/ccaEfZAR.s:179    .text:000000000000010c .L0 
     /tmp/ccaEfZAR.s:180    .text:000000000000010c .L0 
     /tmp/ccaEfZAR.s:182    .text:0000000000000110 .L0 
     /tmp/ccaEfZAR.s:184    .text:0000000000000114 .L0 
     /tmp/ccaEfZAR.s:185    .text:0000000000000114 .L0 
     /tmp/ccaEfZAR.s:190    .text:0000000000000118 .L0 
     /tmp/ccaEfZAR.s:198    .text:0000000000000120 .L0 
     /tmp/ccaEfZAR.s:199    .text:0000000000000120 .L0 
     /tmp/ccaEfZAR.s:205    .text:0000000000000130 .L0 
     /tmp/ccaEfZAR.s:206    .text:0000000000000130 .L0 
     /tmp/ccaEfZAR.s:209    .text:0000000000000134 .L0 
     /tmp/ccaEfZAR.s:210    .text:0000000000000134 .L0 
     /tmp/ccaEfZAR.s:212    .text:0000000000000138 .L0 
     /tmp/ccaEfZAR.s:213    .text:0000000000000138 .L0 
     /tmp/ccaEfZAR.s:215    .text:000000000000013c .L0 
     /tmp/ccaEfZAR.s:216    .text:000000000000013c .L0 
     /tmp/ccaEfZAR.s:218    .text:0000000000000140 .L0 
     /tmp/ccaEfZAR.s:220    .text:0000000000000144 .L0 
     /tmp/ccaEfZAR.s:221    .text:0000000000000144 .L0 
     /tmp/ccaEfZAR.s:224    .text:0000000000000148 .L0 
     /tmp/ccaEfZAR.s:225    .text:0000000000000148 .L0 
     /tmp/ccaEfZAR.s:227    .text:000000000000014c .L0 
     /tmp/ccaEfZAR.s:229    .text:0000000000000150 .L0 
     /tmp/ccaEfZAR.s:230    .text:0000000000000150 .L0 
     /tmp/ccaEfZAR.s:233    .text:0000000000000154 .L0 
     /tmp/ccaEfZAR.s:234    .text:0000000000000154 .L0 
     /tmp/ccaEfZAR.s:236    .text:0000000000000158 .L0 
     /tmp/ccaEfZAR.s:238    .text:000000000000015c .L0 
     /tmp/ccaEfZAR.s:239    .text:000000000000015c .L0 
     /tmp/ccaEfZAR.s:241    .text:0000000000000160 .L0 
     /tmp/ccaEfZAR.s:243    .text:0000000000000164 .L0 
     /tmp/ccaEfZAR.s:244    .text:0000000000000164 .L0 
     /tmp/ccaEfZAR.s:247    .text:0000000000000168 .L0 
     /tmp/ccaEfZAR.s:249    .text:000000000000016c .L0 
     /tmp/ccaEfZAR.s:251    .text:0000000000000170 .L0 
     /tmp/ccaEfZAR.s:252    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccaEfZAR.s 			page 22


     /tmp/ccaEfZAR.s:254    .text:0000000000000174 .L0 
     /tmp/ccaEfZAR.s:257    .text:0000000000000180 .L0 
     /tmp/ccaEfZAR.s:258    .text:0000000000000180 .L0 
     /tmp/ccaEfZAR.s:260    .text:0000000000000184 .L0 
     /tmp/ccaEfZAR.s:262    .text:0000000000000188 .L0 
     /tmp/ccaEfZAR.s:263    .text:0000000000000188 .L0 
     /tmp/ccaEfZAR.s:265    .text:000000000000018c .L0 
     /tmp/ccaEfZAR.s:266    .text:000000000000018c .L0 
     /tmp/ccaEfZAR.s:268    .text:0000000000000190 .L0 
     /tmp/ccaEfZAR.s:269    .text:0000000000000190 .L0 
     /tmp/ccaEfZAR.s:279    .text:0000000000000194 .L0 
     /tmp/ccaEfZAR.s:281    .text:0000000000000198 .L0 
     /tmp/ccaEfZAR.s:282    .text:0000000000000198 .L0 
     /tmp/ccaEfZAR.s:284    .text:000000000000019c .L0 
     /tmp/ccaEfZAR.s:285    .text:000000000000019c .L0 
     /tmp/ccaEfZAR.s:287    .text:00000000000001a0 .L0 
     /tmp/ccaEfZAR.s:289    .text:00000000000001a4 .L0 
     /tmp/ccaEfZAR.s:293    .text:00000000000001a8 .L0 
     /tmp/ccaEfZAR.s:294    .text:00000000000001ac .L0 
     /tmp/ccaEfZAR.s:295    .text:00000000000001ac .L0 
     /tmp/ccaEfZAR.s:296    .text:00000000000001ac .L0 
     /tmp/ccaEfZAR.s:298    .text:00000000000001b0 .L0 
     /tmp/ccaEfZAR.s:302    .text:00000000000001b4 .L0 
     /tmp/ccaEfZAR.s:310    .text:00000000000001b4 .L0 
     /tmp/ccaEfZAR.s:311    .text:00000000000001b4 .L0 
     /tmp/ccaEfZAR.s:313    .text:00000000000001b8 .L0 
     /tmp/ccaEfZAR.s:325    .text:00000000000001c8 .L0 
     /tmp/ccaEfZAR.s:328    .text:00000000000001d0 .L0 
     /tmp/ccaEfZAR.s:334    .text:00000000000001d0 _ZN9semaphore8semCloseEPPS_
     /tmp/ccaEfZAR.s:337    .text:00000000000001d0 .L0 
     /tmp/ccaEfZAR.s:339    .text:00000000000001d0 .L0 
     /tmp/ccaEfZAR.s:340    .text:00000000000001d4 .L0 
     /tmp/ccaEfZAR.s:344    .text:00000000000001e0 .L0 
     /tmp/ccaEfZAR.s:345    .text:00000000000001e0 .L0 
     /tmp/ccaEfZAR.s:346    .text:00000000000001e0 .L0 
     /tmp/ccaEfZAR.s:348    .text:00000000000001e4 .L0 
     /tmp/ccaEfZAR.s:353    .text:00000000000001e8 .L0 
     /tmp/ccaEfZAR.s:354    .text:00000000000001e8 .L0 
     /tmp/ccaEfZAR.s:355    .text:00000000000001e8 .L0 
     /tmp/ccaEfZAR.s:358    .text:00000000000001f0 .L0 
     /tmp/ccaEfZAR.s:360    .text:00000000000001f4 .L0 
     /tmp/ccaEfZAR.s:361    .text:00000000000001f4 .L0 
     /tmp/ccaEfZAR.s:364    .text:00000000000001fc .L0 
     /tmp/ccaEfZAR.s:367    .text:0000000000000200 .L0 
     /tmp/ccaEfZAR.s:368    .text:0000000000000200 .L0 
     /tmp/ccaEfZAR.s:373    .text:0000000000000204 .L0 
     /tmp/ccaEfZAR.s:374    .text:0000000000000204 .L0 
     /tmp/ccaEfZAR.s:375    .text:0000000000000204 .L0 
     /tmp/ccaEfZAR.s:378    .text:0000000000000210 .L0 
     /tmp/ccaEfZAR.s:380    .text:0000000000000214 .L0 
     /tmp/ccaEfZAR.s:384    .text:0000000000000218 .L0 
     /tmp/ccaEfZAR.s:386    .text:000000000000021c .L0 
     /tmp/ccaEfZAR.s:389    .text:0000000000000220 .L0 
     /tmp/ccaEfZAR.s:395    .text:000000000000022c .L0 
     /tmp/ccaEfZAR.s:402    .text:0000000000000238 .L0 
     /tmp/ccaEfZAR.s:403    .text:0000000000000238 .L0 
     /tmp/ccaEfZAR.s:404    .text:0000000000000238 .L0 
GAS LISTING /tmp/ccaEfZAR.s 			page 23


     /tmp/ccaEfZAR.s:406    .text:000000000000023c .L0 
     /tmp/ccaEfZAR.s:410    .text:000000000000023c .L0 
     /tmp/ccaEfZAR.s:413    .text:000000000000023c .L0 
     /tmp/ccaEfZAR.s:414    .text:000000000000023c .L0 
     /tmp/ccaEfZAR.s:417    .text:0000000000000244 .L0 
     /tmp/ccaEfZAR.s:418    .text:0000000000000244 .L0 
     /tmp/ccaEfZAR.s:420    .text:0000000000000248 .L0 
     /tmp/ccaEfZAR.s:422    .text:000000000000024c .L0 
     /tmp/ccaEfZAR.s:423    .text:000000000000024c .L0 
     /tmp/ccaEfZAR.s:425    .text:0000000000000250 .L0 
     /tmp/ccaEfZAR.s:428    .text:0000000000000254 .L0 
     /tmp/ccaEfZAR.s:429    .text:0000000000000254 .L0 
     /tmp/ccaEfZAR.s:431    .text:0000000000000258 .L0 
     /tmp/ccaEfZAR.s:433    .text:000000000000025c .L0 
     /tmp/ccaEfZAR.s:434    .text:000000000000025c .L0 
     /tmp/ccaEfZAR.s:437    .text:0000000000000260 .L0 
     /tmp/ccaEfZAR.s:439    .text:0000000000000264 .L0 
     /tmp/ccaEfZAR.s:440    .text:0000000000000264 .L0 
     /tmp/ccaEfZAR.s:446    .text:0000000000000268 .L0 
     /tmp/ccaEfZAR.s:447    .text:0000000000000268 .L0 
     /tmp/ccaEfZAR.s:449    .text:000000000000026c .L0 
     /tmp/ccaEfZAR.s:450    .text:000000000000026c .L0 
     /tmp/ccaEfZAR.s:452    .text:0000000000000270 .L0 
     /tmp/ccaEfZAR.s:454    .text:0000000000000274 .L0 
     /tmp/ccaEfZAR.s:456    .text:0000000000000278 .L0 
     /tmp/ccaEfZAR.s:458    .text:000000000000027c .L0 
     /tmp/ccaEfZAR.s:466    .text:0000000000000280 .L0 
     /tmp/ccaEfZAR.s:467    .text:0000000000000280 .L0 
     /tmp/ccaEfZAR.s:469    .text:0000000000000284 .L0 
     /tmp/ccaEfZAR.s:470    .text:0000000000000284 .L0 
     /tmp/ccaEfZAR.s:472    .text:0000000000000288 .L0 
     /tmp/ccaEfZAR.s:474    .text:000000000000028c .L0 
     /tmp/ccaEfZAR.s:477    .text:0000000000000290 .L0 
     /tmp/ccaEfZAR.s:479    .text:0000000000000294 .L0 
     /tmp/ccaEfZAR.s:487    .text:0000000000000298 .L0 
     /tmp/ccaEfZAR.s:488    .text:0000000000000298 .L0 
     /tmp/ccaEfZAR.s:489    .text:0000000000000298 .L0 
     /tmp/ccaEfZAR.s:491    .text:00000000000002a0 .L0 
     /tmp/ccaEfZAR.s:492    .text:00000000000002a0 .L0 
     /tmp/ccaEfZAR.s:494    .text:00000000000002a4 .L0 
     /tmp/ccaEfZAR.s:495    .text:00000000000002a4 .L0 
     /tmp/ccaEfZAR.s:497    .text:00000000000002a8 .L0 
     /tmp/ccaEfZAR.s:500    .text:00000000000002ac .L0 
     /tmp/ccaEfZAR.s:504    .text:00000000000002b0 .L0 
     /tmp/ccaEfZAR.s:508    .text:00000000000002b0 .L0 
     /tmp/ccaEfZAR.s:509    .text:00000000000002b0 .L0 
     /tmp/ccaEfZAR.s:515    .text:00000000000002c4 .L0 
     /tmp/ccaEfZAR.s:516    .text:00000000000002c4 .L0 
     /tmp/ccaEfZAR.s:524    .text:00000000000002d4 .L0 
     /tmp/ccaEfZAR.s:525    .text:00000000000002d4 .L0 
     /tmp/ccaEfZAR.s:527    .text:00000000000002d8 .L0 
     /tmp/ccaEfZAR.s:530    .text:00000000000002e0 .L0 
     /tmp/ccaEfZAR.s:531    .text:00000000000002e0 .L0 
     /tmp/ccaEfZAR.s:533    .text:00000000000002e4 .L0 
     /tmp/ccaEfZAR.s:535    .text:00000000000002e8 .L0 
     /tmp/ccaEfZAR.s:537    .text:00000000000002ec .L0 
     /tmp/ccaEfZAR.s:538    .text:00000000000002ec .L0 
GAS LISTING /tmp/ccaEfZAR.s 			page 24


     /tmp/ccaEfZAR.s:547    .text:00000000000002f4 .L0 
     /tmp/ccaEfZAR.s:548    .text:00000000000002f4 .L0 
     /tmp/ccaEfZAR.s:550    .text:00000000000002f8 .L0 
     /tmp/ccaEfZAR.s:553    .text:0000000000000300 .L0 
     /tmp/ccaEfZAR.s:554    .text:0000000000000300 .L0 
     /tmp/ccaEfZAR.s:556    .text:0000000000000304 .L0 
     /tmp/ccaEfZAR.s:558    .text:0000000000000308 .L0 
     /tmp/ccaEfZAR.s:560    .text:000000000000030c .L0 
     /tmp/ccaEfZAR.s:561    .text:000000000000030c .L0 
     /tmp/ccaEfZAR.s:567    .text:0000000000000314 .L0 
     /tmp/ccaEfZAR.s:573    .text:0000000000000314 _ZN9semaphore7semWaitEPPS_
     /tmp/ccaEfZAR.s:576    .text:0000000000000314 .L0 
     /tmp/ccaEfZAR.s:578    .text:0000000000000314 .L0 
     /tmp/ccaEfZAR.s:579    .text:0000000000000318 .L0 
     /tmp/ccaEfZAR.s:583    .text:0000000000000324 .L0 
     /tmp/ccaEfZAR.s:584    .text:0000000000000324 .L0 
     /tmp/ccaEfZAR.s:585    .text:0000000000000324 .L0 
     /tmp/ccaEfZAR.s:587    .text:0000000000000328 .L0 
     /tmp/ccaEfZAR.s:590    .text:000000000000032c .L0 
     /tmp/ccaEfZAR.s:591    .text:000000000000032c .L0 
     /tmp/ccaEfZAR.s:593    .text:0000000000000330 .L0 
     /tmp/ccaEfZAR.s:595    .text:0000000000000334 .L0 
     /tmp/ccaEfZAR.s:597    .text:0000000000000338 .L0 
     /tmp/ccaEfZAR.s:599    .text:000000000000033c .L0 
     /tmp/ccaEfZAR.s:604    .text:0000000000000344 .L0 
     /tmp/ccaEfZAR.s:605    .text:0000000000000344 .L0 
     /tmp/ccaEfZAR.s:607    .text:0000000000000348 .L0 
     /tmp/ccaEfZAR.s:609    .text:000000000000034c .L0 
     /tmp/ccaEfZAR.s:612    .text:0000000000000350 .L0 
     /tmp/ccaEfZAR.s:613    .text:0000000000000354 .L0 
     /tmp/ccaEfZAR.s:614    .text:0000000000000354 .L0 
     /tmp/ccaEfZAR.s:616    .text:0000000000000358 .L0 
     /tmp/ccaEfZAR.s:617    .text:0000000000000358 .L0 
     /tmp/ccaEfZAR.s:619    .text:000000000000035c .L0 
     /tmp/ccaEfZAR.s:622    .text:0000000000000360 .L0 
     /tmp/ccaEfZAR.s:626    .text:0000000000000364 .L0 
     /tmp/ccaEfZAR.s:628    .text:0000000000000364 .L0 
     /tmp/ccaEfZAR.s:629    .text:0000000000000364 .L0 
     /tmp/ccaEfZAR.s:634    .text:0000000000000370 .L0 
     /tmp/ccaEfZAR.s:636    .text:0000000000000378 .L0 
     /tmp/ccaEfZAR.s:642    .text:0000000000000378 _ZN9semaphore9semSignalEPPS_
     /tmp/ccaEfZAR.s:645    .text:0000000000000378 .L0 
     /tmp/ccaEfZAR.s:647    .text:0000000000000378 .L0 
     /tmp/ccaEfZAR.s:648    .text:0000000000000378 .L0 
     /tmp/ccaEfZAR.s:649    .text:0000000000000378 .L0 
     /tmp/ccaEfZAR.s:651    .text:000000000000037c .L0 
     /tmp/ccaEfZAR.s:653    .text:0000000000000380 .L0 
     /tmp/ccaEfZAR.s:656    .text:0000000000000388 .L0 
     /tmp/ccaEfZAR.s:658    .text:000000000000038c .L0 
     /tmp/ccaEfZAR.s:660    .text:0000000000000390 .L0 
     /tmp/ccaEfZAR.s:661    .text:0000000000000390 .L0 
     /tmp/ccaEfZAR.s:667    .text:0000000000000398 .L0 
     /tmp/ccaEfZAR.s:668    .text:000000000000039c .L0 
     /tmp/ccaEfZAR.s:671    .text:00000000000003a4 .L0 
     /tmp/ccaEfZAR.s:672    .text:00000000000003a4 .L0 
     /tmp/ccaEfZAR.s:674    .text:00000000000003a8 .L0 
     /tmp/ccaEfZAR.s:676    .text:00000000000003a8 .L0 
GAS LISTING /tmp/ccaEfZAR.s 			page 25


     /tmp/ccaEfZAR.s:677    .text:00000000000003a8 .L0 
     /tmp/ccaEfZAR.s:680    .text:00000000000003b0 .L0 
     /tmp/ccaEfZAR.s:681    .text:00000000000003b0 .L0 
     /tmp/ccaEfZAR.s:683    .text:00000000000003b8 .L0 
     /tmp/ccaEfZAR.s:685    .text:00000000000003bc .L0 
     /tmp/ccaEfZAR.s:686    .text:00000000000003bc .L0 
     /tmp/ccaEfZAR.s:688    .text:00000000000003c0 .L0 
     /tmp/ccaEfZAR.s:690    .text:00000000000003c4 .L0 
     /tmp/ccaEfZAR.s:699    .text:00000000000003c4 .L0 
     /tmp/ccaEfZAR.s:26     .text:0000000000000014 .L0 
     /tmp/ccaEfZAR.s:42     .text:0000000000000038 .L0 
     /tmp/ccaEfZAR.s:134    .text:00000000000000b4 .L0 
     /tmp/ccaEfZAR.s:143    .text:00000000000000c4 .L0 
     /tmp/ccaEfZAR.s:199    .text:0000000000000120 .L0 
     /tmp/ccaEfZAR.s:254    .text:0000000000000174 .L0 
     /tmp/ccaEfZAR.s:313    .text:00000000000001b8 .L0 
     /tmp/ccaEfZAR.s:375    .text:0000000000000204 .L0 
     /tmp/ccaEfZAR.s:509    .text:00000000000002b0 .L0 
     /tmp/ccaEfZAR.s:516    .text:00000000000002c4 .L0 
     /tmp/ccaEfZAR.s:64     .text:0000000000000068 .L4
     /tmp/ccaEfZAR.s:36     .text:0000000000000030 .L2
     /tmp/ccaEfZAR.s:271    .text:0000000000000194 .L8
     /tmp/ccaEfZAR.s:186    .text:0000000000000118 .L18
     /tmp/ccaEfZAR.s:202    .text:0000000000000130 .L10
     /tmp/ccaEfZAR.s:194    .text:0000000000000120 .L11
     /tmp/ccaEfZAR.s:137    .text:00000000000000c0 .L9
     /tmp/ccaEfZAR.s:172    .text:0000000000000104 .L12
     /tmp/ccaEfZAR.s:301    .text:00000000000001b4 .L14
     /tmp/ccaEfZAR.s:231    .text:0000000000000154 .L16
     /tmp/ccaEfZAR.s:317    .text:00000000000001c8 .L21
     /tmp/ccaEfZAR.s:222    .text:0000000000000148 .L15
     /tmp/ccaEfZAR.s:291    .text:00000000000001a8 .L17
     /tmp/ccaEfZAR.s:365    .text:0000000000000200 .L23
     /tmp/ccaEfZAR.s:351    .text:00000000000001e8 .L24
     /tmp/ccaEfZAR.s:393    .text:000000000000022c .L34
     /tmp/ccaEfZAR.s:397    .text:0000000000000234 .L35
     /tmp/ccaEfZAR.s:400    .text:0000000000000238 .L25
     /tmp/ccaEfZAR.s:382    .text:0000000000000218 .L26
     /tmp/ccaEfZAR.s:503    .text:00000000000002b0 .L27
     /tmp/ccaEfZAR.s:435    .text:0000000000000260 .L29
     /tmp/ccaEfZAR.s:513    .text:00000000000002c4 .L30
     /tmp/ccaEfZAR.s:459    .text:0000000000000280 .L32
     /tmp/ccaEfZAR.s:520    .text:00000000000002d4 .L37
     /tmp/ccaEfZAR.s:480    .text:0000000000000298 .L33
     /tmp/ccaEfZAR.s:541    .text:00000000000002f4 .L38
     /tmp/ccaEfZAR.s:426    .text:0000000000000254 .L28
     /tmp/ccaEfZAR.s:441    .text:0000000000000268 .L31
     /tmp/ccaEfZAR.s:625    .text:0000000000000364 .L44
     /tmp/ccaEfZAR.s:632    .text:0000000000000370 .L45
     /tmp/ccaEfZAR.s:602    .text:0000000000000344 .L40
     /tmp/ccaEfZAR.s:610    .text:0000000000000350 .L41
     /tmp/ccaEfZAR.s:665    .text:0000000000000398 .L52
     /tmp/ccaEfZAR.s:1778   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccaEfZAR.s:3185   .debug_str:00000000000005d2 .LASF108
     /tmp/ccaEfZAR.s:3075   .debug_str:00000000000002bc .LASF109
     /tmp/ccaEfZAR.s:3063   .debug_str:0000000000000230 .LASF110
     /tmp/ccaEfZAR.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccaEfZAR.s 			page 26


     /tmp/ccaEfZAR.s:693    .text:00000000000003c4 .Letext0
     /tmp/ccaEfZAR.s:2987   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccaEfZAR.s:3115   .debug_str:0000000000000408 .LASF0
     /tmp/ccaEfZAR.s:3127   .debug_str:000000000000043c .LASF1
     /tmp/ccaEfZAR.s:3103   .debug_str:00000000000003b8 .LASF2
     /tmp/ccaEfZAR.s:3083   .debug_str:0000000000000318 .LASF4
     /tmp/ccaEfZAR.s:3167   .debug_str:0000000000000546 .LASF3
     /tmp/ccaEfZAR.s:3007   .debug_str:000000000000007f .LASF5
     /tmp/ccaEfZAR.s:3131   .debug_str:0000000000000456 .LASF6
     /tmp/ccaEfZAR.s:3113   .debug_str:00000000000003f5 .LASF7
     /tmp/ccaEfZAR.s:3197   .debug_str:00000000000006e3 .LASF8
     /tmp/ccaEfZAR.s:3069   .debug_str:0000000000000275 .LASF9
     /tmp/ccaEfZAR.s:3143   .debug_str:00000000000004af .LASF10
     /tmp/ccaEfZAR.s:3189   .debug_str:00000000000006a2 .LASF11
     /tmp/ccaEfZAR.s:3013   .debug_str:00000000000000a2 .LASF12
     /tmp/ccaEfZAR.s:2993   .debug_str:0000000000000014 .LASF13
     /tmp/ccaEfZAR.s:3025   .debug_str:00000000000000ea .LASF14
     /tmp/ccaEfZAR.s:3161   .debug_str:000000000000051c .LASF15
     /tmp/ccaEfZAR.s:3039   .debug_str:0000000000000155 .LASF16
     /tmp/ccaEfZAR.s:3179   .debug_str:00000000000005af .LASF23
     /tmp/ccaEfZAR.s:3061   .debug_str:0000000000000228 .LASF44
     /tmp/ccaEfZAR.s:3221   .debug_str:00000000000007d1 .LASF17
     /tmp/ccaEfZAR.s:3209   .debug_str:0000000000000756 .LASF18
     /tmp/ccaEfZAR.s:3181   .debug_str:00000000000005c0 .LASF19
     /tmp/ccaEfZAR.s:3141   .debug_str:00000000000004a5 .LASF20
     /tmp/ccaEfZAR.s:3121   .debug_str:0000000000000424 .LASF21
     /tmp/ccaEfZAR.s:3155   .debug_str:0000000000000501 .LASF22
     /tmp/ccaEfZAR.s:3173   .debug_str:0000000000000572 .LASF24
     /tmp/ccaEfZAR.s:3137   .debug_str:000000000000047e .LASF25
     /tmp/ccaEfZAR.s:3111   .debug_str:00000000000003eb .LASF26
     /tmp/ccaEfZAR.s:3041   .debug_str:000000000000016b .LASF27
     /tmp/ccaEfZAR.s:3187   .debug_str:0000000000000696 .LASF40
     /tmp/ccaEfZAR.s:3091   .debug_str:0000000000000335 .LASF42
     /tmp/ccaEfZAR.s:3017   .debug_str:00000000000000c3 .LASF60
     /tmp/ccaEfZAR.s:3217   .debug_str:0000000000000783 .LASF62
     /tmp/ccaEfZAR.s:3021   .debug_str:00000000000000d8 .LASF28
     /tmp/ccaEfZAR.s:3071   .debug_str:0000000000000283 .LASF30
     /tmp/ccaEfZAR.s:3165   .debug_str:0000000000000538 .LASF29
     /tmp/ccaEfZAR.s:3051   .debug_str:00000000000001c3 .LASF31
     /tmp/ccaEfZAR.s:3053   .debug_str:00000000000001ea .LASF32
     /tmp/ccaEfZAR.s:3219   .debug_str:00000000000007a3 .LASF33
     /tmp/ccaEfZAR.s:3147   .debug_str:00000000000004c3 .LASF34
     /tmp/ccaEfZAR.s:3095   .debug_str:0000000000000367 .LASF35
     /tmp/ccaEfZAR.s:3171   .debug_str:0000000000000568 .LASF36
     /tmp/ccaEfZAR.s:3191   .debug_str:00000000000006b1 .LASF37
     /tmp/ccaEfZAR.s:3157   .debug_str:0000000000000506 .LASF38
     /tmp/ccaEfZAR.s:3097   .debug_str:0000000000000389 .LASF39
     /tmp/ccaEfZAR.s:3033   .debug_str:0000000000000124 .LASF111
     /tmp/ccaEfZAR.s:3159   .debug_str:000000000000050c .LASF99
     /tmp/ccaEfZAR.s:3031   .debug_str:000000000000011c .LASF41
     /tmp/ccaEfZAR.s:3011   .debug_str:000000000000008e .LASF43
     /tmp/ccaEfZAR.s:3169   .debug_str:0000000000000558 .LASF112
     /tmp/ccaEfZAR.s:2997   .debug_str:000000000000003c .LASF45
     /tmp/ccaEfZAR.s:3207   .debug_str:0000000000000749 .LASF46
     /tmp/ccaEfZAR.s:3005   .debug_str:0000000000000073 .LASF47
     /tmp/ccaEfZAR.s:3065   .debug_str:000000000000024e .LASF48
     /tmp/ccaEfZAR.s:2991   .debug_str:0000000000000008 .LASF49
GAS LISTING /tmp/ccaEfZAR.s 			page 27


     /tmp/ccaEfZAR.s:3175   .debug_str:000000000000058c .LASF50
     /tmp/ccaEfZAR.s:3183   .debug_str:00000000000005c5 .LASF51
     /tmp/ccaEfZAR.s:3177   .debug_str:000000000000059c .LASF52
     /tmp/ccaEfZAR.s:3019   .debug_str:00000000000000cb .LASF53
     /tmp/ccaEfZAR.s:3047   .debug_str:00000000000001b8 .LASF54
     /tmp/ccaEfZAR.s:3151   .debug_str:00000000000004f0 .LASF55
     /tmp/ccaEfZAR.s:3093   .debug_str:000000000000035a .LASF56
     /tmp/ccaEfZAR.s:3149   .debug_str:00000000000004cc .LASF57
     /tmp/ccaEfZAR.s:3153   .debug_str:00000000000004fc .LASF113
     /tmp/ccaEfZAR.s:3029   .debug_str:000000000000010c .LASF66
     /tmp/ccaEfZAR.s:3101   .debug_str:000000000000039d .LASF68
     /tmp/ccaEfZAR.s:3003   .debug_str:0000000000000067 .LASF58
     /tmp/ccaEfZAR.s:3035   .debug_str:0000000000000138 .LASF59
     /tmp/ccaEfZAR.s:3133   .debug_str:0000000000000469 .LASF61
     /tmp/ccaEfZAR.s:3067   .debug_str:000000000000025e .LASF63
     /tmp/ccaEfZAR.s:3105   .debug_str:00000000000003c6 .LASF64
     /tmp/ccaEfZAR.s:3079   .debug_str:00000000000002d9 .LASF65
     /tmp/ccaEfZAR.s:3163   .debug_str:0000000000000532 .LASF67
     /tmp/ccaEfZAR.s:3109   .debug_str:00000000000003db .LASF69
     /tmp/ccaEfZAR.s:3125   .debug_str:0000000000000434 .LASF114
     /tmp/ccaEfZAR.s:3087   .debug_str:0000000000000328 .LASF70
     /tmp/ccaEfZAR.s:3119   .debug_str:000000000000041e .LASF71
     /tmp/ccaEfZAR.s:3089   .debug_str:000000000000032d .LASF72
     /tmp/ccaEfZAR.s:3085   .debug_str:000000000000031f .LASF73
     /tmp/ccaEfZAR.s:3215   .debug_str:0000000000000779 .LASF74
     /tmp/ccaEfZAR.s:3099   .debug_str:000000000000038f .LASF75
     /tmp/ccaEfZAR.s:3073   .debug_str:00000000000002a3 .LASF77
     /tmp/ccaEfZAR.s:3205   .debug_str:000000000000073b .LASF101
     /tmp/ccaEfZAR.s:3081   .debug_str:00000000000002f0 .LASF115
     /tmp/ccaEfZAR.s:3117   .debug_str:0000000000000415 .LASF76
     /tmp/ccaEfZAR.s:3057   .debug_str:0000000000000210 .LASF78
     /tmp/ccaEfZAR.s:3015   .debug_str:00000000000000b2 .LASF79
     /tmp/ccaEfZAR.s:3077   .debug_str:00000000000002ce .LASF116
     /tmp/ccaEfZAR.s:3059   .debug_str:0000000000000223 .LASF80
     /tmp/ccaEfZAR.s:3023   .debug_str:00000000000000e0 .LASF81
     /tmp/ccaEfZAR.s:3211   .debug_str:000000000000075b .LASF82
     /tmp/ccaEfZAR.s:3199   .debug_str:00000000000006f3 .LASF83
     /tmp/ccaEfZAR.s:3195   .debug_str:00000000000006db .LASF84
     /tmp/ccaEfZAR.s:3043   .debug_str:0000000000000188 .LASF85
     /tmp/ccaEfZAR.s:3107   .debug_str:00000000000003d2 .LASF86
     /tmp/ccaEfZAR.s:3055   .debug_str:00000000000001f4 .LASF87
     /tmp/ccaEfZAR.s:3001   .debug_str:000000000000005f .LASF88
     /tmp/ccaEfZAR.s:2999   .debug_str:0000000000000044 .LASF89
     /tmp/ccaEfZAR.s:3135   .debug_str:0000000000000474 .LASF90
     /tmp/ccaEfZAR.s:3201   .debug_str:000000000000070a .LASF91
     /tmp/ccaEfZAR.s:3049   .debug_str:00000000000001bd .LASF92
     /tmp/ccaEfZAR.s:3027   .debug_str:00000000000000f6 .LASF93
     /tmp/ccaEfZAR.s:3009   .debug_str:0000000000000086 .LASF94
     /tmp/ccaEfZAR.s:3213   .debug_str:0000000000000761 .LASF95
     /tmp/ccaEfZAR.s:2989   .debug_str:0000000000000000 .LASF96
     /tmp/ccaEfZAR.s:3139   .debug_str:000000000000049b .LASF97
     /tmp/ccaEfZAR.s:3203   .debug_str:0000000000000727 .LASF98
     /tmp/ccaEfZAR.s:3045   .debug_str:00000000000001a4 .LASF100
     /tmp/ccaEfZAR.s:2995   .debug_str:0000000000000024 .LASF117
     /tmp/ccaEfZAR.s:643    .text:0000000000000378 .LFB34
     /tmp/ccaEfZAR.s:691    .text:00000000000003c4 .LFE34
     /tmp/ccaEfZAR.s:3037   .debug_str:000000000000014f .LASF102
GAS LISTING /tmp/ccaEfZAR.s 			page 28


     /tmp/ccaEfZAR.s:2702   .debug_loc:0000000000000000 .LLST13
     /tmp/ccaEfZAR.s:678    .text:00000000000003b0 .LVL47
     /tmp/ccaEfZAR.s:574    .text:0000000000000314 .LFB33
     /tmp/ccaEfZAR.s:637    .text:0000000000000378 .LFE33
     /tmp/ccaEfZAR.s:2727   .debug_loc:0000000000000062 .LLST12
     /tmp/ccaEfZAR.s:630    .text:000000000000036c .LVL43
     /tmp/ccaEfZAR.s:335    .text:00000000000001d0 .LFB32
     /tmp/ccaEfZAR.s:568    .text:0000000000000314 .LFE32
     /tmp/ccaEfZAR.s:2749   .debug_loc:00000000000000c1 .LLST6
     /tmp/ccaEfZAR.s:370    .text:0000000000000204 .LBB36
     /tmp/ccaEfZAR.s:2947   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccaEfZAR.s:2771   .debug_loc:0000000000000120 .LLST7
     /tmp/ccaEfZAR.s:2782   .debug_loc:0000000000000156 .LLST8
     /tmp/ccaEfZAR.s:2811   .debug_loc:00000000000001da .LLST9
     /tmp/ccaEfZAR.s:444    .text:0000000000000268 .LBB38
     /tmp/ccaEfZAR.s:2822   .debug_loc:0000000000000210 .LLST10
     /tmp/ccaEfZAR.s:464    .text:0000000000000280 .LBB41
     /tmp/ccaEfZAR.s:2833   .debug_loc:0000000000000246 .LLST11
     /tmp/ccaEfZAR.s:356    .text:00000000000001f0 .LVL23
     /tmp/ccaEfZAR.s:362    .text:00000000000001fc .LVL24
     /tmp/ccaEfZAR.s:114    .text:00000000000000a8 .LFB31
     /tmp/ccaEfZAR.s:329    .text:00000000000001d0 .LFE31
     /tmp/ccaEfZAR.s:3129   .debug_str:000000000000044f .LASF103
     /tmp/ccaEfZAR.s:2844   .debug_loc:000000000000027c .LLST2
     /tmp/ccaEfZAR.s:3223   .debug_str:00000000000007d6 .LASF104
     /tmp/ccaEfZAR.s:128    .text:00000000000000b4 .LBB16
     /tmp/ccaEfZAR.s:2869   .debug_loc:00000000000002de .LLST3
     /tmp/ccaEfZAR.s:2884   .debug_loc:0000000000000318 .LLST4
     /tmp/ccaEfZAR.s:2905   .debug_loc:0000000000000376 .LLST5
     /tmp/ccaEfZAR.s:79     .text:0000000000000078 .LFB30
     /tmp/ccaEfZAR.s:108    .text:00000000000000a8 .LFE30
     /tmp/ccaEfZAR.s:2916   .debug_loc:00000000000003ac .LLST1
     /tmp/ccaEfZAR.s:93     .text:0000000000000090 .LVL7
     /tmp/ccaEfZAR.s:97     .text:0000000000000098 .LVL8
     /tmp/ccaEfZAR.s:10     .text:0000000000000000 .LFB29
     /tmp/ccaEfZAR.s:73     .text:0000000000000078 .LFE29
     /tmp/ccaEfZAR.s:2923   .debug_loc:00000000000003cf .LLST0
     /tmp/ccaEfZAR.s:33     .text:000000000000002c .LVL1
     /tmp/ccaEfZAR.s:40     .text:0000000000000038 .LVL2
     /tmp/ccaEfZAR.s:49     .text:0000000000000054 .LVL3
     /tmp/ccaEfZAR.s:70     .text:0000000000000074 .LVL6
     /tmp/ccaEfZAR.s:3193   .debug_str:00000000000006d3 .LASF105
     /tmp/ccaEfZAR.s:3123   .debug_str:000000000000042d .LASF106
     /tmp/ccaEfZAR.s:3145   .debug_str:00000000000004be .LASF107
     /tmp/ccaEfZAR.s:646    .text:0000000000000378 .LVL44
     /tmp/ccaEfZAR.s:662    .text:0000000000000394 .LVL45
     /tmp/ccaEfZAR.s:664    .text:0000000000000398 .LVL46
     /tmp/ccaEfZAR.s:577    .text:0000000000000314 .LVL39
     /tmp/ccaEfZAR.s:601    .text:0000000000000344 .LVL40
     /tmp/ccaEfZAR.s:620    .text:000000000000035c .LVL41
     /tmp/ccaEfZAR.s:624    .text:0000000000000364 .LVL42
     /tmp/ccaEfZAR.s:338    .text:00000000000001d0 .LVL21
     /tmp/ccaEfZAR.s:350    .text:00000000000001e8 .LVL22
     /tmp/ccaEfZAR.s:498    .text:00000000000002a8 .LVL35
     /tmp/ccaEfZAR.s:502    .text:00000000000002b0 .LVL36
     /tmp/ccaEfZAR.s:369    .text:0000000000000204 .LVL25
     /tmp/ccaEfZAR.s:475    .text:0000000000000290 .LVL33
GAS LISTING /tmp/ccaEfZAR.s 			page 29


     /tmp/ccaEfZAR.s:540    .text:00000000000002f4 .LVL38
     /tmp/ccaEfZAR.s:381    .text:0000000000000218 .LVL26
     /tmp/ccaEfZAR.s:387    .text:0000000000000220 .LVL27
     /tmp/ccaEfZAR.s:392    .text:000000000000022c .LVL28
     /tmp/ccaEfZAR.s:399    .text:0000000000000238 .LVL29
     /tmp/ccaEfZAR.s:481    .text:0000000000000298 .LVL34
     /tmp/ccaEfZAR.s:443    .text:0000000000000268 .LVL31
     /tmp/ccaEfZAR.s:460    .text:0000000000000280 .LVL32
     /tmp/ccaEfZAR.s:519    .text:00000000000002d4 .LVL37
     /tmp/ccaEfZAR.s:117    .text:00000000000000a8 .LVL9
     /tmp/ccaEfZAR.s:290    .text:00000000000001a8 .LVL17
     /tmp/ccaEfZAR.s:300    .text:00000000000001b4 .LVL18
     /tmp/ccaEfZAR.s:326    .text:00000000000001cc .LVL20
     /tmp/ccaEfZAR.s:125    .text:00000000000000b4 .LVL10
     /tmp/ccaEfZAR.s:270    .text:0000000000000194 .LVL16
     /tmp/ccaEfZAR.s:316    .text:00000000000001c8 .LVL19
     /tmp/ccaEfZAR.s:136    .text:00000000000000c0 .LVL11
     /tmp/ccaEfZAR.s:191    .text:000000000000011c .LVL12
     /tmp/ccaEfZAR.s:193    .text:0000000000000120 .LVL13
     /tmp/ccaEfZAR.s:245    .text:0000000000000168 .LVL15
     /tmp/ccaEfZAR.s:207    .text:0000000000000134 .LVL14
     /tmp/ccaEfZAR.s:28     .text:0000000000000020 .LVL0
     /tmp/ccaEfZAR.s:59     .text:0000000000000060 .LVL4
     /tmp/ccaEfZAR.s:63     .text:0000000000000068 .LVL5
     /tmp/ccaEfZAR.s:700    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccaEfZAR.s:277    .text:0000000000000194 .LBE16
     /tmp/ccaEfZAR.s:303    .text:00000000000001b4 .LBB29
     /tmp/ccaEfZAR.s:323    .text:00000000000001c8 .LBE29
     /tmp/ccaEfZAR.s:132    .text:00000000000000b4 .LBB18
     /tmp/ccaEfZAR.s:275    .text:0000000000000194 .LBE18
     /tmp/ccaEfZAR.s:305    .text:00000000000001b4 .LBB27
     /tmp/ccaEfZAR.s:321    .text:00000000000001c8 .LBE27
     /tmp/ccaEfZAR.s:203    .text:0000000000000130 .LBB21
     /tmp/ccaEfZAR.s:272    .text:0000000000000194 .LBE21
     /tmp/ccaEfZAR.s:308    .text:00000000000001b4 .LBB22
     /tmp/ccaEfZAR.s:318    .text:00000000000001c8 .LBE22
     /tmp/ccaEfZAR.s:409    .text:000000000000023c .LBE36
     /tmp/ccaEfZAR.s:411    .text:000000000000023c .LBB48
     /tmp/ccaEfZAR.s:486    .text:0000000000000298 .LBE48
     /tmp/ccaEfZAR.s:505    .text:00000000000002b0 .LBB49
     /tmp/ccaEfZAR.s:566    .text:0000000000000314 .LBE49
     /tmp/ccaEfZAR.s:462    .text:0000000000000280 .LBE38
     /tmp/ccaEfZAR.s:521    .text:00000000000002d4 .LBB44
     /tmp/ccaEfZAR.s:543    .text:00000000000002f4 .LBE44
     /tmp/ccaEfZAR.s:483    .text:0000000000000298 .LBE41
     /tmp/ccaEfZAR.s:544    .text:00000000000002f4 .LBB45
     /tmp/ccaEfZAR.s:564    .text:0000000000000314 .LBE45

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_ZNK3TCB10isFinishedEv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN5Queue3putEP3TCB
_ZN5Queue3getEv
_ZN9Scheduler3putEP3TCB
_ZN16MemoryAllocation9fmem_headE
GAS LISTING /tmp/ccaEfZAR.s 			page 30


_ZN5Queue7isEmptyEv
