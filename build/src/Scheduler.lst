GAS LISTING /tmp/ccTXrUq6.s 			page 1


   1              		.file	"Scheduler.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_Z41__static_initialization_and_destruction_0ii:
   9              	.LFB26:
  10              		.file 1 "src/Scheduler.cpp"
   1:src/Scheduler.cpp **** #include "../h/Scheduler.hpp"
   2:src/Scheduler.cpp **** 
   3:src/Scheduler.cpp **** LinkedList<TCB> Scheduler::readyCoroutineQueue;
   4:src/Scheduler.cpp **** //TCB* Scheduler::idleThread = TCB::createThread(nullptr);
   5:src/Scheduler.cpp **** //ako ne radi samo zakomentarisi emptyQueue
   6:src/Scheduler.cpp **** TCB* Scheduler::get()
   7:src/Scheduler.cpp **** {
   8:src/Scheduler.cpp ****     //emptyQueue();
   9:src/Scheduler.cpp ****     return readyCoroutineQueue.removeFirst();
  10:src/Scheduler.cpp **** }
  11:src/Scheduler.cpp **** 
  12:src/Scheduler.cpp **** void Scheduler::put(TCB *ccb)
  13:src/Scheduler.cpp **** {
  14:src/Scheduler.cpp ****     //emptyQueue();
  15:src/Scheduler.cpp ****     readyCoroutineQueue.addLast(ccb);
  16:src/Scheduler.cpp **** }...
  11              		.loc 1 16 1
  12              		.cfi_startproc
  13              	.LVL0:
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  20              		.loc 1 16 1 is_stmt 0
  21 000c 93071000 		li	a5,1
  22 0010 6308F500 		beq	a0,a5,.L4
  23              	.L1:
  24 0014 03348100 		ld	s0,8(sp)
  25              		.cfi_remember_state
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
  28 0018 13010101 		addi	sp,sp,16
  29              		.cfi_def_cfa_offset 0
  30 001c 67800000 		jr	ra
  31              	.L4:
  32              		.cfi_restore_state
  33              		.loc 1 16 1 discriminator 1
  34 0020 B7070100 		li	a5,65536
  35 0024 9387F7FF 		addi	a5,a5,-1
  36 0028 E396F5FE 		bne	a1,a5,.L1
  37              	.LVL1:
  38              	.LBB11:
  39              	.LBB12:
  40              	.LBB13:
  41              		.file 2 "src/../h/LinkedList.hpp"
   1:src/../h/LinkedList.hpp **** 
GAS LISTING /tmp/ccTXrUq6.s 			page 2


   2:src/../h/LinkedList.hpp **** 
   3:src/../h/LinkedList.hpp **** #ifndef PROJECT_BASE_LINKEDLIST_HPP
   4:src/../h/LinkedList.hpp **** #define PROJECT_BASE_LINKEDLIST_HPP
   5:src/../h/LinkedList.hpp **** #include "../h/MemoryAllocation.hpp"
   6:src/../h/LinkedList.hpp **** 
   7:src/../h/LinkedList.hpp **** //uradi sutra kada te ne bi mrzelo, jer me sada mrzi da radim double linked, a vrv ce te i sutra mr
   8:src/../h/LinkedList.hpp **** template<typename T>
   9:src/../h/LinkedList.hpp **** class LinkedList{
  10:src/../h/LinkedList.hpp ****     private:
  11:src/../h/LinkedList.hpp ****     struct Elem{
  12:src/../h/LinkedList.hpp ****         T* data;
  13:src/../h/LinkedList.hpp ****         Elem* next;
  14:src/../h/LinkedList.hpp **** 
  15:src/../h/LinkedList.hpp ****         Elem(T* data, Elem * next) : data(data), next(next) {}
  16:src/../h/LinkedList.hpp ****     };
  17:src/../h/LinkedList.hpp **** 
  18:src/../h/LinkedList.hpp ****     Elem *head, *tail;
  19:src/../h/LinkedList.hpp ****     public:
  20:src/../h/LinkedList.hpp ****     LinkedList() : head(0), tail(0) {}
  42              		.loc 2 20 35
  43 002c 97070000 		lla	a5,.LANCHOR0
  43      93870700 
  44 0034 23B00700 		sd	zero,0(a5)
  45 0038 23B40700 		sd	zero,8(a5)
  46              	.LVL2:
  47              	.LBE13:
  48              	.LBE12:
  49              	.LBE11:
  50              		.loc 1 16 1
  51 003c 6FF09FFD 		j	.L1
  52              		.cfi_endproc
  53              	.LFE26:
  55              		.align	2
  56              		.globl	_ZN9Scheduler3getEv
  58              	_ZN9Scheduler3getEv:
  59              	.LFB19:
   7:src/Scheduler.cpp **** {
  60              		.loc 1 7 1 is_stmt 1
  61              		.cfi_startproc
  62 0040 130101FE 		addi	sp,sp,-32
  63              		.cfi_def_cfa_offset 32
  64 0044 233C1100 		sd	ra,24(sp)
  65 0048 23388100 		sd	s0,16(sp)
  66 004c 23349100 		sd	s1,8(sp)
  67              		.cfi_offset 1, -8
  68              		.cfi_offset 8, -16
  69              		.cfi_offset 9, -24
  70 0050 13040102 		addi	s0,sp,32
  71              		.cfi_def_cfa 8, 0
   9:src/Scheduler.cpp ****     return readyCoroutineQueue.removeFirst();
  72              		.loc 1 9 5
  73              	.LVL3:
  74              	.LBB14:
  75              	.LBB15:
  21:src/../h/LinkedList.hpp **** 
  22:src/../h/LinkedList.hpp ****     LinkedList(const LinkedList<T> &) = delete;
  23:src/../h/LinkedList.hpp **** 
GAS LISTING /tmp/ccTXrUq6.s 			page 3


  24:src/../h/LinkedList.hpp ****     LinkedList<T> &operator=(const LinkedList<T> &) = delete;
  25:src/../h/LinkedList.hpp **** 
  26:src/../h/LinkedList.hpp ****     void addFirst(T *data){
  27:src/../h/LinkedList.hpp ****         Elem *elem = (Elem*) MemoryAllocation::mem_alloc(MemoryAllocation::bytesToBlocks(sizeof(Ele
  28:src/../h/LinkedList.hpp ****         elem->data=data;
  29:src/../h/LinkedList.hpp ****         elem->next=nullptr;
  30:src/../h/LinkedList.hpp ****         head=elem;
  31:src/../h/LinkedList.hpp ****         if(!tail) {tail=head;}
  32:src/../h/LinkedList.hpp ****     }
  33:src/../h/LinkedList.hpp **** 
  34:src/../h/LinkedList.hpp ****     void addLast(T *data){
  35:src/../h/LinkedList.hpp ****         Elem *elem = (Elem*) MemoryAllocation::mem_alloc(MemoryAllocation::bytesToBlocks(sizeof(Ele
  36:src/../h/LinkedList.hpp ****         elem->data=data;
  37:src/../h/LinkedList.hpp ****         elem->next=nullptr;
  38:src/../h/LinkedList.hpp ****         if (tail){
  39:src/../h/LinkedList.hpp ****             tail->next=elem;
  40:src/../h/LinkedList.hpp ****             tail=elem;
  41:src/../h/LinkedList.hpp ****         }else{
  42:src/../h/LinkedList.hpp ****             head=tail=elem;
  43:src/../h/LinkedList.hpp ****         }
  44:src/../h/LinkedList.hpp ****     }
  45:src/../h/LinkedList.hpp **** 
  46:src/../h/LinkedList.hpp ****     T* removeFirst() {
  47:src/../h/LinkedList.hpp ****         if (!head) {return 0;}
  76              		.loc 2 47 14 is_stmt 0
  77 0054 17050000 		ld	a0,.LANCHOR0
  77      03350500 
  78              		.loc 2 47 9
  79 005c 63020504 		beqz	a0,.L8
  80              	.LVL4:
  48:src/../h/LinkedList.hpp ****         Elem *elem = head;
  49:src/../h/LinkedList.hpp ****         head = head->next;
  81              		.loc 2 49 22
  82 0060 83378500 		ld	a5,8(a0)
  83              		.loc 2 49 9
  84 0064 17070000 		sd	a5,.LANCHOR0,a4
  84      2330F700 
  50:src/../h/LinkedList.hpp ****         if(!head) {
  85              		.loc 2 50 9
  86 006c 63840702 		beqz	a5,.L10
  87              	.L7:
  51:src/../h/LinkedList.hpp ****             tail = 0;
  52:src/../h/LinkedList.hpp ****         }
  53:src/../h/LinkedList.hpp ****         T* ret = elem->data;
  88              		.loc 2 53 12
  89 0070 83340500 		ld	s1,0(a0)
  90              	.LVL5:
  54:src/../h/LinkedList.hpp ****         delete elem;
  91              		.loc 2 54 9
  92 0074 97000000 		call	_ZdlPv@plt
  92      E7800000 
  93              	.LVL6:
  94              	.L5:
  95              	.LBE15:
  96              	.LBE14:
  10:src/Scheduler.cpp **** }
  97              		.loc 1 10 1
GAS LISTING /tmp/ccTXrUq6.s 			page 4


  98 007c 13850400 		mv	a0,s1
  99 0080 83308101 		ld	ra,24(sp)
 100              		.cfi_remember_state
 101              		.cfi_restore 1
 102 0084 03340101 		ld	s0,16(sp)
 103              		.cfi_restore 8
 104              		.cfi_def_cfa 2, 32
 105 0088 83348100 		ld	s1,8(sp)
 106              		.cfi_restore 9
 107 008c 13010102 		addi	sp,sp,32
 108              		.cfi_def_cfa_offset 0
 109 0090 67800000 		jr	ra
 110              	.LVL7:
 111              	.L10:
 112              		.cfi_restore_state
 113              	.LBB17:
 114              	.LBB16:
  51:src/../h/LinkedList.hpp ****             tail = 0;
 115              		.loc 2 51 13
 116 0094 97070000 		sd	zero,.LANCHOR0+8,a5
 116      23B00700 
 117 009c 6FF05FFD 		j	.L7
 118              	.LVL8:
 119              	.L8:
  47:src/../h/LinkedList.hpp ****         Elem *elem = head;
 120              		.loc 2 47 28
 121 00a0 93040500 		mv	s1,a0
 122              	.LVL9:
 123              	.LBE16:
 124              	.LBE17:
   9:src/Scheduler.cpp ****     return readyCoroutineQueue.removeFirst();
 125              		.loc 1 9 44
 126 00a4 6FF09FFD 		j	.L5
 127              		.cfi_endproc
 128              	.LFE19:
 130              		.align	2
 131              		.globl	_ZN9Scheduler3putEP3TCB
 133              	_ZN9Scheduler3putEP3TCB:
 134              	.LFB20:
  13:src/Scheduler.cpp **** {
 135              		.loc 1 13 1 is_stmt 1
 136              		.cfi_startproc
 137              	.LVL10:
 138 00a8 130101FF 		addi	sp,sp,-16
 139              		.cfi_def_cfa_offset 16
 140 00ac 23348100 		sd	s0,8(sp)
 141              		.cfi_offset 8, -8
 142 00b0 13040101 		addi	s0,sp,16
 143              		.cfi_def_cfa 8, 0
  15:src/Scheduler.cpp ****     readyCoroutineQueue.addLast(ccb);
 144              		.loc 1 15 5
 145              	.LVL11:
 146              		.file 3 "src/../h/../h/MemoryAllocation.hpp"
   1:src/../h/../h/MemoryAllocation.hpp **** #include "../lib/hw.h"
   2:src/../h/../h/MemoryAllocation.hpp **** 
   3:src/../h/../h/MemoryAllocation.hpp **** 
   4:src/../h/../h/MemoryAllocation.hpp **** #ifndef PROJECT_BASE_MEMORYALLOCATION_HPP
GAS LISTING /tmp/ccTXrUq6.s 			page 5


   5:src/../h/../h/MemoryAllocation.hpp **** #define PROJECT_BASE_MEMORYALLOCATION_HPP
   6:src/../h/../h/MemoryAllocation.hpp **** 
   7:src/../h/../h/MemoryAllocation.hpp **** 
   8:src/../h/../h/MemoryAllocation.hpp **** class MemoryAllocation {
   9:src/../h/../h/MemoryAllocation.hpp **** 
  10:src/../h/../h/MemoryAllocation.hpp ****     //===========================DEFINICIJA SINGLETON KLASE POCETAK=======================k
  11:src/../h/../h/MemoryAllocation.hpp **** private:
  12:src/../h/../h/MemoryAllocation.hpp **** 
  13:src/../h/../h/MemoryAllocation.hpp ****     struct FreeMem {
  14:src/../h/../h/MemoryAllocation.hpp ****         FreeMem *next;
  15:src/../h/../h/MemoryAllocation.hpp ****         FreeMem *prev;
  16:src/../h/../h/MemoryAllocation.hpp ****         size_t size;
  17:src/../h/../h/MemoryAllocation.hpp ****     };
  18:src/../h/../h/MemoryAllocation.hpp **** 
  19:src/../h/../h/MemoryAllocation.hpp **** 
  20:src/../h/../h/MemoryAllocation.hpp ****     static FreeMem *fmem_head; //koja pocetna vrednost?
  21:src/../h/../h/MemoryAllocation.hpp **** 
  22:src/../h/../h/MemoryAllocation.hpp **** 
  23:src/../h/../h/MemoryAllocation.hpp **** 
  24:src/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *instance;
  25:src/../h/../h/MemoryAllocation.hpp ****     int data;
  26:src/../h/../h/MemoryAllocation.hpp **** 
  27:src/../h/../h/MemoryAllocation.hpp **** 
  28:src/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation() { //OVO SE SADA NIGGDE
  29:src/../h/../h/MemoryAllocation.hpp ****         fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  30:src/../h/../h/MemoryAllocation.hpp ****                                     (char *) HEAP_START_ADDR); //da li smem ovo da castujem u size_
  31:src/../h/../h/MemoryAllocation.hpp ****         fmem_head->next = nullptr;
  32:src/../h/../h/MemoryAllocation.hpp ****         fmem_head->prev = nullptr;
  33:src/../h/../h/MemoryAllocation.hpp ****         data = 0;
  34:src/../h/../h/MemoryAllocation.hpp ****     }
  35:src/../h/../h/MemoryAllocation.hpp **** 
  36:src/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation(MemoryAllocation const &);
  37:src/../h/../h/MemoryAllocation.hpp **** 
  38:src/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const &);
  39:src/../h/../h/MemoryAllocation.hpp **** 
  40:src/../h/../h/MemoryAllocation.hpp **** public:
  41:src/../h/../h/MemoryAllocation.hpp **** 
  42:src/../h/../h/MemoryAllocation.hpp **** 
  43:src/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *getInstance() {
  44:src/../h/../h/MemoryAllocation.hpp ****         if (!instance) {
  45:src/../h/../h/MemoryAllocation.hpp ****             fmem_head =  (FreeMem*) HEAP_START_ADDR;
  46:src/../h/../h/MemoryAllocation.hpp ****             fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  47:src/../h/../h/MemoryAllocation.hpp ****                                         (char *) HEAP_START_ADDR); //da li smem ovo da castujem u s
  48:src/../h/../h/MemoryAllocation.hpp ****             fmem_head->next = nullptr;
  49:src/../h/../h/MemoryAllocation.hpp ****             fmem_head->prev = nullptr;
  50:src/../h/../h/MemoryAllocation.hpp ****             static MemoryAllocation* instance;
  51:src/../h/../h/MemoryAllocation.hpp ****             return instance;
  52:src/../h/../h/MemoryAllocation.hpp ****         }
  53:src/../h/../h/MemoryAllocation.hpp ****         return instance;
  54:src/../h/../h/MemoryAllocation.hpp ****     }
  55:src/../h/../h/MemoryAllocation.hpp **** 
  56:src/../h/../h/MemoryAllocation.hpp **** 
  57:src/../h/../h/MemoryAllocation.hpp ****     int getData() {
  58:src/../h/../h/MemoryAllocation.hpp ****         return this->data;
  59:src/../h/../h/MemoryAllocation.hpp ****     }
  60:src/../h/../h/MemoryAllocation.hpp **** 
  61:src/../h/../h/MemoryAllocation.hpp ****     void setData(int data) {
GAS LISTING /tmp/ccTXrUq6.s 			page 6


  62:src/../h/../h/MemoryAllocation.hpp ****         this->data = data;
  63:src/../h/../h/MemoryAllocation.hpp ****     }
  64:src/../h/../h/MemoryAllocation.hpp **** 
  65:src/../h/../h/MemoryAllocation.hpp ****     /*MemoryAllocation(MemoryAllocation const&) = delete;
  66:src/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const&)  = delete;*/
  67:src/../h/../h/MemoryAllocation.hpp **** //===========================DEFINICIJA SINGLETON KLASE KRAJ========================
  68:src/../h/../h/MemoryAllocation.hpp ****     static int bytesToBlocks(size_t size){
  69:src/../h/../h/MemoryAllocation.hpp ****         return (size+sizeof(FreeMem)+MEM_BLOCK_SIZE-1)/MEM_BLOCK_SIZE;
 147              		.loc 3 69 9
 148              	.LBB26:
 149              	.LBB27:
 150              	.LBB28:
 151              	.LBB29:
  70:src/../h/../h/MemoryAllocation.hpp ****     }
  71:src/../h/../h/MemoryAllocation.hpp **** 
  72:src/../h/../h/MemoryAllocation.hpp **** 
  73:src/../h/../h/MemoryAllocation.hpp **** //===========================METODE ZA ALOKACIJU MEMORIJE===========================
  74:src/../h/../h/MemoryAllocation.hpp ****     static void tryToJoin (FreeMem* curr) {
  75:src/../h/../h/MemoryAllocation.hpp ****         if (!curr) return;
  76:src/../h/../h/MemoryAllocation.hpp ****         if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
  77:src/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
  78:src/../h/../h/MemoryAllocation.hpp ****             curr->size += curr->next->size;
  79:src/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
  80:src/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
  81:src/../h/../h/MemoryAllocation.hpp ****             return;
  82:src/../h/../h/MemoryAllocation.hpp ****         }
  83:src/../h/../h/MemoryAllocation.hpp **** 
  84:src/../h/../h/MemoryAllocation.hpp ****     }
  85:src/../h/../h/MemoryAllocation.hpp **** 
  86:src/../h/../h/MemoryAllocation.hpp ****     //===================================== mem_free, ali sa ptr ===============
  87:src/../h/../h/MemoryAllocation.hpp ****         static int mem_free(void* ptr) { //radi i kada posaljem sa &
  88:src/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
  89:src/../h/../h/MemoryAllocation.hpp ****         if(!fmem_head || ptr < (char*)fmem_head)
  90:src/../h/../h/MemoryAllocation.hpp ****         {
  91:src/../h/../h/MemoryAllocation.hpp ****             cur=nullptr;
  92:src/../h/../h/MemoryAllocation.hpp ****         }else {
  93:src/../h/../h/MemoryAllocation.hpp ****                 for (cur=fmem_head; cur->next!=ptr && ptr>(char*)(cur->next); cur=cur->next); //moz
  94:src/../h/../h/MemoryAllocation.hpp ****             }
  95:src/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newSeg = (FreeMem*)ptr;
  96:src/../h/../h/MemoryAllocation.hpp ****                 newSeg->next=nullptr;
  97:src/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=nullptr;
  98:src/../h/../h/MemoryAllocation.hpp ****                 newSeg->size=bytesToBlocks(sizeof(ptr))*MEM_BLOCK_SIZE;
  99:src/../h/../h/MemoryAllocation.hpp ****                         //sizeof(ptr);
 100:src/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=cur;
 101:src/../h/../h/MemoryAllocation.hpp ****                 if(cur) {
 102:src/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = cur->next;
 103:src/../h/../h/MemoryAllocation.hpp ****                 }
 104:src/../h/../h/MemoryAllocation.hpp ****                 else {
 105:src/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = fmem_head;
 106:src/../h/../h/MemoryAllocation.hpp ****                 }
 107:src/../h/../h/MemoryAllocation.hpp ****                 if(newSeg->next) {
 108:src/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 109:src/../h/../h/MemoryAllocation.hpp ****                 }
 110:src/../h/../h/MemoryAllocation.hpp ****                 if (cur) {
 111:src/../h/../h/MemoryAllocation.hpp ****                     cur->next = newSeg; //zasto ovde odjednom uzme vrednost x8000 umesto x8000f...?
 112:src/../h/../h/MemoryAllocation.hpp ****                 }
 113:src/../h/../h/MemoryAllocation.hpp ****                 else {
GAS LISTING /tmp/ccTXrUq6.s 			page 7


 114:src/../h/../h/MemoryAllocation.hpp ****                     fmem_head = newSeg;
 115:src/../h/../h/MemoryAllocation.hpp ****                 }
 116:src/../h/../h/MemoryAllocation.hpp ****                 // Try to merge with the previous and next segments:
 117:src/../h/../h/MemoryAllocation.hpp ****             tryToJoin(newSeg);
 118:src/../h/../h/MemoryAllocation.hpp ****             tryToJoin(cur);
 119:src/../h/../h/MemoryAllocation.hpp ****             //mozda da fmem_head nije jednako starom fmem_headu?
 120:src/../h/../h/MemoryAllocation.hpp ****             if(newSeg==nullptr){
 121:src/../h/../h/MemoryAllocation.hpp ****                 return -1;
 122:src/../h/../h/MemoryAllocation.hpp ****             }else{return 0;}
 123:src/../h/../h/MemoryAllocation.hpp **** 
 124:src/../h/../h/MemoryAllocation.hpp **** 
 125:src/../h/../h/MemoryAllocation.hpp ****     }
 126:src/../h/../h/MemoryAllocation.hpp ****     //===================================== kraj probe ==========================
 127:src/../h/../h/MemoryAllocation.hpp **** 
 128:src/../h/../h/MemoryAllocation.hpp **** 
 129:src/../h/../h/MemoryAllocation.hpp **** 
 130:src/../h/../h/MemoryAllocation.hpp ****     /*int mem_free(char* addr, size_t size) {
 131:src/../h/../h/MemoryAllocation.hpp ****         // Find the place where to insert the new free segment (just after cur):
 132:src/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
 133:src/../h/../h/MemoryAllocation.hpp ****         if (!fmem_head || addr<(char*)fmem_head)
 134:src/../h/../h/MemoryAllocation.hpp ****             cur = 0; // insert as the first
 135:src/../h/../h/MemoryAllocation.hpp ****         else
 136:src/../h/../h/MemoryAllocation.hpp ****             for (cur=fmem_head; cur->next!=0 && addr>(char*)(cur->next);
 137:src/../h/../h/MemoryAllocation.hpp ****                  cur=cur->next);
 138:src/../h/../h/MemoryAllocation.hpp ****             // Insert the new segment after cur:
 139:src/../h/../h/MemoryAllocation.hpp ****         FreeMem* newSeg = (FreeMem*)addr;
 140:src/../h/../h/MemoryAllocation.hpp ****         newSeg->size = size;
 141:src/../h/../h/MemoryAllocation.hpp ****         newSeg->prev = cur;
 142:src/../h/../h/MemoryAllocation.hpp ****         if (cur) newSeg->next = cur->next;
 143:src/../h/../h/MemoryAllocation.hpp ****         else newSeg->next = fmem_head;
 144:src/../h/../h/MemoryAllocation.hpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
 145:src/../h/../h/MemoryAllocation.hpp ****         if (cur) cur->next = newSeg;
 146:src/../h/../h/MemoryAllocation.hpp ****         else fmem_head = newSeg;
 147:src/../h/../h/MemoryAllocation.hpp ****             // Try to merge with the previous and next segments:
 148:src/../h/../h/MemoryAllocation.hpp ****         tryToJoin(newSeg);
 149:src/../h/../h/MemoryAllocation.hpp ****         tryToJoin(cur);
 150:src/../h/../h/MemoryAllocation.hpp ****     }*/
 151:src/../h/../h/MemoryAllocation.hpp **** 
 152:src/../h/../h/MemoryAllocation.hpp ****     static void* mem_alloc(size_t size) {//uopste ne radi, iako u lotsofsmallmallocs pise da radi
 153:src/../h/../h/MemoryAllocation.hpp ****         //size_t x=sizeof(fmem_head);
 154:src/../h/../h/MemoryAllocation.hpp ****         //pozovi ovde samo bytes to blocks od size, da ne moras to da radis iz maina
 155:src/../h/../h/MemoryAllocation.hpp ****         size=(size)*(size_t)MEM_BLOCK_SIZE; //kada je ovo ukljuceno, pravi problem u memfree, so il
 152              		.loc 3 155 9
 156:src/../h/../h/MemoryAllocation.hpp ****         for (FreeMem* cur = fmem_head; cur != nullptr; cur=cur->next){ // U DRUGOJ ITERACIJI FMEM_H
 153              		.loc 3 156 9
 154              	.LBB30:
 155              		.loc 3 156 23 is_stmt 0
 156 00b4 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 156      83B70700 
 157 00bc 83B70700 		ld	a5,0(a5)
 158              	.LVL12:
 159              	.L13:
 160              		.loc 3 156 44 is_stmt 1
 161 00c0 638A070C 		beqz	a5,.L12
 162              	.LBB31:
 157:src/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 163              		.loc 3 157 13
GAS LISTING /tmp/ccTXrUq6.s 			page 8


 164              		.loc 3 157 34 is_stmt 0
 165 00c4 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 165      03370700 
 166 00cc 83360700 		ld	a3,0(a4)
 167 00d0 83B60600 		ld	a3,0(a3)
 168              		.loc 3 157 22
 169 00d4 23B0D700 		sd	a3,0(a5)
 158:src/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 170              		.loc 3 158 13 is_stmt 1
 171              		.loc 3 158 34 is_stmt 0
 172 00d8 03370700 		ld	a4,0(a4)
 173 00dc 03368700 		ld	a2,8(a4)
 174              		.loc 3 158 22
 175 00e0 23B4C700 		sd	a2,8(a5)
 159:src/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 176              		.loc 3 159 13 is_stmt 1
 177              		.loc 3 159 22 is_stmt 0
 178 00e4 03B70701 		ld	a4,16(a5)
 179              		.loc 3 159 13
 180 00e8 9305F003 		li	a1,63
 181 00ec 63F6E502 		bleu	a4,a1,.L23
 160:src/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 182              		.loc 3 160 13 is_stmt 1
 183              	.LBB32:
 184              		.loc 3 160 26 is_stmt 0
 185 00f0 130707FC 		addi	a4,a4,-64
 186              		.loc 3 160 13
 187 00f4 93058001 		li	a1,24
 188 00f8 63ECE502 		bgtu	a4,a1,.L14
 161:src/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 189              		.loc 3 161 17 is_stmt 1
 190 00fc 63020602 		beqz	a2,.L15
 191              		.loc 3 161 32
 192              		.loc 3 161 48 is_stmt 0
 193 0100 2330D600 		sd	a3,0(a2)
 194              	.L16:
 162:src/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 163:src/../h/../h/MemoryAllocation.hpp ****                 if (cur->next) cur->next->prev = cur->prev;
 195              		.loc 3 163 17 is_stmt 1
 196              		.loc 3 163 26 is_stmt 0
 197 0104 03B70700 		ld	a4,0(a5)
 198              		.loc 3 163 17
 199 0108 63060708 		beqz	a4,.L12
 200              		.loc 3 163 32 is_stmt 1
 201              		.loc 3 163 55 is_stmt 0
 202 010c 83B68700 		ld	a3,8(a5)
 203              		.loc 3 163 48
 204 0110 2334D700 		sd	a3,8(a4)
 164:src/../h/../h/MemoryAllocation.hpp ****                 return cur;
 205              		.loc 3 164 17 is_stmt 1
 206              		.loc 3 164 24 is_stmt 0
 207 0114 6F000008 		j	.L12
 208              	.L23:
 209              	.LBE32:
 210              	.LBE31:
 156:src/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 211              		.loc 3 156 59
GAS LISTING /tmp/ccTXrUq6.s 			page 9


 212 0118 93870600 		mv	a5,a3
 213              	.LVL13:
 214 011c 6FF05FFA 		j	.L13
 215              	.LVL14:
 216              	.L15:
 217              	.LBB37:
 218              	.LBB35:
 162:src/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 219              		.loc 3 162 22 is_stmt 1
 162:src/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 220              		.loc 3 162 32 is_stmt 0
 221 0120 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 221      03370700 
 222 0128 2330D700 		sd	a3,0(a4)
 223 012c 6FF09FFD 		j	.L16
 224              	.L14:
 225              	.LBB33:
 165:src/../h/../h/MemoryAllocation.hpp ****             }else {
 166:src/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newfrgm = (FreeMem*)((char*)cur+size);
 226              		.loc 3 166 17 is_stmt 1
 227              		.loc 3 166 26 is_stmt 0
 228 0130 13870704 		addi	a4,a5,64
 229              	.LVL15:
 167:src/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev=nullptr;
 230              		.loc 3 167 17 is_stmt 1
 231              		.loc 3 167 30 is_stmt 0
 232 0134 23340700 		sd	zero,8(a4)
 168:src/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next=nullptr;
 233              		.loc 3 168 17 is_stmt 1
 234              		.loc 3 168 30 is_stmt 0
 235 0138 23B00704 		sd	zero,64(a5)
 169:src/../h/../h/MemoryAllocation.hpp ****                 //newfrgm->size=cur->size-size;// DODATO TOKOM PROBE NITI
 170:src/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->prev) cur->prev->next = newfrgm;
 236              		.loc 3 170 17 is_stmt 1
 237              		.loc 3 170 33 is_stmt 0
 238 013c 83B68700 		ld	a3,8(a5)
 239              		.loc 3 170 25
 240 0140 63800608 		beqz	a3,.L18
 241              		.loc 3 170 39 is_stmt 1
 242              		.loc 3 170 55 is_stmt 0
 243 0144 23B0E600 		sd	a4,0(a3)
 244              	.L19:
 171:src/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 172:src/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 245              		.loc 3 172 17 is_stmt 1
 246              		.loc 3 172 33 is_stmt 0
 247 0148 83B60700 		ld	a3,0(a5)
 248              		.loc 3 172 25
 249 014c 63840600 		beqz	a3,.L20
 250              		.loc 3 172 39 is_stmt 1
 251              		.loc 3 172 55 is_stmt 0
 252 0150 23B4E600 		sd	a4,8(a3)
 253              	.L20:
 173:src/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 254              		.loc 3 173 17 is_stmt 1
 255              		.loc 3 173 38 is_stmt 0
 256 0154 03B68700 		ld	a2,8(a5)
GAS LISTING /tmp/ccTXrUq6.s 			page 10


 257              		.loc 3 173 31
 258 0158 2334C700 		sd	a2,8(a4)
 174:src/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 259              		.loc 3 174 17 is_stmt 1
 260              		.loc 3 174 38 is_stmt 0
 261 015c 83B60700 		ld	a3,0(a5)
 262              		.loc 3 174 31
 263 0160 2330D700 		sd	a3,0(a4)
 175:src/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
 264              		.loc 3 175 17 is_stmt 1
 265              		.loc 3 175 38 is_stmt 0
 266 0164 83B70701 		ld	a5,16(a5)
 267              	.LVL16:
 268              		.loc 3 175 42
 269 0168 938707FC 		addi	a5,a5,-64
 270              		.loc 3 175 31
 271 016c 2338F700 		sd	a5,16(a4)
 176:src/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 272              		.loc 3 176 17 is_stmt 1
 273              		.loc 3 176 35 is_stmt 0
 274 0170 9306070C 		addi	a3,a4,192
 275              		.loc 3 176 27
 276 0174 97050000 		la	a1,_ZN16MemoryAllocation9fmem_headE
 276      83B50500 
 277 017c 23B0D500 		sd	a3,0(a1)
 177:src/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
 278              		.loc 3 177 17 is_stmt 1
 279              		.loc 3 177 42 is_stmt 0
 280 0180 83350700 		ld	a1,0(a4)
 281              		.loc 3 177 32
 282 0184 2330B70C 		sd	a1,192(a4)
 178:src/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 283              		.loc 3 178 17 is_stmt 1
 284              		.loc 3 178 32 is_stmt 0
 285 0188 2334C70C 		sd	a2,200(a4)
 179:src/../h/../h/MemoryAllocation.hpp ****                 fmem_head->size=newfrgm->size;
 286              		.loc 3 179 17 is_stmt 1
 287              		.loc 3 179 32 is_stmt 0
 288 018c 2338F70C 		sd	a5,208(a4)
 180:src/../h/../h/MemoryAllocation.hpp ****                 //fmem_head = (FreeMem*) (char*)newfrgm;
 181:src/../h/../h/MemoryAllocation.hpp ****                 return newfrgm;
 289              		.loc 3 181 17 is_stmt 1
 290              		.loc 3 181 24 is_stmt 0
 291 0190 93070700 		mv	a5,a4
 292              	.LVL17:
 293              	.L12:
 294              	.LBE33:
 295              	.LBE35:
 296              	.LBE37:
 297              	.LBE30:
 298              	.LBE29:
 299              	.LBE28:
  36:src/../h/LinkedList.hpp ****         elem->next=nullptr;
 300              		.loc 2 36 9
 301 0194 23B0A700 		sd	a0,0(a5)
  37:src/../h/LinkedList.hpp ****         if (tail){
 302              		.loc 2 37 9
GAS LISTING /tmp/ccTXrUq6.s 			page 11


 303 0198 23B40700 		sd	zero,8(a5)
  38:src/../h/LinkedList.hpp ****             tail->next=elem;
 304              		.loc 2 38 13
 305 019c 17070000 		ld	a4,.LANCHOR0+8
 305      03370700 
  38:src/../h/LinkedList.hpp ****             tail->next=elem;
 306              		.loc 2 38 9
 307 01a4 63080702 		beqz	a4,.L21
  39:src/../h/LinkedList.hpp ****             tail=elem;
 308              		.loc 2 39 13
 309 01a8 2334F700 		sd	a5,8(a4)
  40:src/../h/LinkedList.hpp ****         }else{
 310              		.loc 2 40 13
 311 01ac 17070000 		sd	a5,.LANCHOR0+8,a4
 311      2330F700 
 312              	.LVL18:
 313              	.L11:
 314              	.LBE27:
 315              	.LBE26:
 316              		.loc 1 16 1
 317 01b4 03348100 		ld	s0,8(sp)
 318              		.cfi_remember_state
 319              		.cfi_restore 8
 320              		.cfi_def_cfa 2, 16
 321 01b8 13010101 		addi	sp,sp,16
 322              		.cfi_def_cfa_offset 0
 323 01bc 67800000 		jr	ra
 324              	.LVL19:
 325              	.L18:
 326              		.cfi_restore_state
 327              	.LBB43:
 328              	.LBB42:
 329              	.LBB41:
 330              	.LBB40:
 331              	.LBB39:
 332              	.LBB38:
 333              	.LBB36:
 334              	.LBB34:
 171:src/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 335              		.loc 3 171 22 is_stmt 1
 171:src/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 336              		.loc 3 171 41 is_stmt 0
 337 01c0 9306070C 		addi	a3,a4,192
 171:src/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 338              		.loc 3 171 32
 339 01c4 17060000 		la	a2,_ZN16MemoryAllocation9fmem_headE
 339      03360600 
 340 01cc 2330D600 		sd	a3,0(a2)
 341 01d0 6FF09FF7 		j	.L19
 342              	.LVL20:
 343              	.L21:
 344              	.LBE34:
 345              	.LBE36:
 346              	.LBE38:
 347              	.LBE39:
 348              	.LBE40:
 349              	.LBE41:
GAS LISTING /tmp/ccTXrUq6.s 			page 12


  42:src/../h/LinkedList.hpp ****         }
 350              		.loc 2 42 13
 351 01d4 17070000 		lla	a4,.LANCHOR0
 351      13070700 
 352 01dc 2334F700 		sd	a5,8(a4)
 353 01e0 2330F700 		sd	a5,0(a4)
 354              	.LVL21:
 355              	.LBE42:
 356              	.LBE43:
 357              		.loc 1 16 1
 358 01e4 6FF01FFD 		j	.L11
 359              		.cfi_endproc
 360              	.LFE20:
 362              		.align	2
 364              	_GLOBAL__sub_I__ZN9Scheduler19readyCoroutineQueueE:
 365              	.LFB27:
 366              		.loc 1 16 1 is_stmt 1
 367              		.cfi_startproc
 368 01e8 130101FF 		addi	sp,sp,-16
 369              		.cfi_def_cfa_offset 16
 370 01ec 23341100 		sd	ra,8(sp)
 371 01f0 23308100 		sd	s0,0(sp)
 372              		.cfi_offset 1, -8
 373              		.cfi_offset 8, -16
 374 01f4 13040101 		addi	s0,sp,16
 375              		.cfi_def_cfa 8, 0
 376              		.loc 1 16 1 is_stmt 0
 377 01f8 B7050100 		li	a1,65536
 378 01fc 9385F5FF 		addi	a1,a1,-1
 379 0200 13051000 		li	a0,1
 380 0204 97000000 		call	_Z41__static_initialization_and_destruction_0ii
 380      E7800000 
 381              	.LVL22:
 382 020c 83308100 		ld	ra,8(sp)
 383              		.cfi_restore 1
 384 0210 03340100 		ld	s0,0(sp)
 385              		.cfi_restore 8
 386              		.cfi_def_cfa 2, 16
 387 0214 13010101 		addi	sp,sp,16
 388              		.cfi_def_cfa_offset 0
 389 0218 67800000 		jr	ra
 390              		.cfi_endproc
 391              	.LFE27:
 393              		.section	.init_array,"aw"
 394              		.align	3
 395 0000 00000000 		.dword	_GLOBAL__sub_I__ZN9Scheduler19readyCoroutineQueueE
 395      00000000 
 396              		.globl	_ZN9Scheduler19readyCoroutineQueueE
 397              		.bss
 398              		.align	3
 399              		.set	.LANCHOR0,. + 0
 402              	_ZN9Scheduler19readyCoroutineQueueE:
 403 0000 00000000 		.zero	16
 403      00000000 
 403      00000000 
 403      00000000 
 404              		.text
GAS LISTING /tmp/ccTXrUq6.s 			page 13


 405              	.Letext0:
 406              		.file 4 "src/../h/../h/../lib/hw.h"
 407              		.file 5 "src/../h/Scheduler.hpp"
GAS LISTING /tmp/ccTXrUq6.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Scheduler.cpp
     /tmp/ccTXrUq6.s:8      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccTXrUq6.s:12     .text:0000000000000000 .L0 
     /tmp/ccTXrUq6.s:14     .text:0000000000000000 .L0 
     /tmp/ccTXrUq6.s:15     .text:0000000000000004 .L0 
     /tmp/ccTXrUq6.s:17     .text:0000000000000008 .L0 
     /tmp/ccTXrUq6.s:19     .text:000000000000000c .L0 
     /tmp/ccTXrUq6.s:21     .text:000000000000000c .L0 
     /tmp/ccTXrUq6.s:25     .text:0000000000000018 .L0 
     /tmp/ccTXrUq6.s:26     .text:0000000000000018 .L0 
     /tmp/ccTXrUq6.s:27     .text:0000000000000018 .L0 
     /tmp/ccTXrUq6.s:29     .text:000000000000001c .L0 
     /tmp/ccTXrUq6.s:32     .text:0000000000000020 .L0 
     /tmp/ccTXrUq6.s:34     .text:0000000000000020 .L0 
     /tmp/ccTXrUq6.s:43     .text:000000000000002c .L0 
     /tmp/ccTXrUq6.s:51     .text:000000000000003c .L0 
     /tmp/ccTXrUq6.s:52     .text:0000000000000040 .L0 
     /tmp/ccTXrUq6.s:58     .text:0000000000000040 _ZN9Scheduler3getEv
     /tmp/ccTXrUq6.s:61     .text:0000000000000040 .L0 
     /tmp/ccTXrUq6.s:62     .text:0000000000000040 .L0 
     /tmp/ccTXrUq6.s:63     .text:0000000000000044 .L0 
     /tmp/ccTXrUq6.s:67     .text:0000000000000050 .L0 
     /tmp/ccTXrUq6.s:68     .text:0000000000000050 .L0 
     /tmp/ccTXrUq6.s:69     .text:0000000000000050 .L0 
     /tmp/ccTXrUq6.s:71     .text:0000000000000054 .L0 
     /tmp/ccTXrUq6.s:76     .text:0000000000000054 .L0 
     /tmp/ccTXrUq6.s:77     .text:0000000000000054 .L0 
     /tmp/ccTXrUq6.s:79     .text:000000000000005c .L0 
     /tmp/ccTXrUq6.s:82     .text:0000000000000060 .L0 
     /tmp/ccTXrUq6.s:84     .text:0000000000000064 .L0 
     /tmp/ccTXrUq6.s:86     .text:000000000000006c .L0 
     /tmp/ccTXrUq6.s:89     .text:0000000000000070 .L0 
     /tmp/ccTXrUq6.s:92     .text:0000000000000074 .L0 
     /tmp/ccTXrUq6.s:98     .text:000000000000007c .L0 
     /tmp/ccTXrUq6.s:100    .text:0000000000000084 .L0 
     /tmp/ccTXrUq6.s:101    .text:0000000000000084 .L0 
     /tmp/ccTXrUq6.s:103    .text:0000000000000088 .L0 
     /tmp/ccTXrUq6.s:104    .text:0000000000000088 .L0 
     /tmp/ccTXrUq6.s:106    .text:000000000000008c .L0 
     /tmp/ccTXrUq6.s:108    .text:0000000000000090 .L0 
     /tmp/ccTXrUq6.s:112    .text:0000000000000094 .L0 
     /tmp/ccTXrUq6.s:116    .text:0000000000000094 .L0 
     /tmp/ccTXrUq6.s:121    .text:00000000000000a0 .L0 
     /tmp/ccTXrUq6.s:126    .text:00000000000000a4 .L0 
     /tmp/ccTXrUq6.s:127    .text:00000000000000a8 .L0 
     /tmp/ccTXrUq6.s:133    .text:00000000000000a8 _ZN9Scheduler3putEP3TCB
     /tmp/ccTXrUq6.s:136    .text:00000000000000a8 .L0 
     /tmp/ccTXrUq6.s:138    .text:00000000000000a8 .L0 
     /tmp/ccTXrUq6.s:139    .text:00000000000000ac .L0 
     /tmp/ccTXrUq6.s:141    .text:00000000000000b0 .L0 
     /tmp/ccTXrUq6.s:143    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:147    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:152    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:153    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:155    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:156    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccTXrUq6.s 			page 15


     /tmp/ccTXrUq6.s:161    .text:00000000000000c0 .L0 
     /tmp/ccTXrUq6.s:164    .text:00000000000000c4 .L0 
     /tmp/ccTXrUq6.s:165    .text:00000000000000c4 .L0 
     /tmp/ccTXrUq6.s:169    .text:00000000000000d4 .L0 
     /tmp/ccTXrUq6.s:171    .text:00000000000000d8 .L0 
     /tmp/ccTXrUq6.s:172    .text:00000000000000d8 .L0 
     /tmp/ccTXrUq6.s:175    .text:00000000000000e0 .L0 
     /tmp/ccTXrUq6.s:177    .text:00000000000000e4 .L0 
     /tmp/ccTXrUq6.s:178    .text:00000000000000e4 .L0 
     /tmp/ccTXrUq6.s:180    .text:00000000000000e8 .L0 
     /tmp/ccTXrUq6.s:184    .text:00000000000000f0 .L0 
     /tmp/ccTXrUq6.s:185    .text:00000000000000f0 .L0 
     /tmp/ccTXrUq6.s:187    .text:00000000000000f4 .L0 
     /tmp/ccTXrUq6.s:190    .text:00000000000000fc .L0 
     /tmp/ccTXrUq6.s:192    .text:0000000000000100 .L0 
     /tmp/ccTXrUq6.s:193    .text:0000000000000100 .L0 
     /tmp/ccTXrUq6.s:196    .text:0000000000000104 .L0 
     /tmp/ccTXrUq6.s:197    .text:0000000000000104 .L0 
     /tmp/ccTXrUq6.s:199    .text:0000000000000108 .L0 
     /tmp/ccTXrUq6.s:201    .text:000000000000010c .L0 
     /tmp/ccTXrUq6.s:202    .text:000000000000010c .L0 
     /tmp/ccTXrUq6.s:204    .text:0000000000000110 .L0 
     /tmp/ccTXrUq6.s:206    .text:0000000000000114 .L0 
     /tmp/ccTXrUq6.s:207    .text:0000000000000114 .L0 
     /tmp/ccTXrUq6.s:212    .text:0000000000000118 .L0 
     /tmp/ccTXrUq6.s:220    .text:0000000000000120 .L0 
     /tmp/ccTXrUq6.s:221    .text:0000000000000120 .L0 
     /tmp/ccTXrUq6.s:227    .text:0000000000000130 .L0 
     /tmp/ccTXrUq6.s:228    .text:0000000000000130 .L0 
     /tmp/ccTXrUq6.s:231    .text:0000000000000134 .L0 
     /tmp/ccTXrUq6.s:232    .text:0000000000000134 .L0 
     /tmp/ccTXrUq6.s:234    .text:0000000000000138 .L0 
     /tmp/ccTXrUq6.s:235    .text:0000000000000138 .L0 
     /tmp/ccTXrUq6.s:237    .text:000000000000013c .L0 
     /tmp/ccTXrUq6.s:238    .text:000000000000013c .L0 
     /tmp/ccTXrUq6.s:240    .text:0000000000000140 .L0 
     /tmp/ccTXrUq6.s:242    .text:0000000000000144 .L0 
     /tmp/ccTXrUq6.s:243    .text:0000000000000144 .L0 
     /tmp/ccTXrUq6.s:246    .text:0000000000000148 .L0 
     /tmp/ccTXrUq6.s:247    .text:0000000000000148 .L0 
     /tmp/ccTXrUq6.s:249    .text:000000000000014c .L0 
     /tmp/ccTXrUq6.s:251    .text:0000000000000150 .L0 
     /tmp/ccTXrUq6.s:252    .text:0000000000000150 .L0 
     /tmp/ccTXrUq6.s:255    .text:0000000000000154 .L0 
     /tmp/ccTXrUq6.s:256    .text:0000000000000154 .L0 
     /tmp/ccTXrUq6.s:258    .text:0000000000000158 .L0 
     /tmp/ccTXrUq6.s:260    .text:000000000000015c .L0 
     /tmp/ccTXrUq6.s:261    .text:000000000000015c .L0 
     /tmp/ccTXrUq6.s:263    .text:0000000000000160 .L0 
     /tmp/ccTXrUq6.s:265    .text:0000000000000164 .L0 
     /tmp/ccTXrUq6.s:266    .text:0000000000000164 .L0 
     /tmp/ccTXrUq6.s:269    .text:0000000000000168 .L0 
     /tmp/ccTXrUq6.s:271    .text:000000000000016c .L0 
     /tmp/ccTXrUq6.s:273    .text:0000000000000170 .L0 
     /tmp/ccTXrUq6.s:274    .text:0000000000000170 .L0 
     /tmp/ccTXrUq6.s:276    .text:0000000000000174 .L0 
     /tmp/ccTXrUq6.s:279    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccTXrUq6.s 			page 16


     /tmp/ccTXrUq6.s:280    .text:0000000000000180 .L0 
     /tmp/ccTXrUq6.s:282    .text:0000000000000184 .L0 
     /tmp/ccTXrUq6.s:284    .text:0000000000000188 .L0 
     /tmp/ccTXrUq6.s:285    .text:0000000000000188 .L0 
     /tmp/ccTXrUq6.s:287    .text:000000000000018c .L0 
     /tmp/ccTXrUq6.s:288    .text:000000000000018c .L0 
     /tmp/ccTXrUq6.s:290    .text:0000000000000190 .L0 
     /tmp/ccTXrUq6.s:291    .text:0000000000000190 .L0 
     /tmp/ccTXrUq6.s:301    .text:0000000000000194 .L0 
     /tmp/ccTXrUq6.s:303    .text:0000000000000198 .L0 
     /tmp/ccTXrUq6.s:305    .text:000000000000019c .L0 
     /tmp/ccTXrUq6.s:307    .text:00000000000001a4 .L0 
     /tmp/ccTXrUq6.s:309    .text:00000000000001a8 .L0 
     /tmp/ccTXrUq6.s:311    .text:00000000000001ac .L0 
     /tmp/ccTXrUq6.s:317    .text:00000000000001b4 .L0 
     /tmp/ccTXrUq6.s:318    .text:00000000000001b8 .L0 
     /tmp/ccTXrUq6.s:319    .text:00000000000001b8 .L0 
     /tmp/ccTXrUq6.s:320    .text:00000000000001b8 .L0 
     /tmp/ccTXrUq6.s:322    .text:00000000000001bc .L0 
     /tmp/ccTXrUq6.s:326    .text:00000000000001c0 .L0 
     /tmp/ccTXrUq6.s:336    .text:00000000000001c0 .L0 
     /tmp/ccTXrUq6.s:337    .text:00000000000001c0 .L0 
     /tmp/ccTXrUq6.s:339    .text:00000000000001c4 .L0 
     /tmp/ccTXrUq6.s:351    .text:00000000000001d4 .L0 
     /tmp/ccTXrUq6.s:358    .text:00000000000001e4 .L0 
     /tmp/ccTXrUq6.s:359    .text:00000000000001e8 .L0 
     /tmp/ccTXrUq6.s:364    .text:00000000000001e8 _GLOBAL__sub_I__ZN9Scheduler19readyCoroutineQueueE
     /tmp/ccTXrUq6.s:367    .text:00000000000001e8 .L0 
     /tmp/ccTXrUq6.s:368    .text:00000000000001e8 .L0 
     /tmp/ccTXrUq6.s:369    .text:00000000000001ec .L0 
     /tmp/ccTXrUq6.s:372    .text:00000000000001f4 .L0 
     /tmp/ccTXrUq6.s:373    .text:00000000000001f4 .L0 
     /tmp/ccTXrUq6.s:375    .text:00000000000001f8 .L0 
     /tmp/ccTXrUq6.s:377    .text:00000000000001f8 .L0 
     /tmp/ccTXrUq6.s:383    .text:0000000000000210 .L0 
     /tmp/ccTXrUq6.s:385    .text:0000000000000214 .L0 
     /tmp/ccTXrUq6.s:386    .text:0000000000000214 .L0 
     /tmp/ccTXrUq6.s:388    .text:0000000000000218 .L0 
     /tmp/ccTXrUq6.s:390    .text:000000000000021c .L0 
     /tmp/ccTXrUq6.s:402    .bss:0000000000000000 _ZN9Scheduler19readyCoroutineQueueE
     /tmp/ccTXrUq6.s:399    .bss:0000000000000000 .LANCHOR0
     /tmp/ccTXrUq6.s:408    .text:000000000000021c .L0 
     /tmp/ccTXrUq6.s:43     .text:000000000000002c .L0 
     /tmp/ccTXrUq6.s:77     .text:0000000000000054 .L0 
     /tmp/ccTXrUq6.s:84     .text:0000000000000064 .L0 
     /tmp/ccTXrUq6.s:116    .text:0000000000000094 .L0 
     /tmp/ccTXrUq6.s:156    .text:00000000000000b4 .L0 
     /tmp/ccTXrUq6.s:165    .text:00000000000000c4 .L0 
     /tmp/ccTXrUq6.s:221    .text:0000000000000120 .L0 
     /tmp/ccTXrUq6.s:276    .text:0000000000000174 .L0 
     /tmp/ccTXrUq6.s:305    .text:000000000000019c .L0 
     /tmp/ccTXrUq6.s:311    .text:00000000000001ac .L0 
     /tmp/ccTXrUq6.s:339    .text:00000000000001c4 .L0 
     /tmp/ccTXrUq6.s:351    .text:00000000000001d4 .L0 
     /tmp/ccTXrUq6.s:31     .text:0000000000000020 .L4
     /tmp/ccTXrUq6.s:23     .text:0000000000000014 .L1
     /tmp/ccTXrUq6.s:119    .text:00000000000000a0 .L8
GAS LISTING /tmp/ccTXrUq6.s 			page 17


     /tmp/ccTXrUq6.s:111    .text:0000000000000094 .L10
     /tmp/ccTXrUq6.s:87     .text:0000000000000070 .L7
     /tmp/ccTXrUq6.s:94     .text:000000000000007c .L5
     /tmp/ccTXrUq6.s:293    .text:0000000000000194 .L12
     /tmp/ccTXrUq6.s:208    .text:0000000000000118 .L23
     /tmp/ccTXrUq6.s:224    .text:0000000000000130 .L14
     /tmp/ccTXrUq6.s:216    .text:0000000000000120 .L15
     /tmp/ccTXrUq6.s:159    .text:00000000000000c0 .L13
     /tmp/ccTXrUq6.s:194    .text:0000000000000104 .L16
     /tmp/ccTXrUq6.s:325    .text:00000000000001c0 .L18
     /tmp/ccTXrUq6.s:253    .text:0000000000000154 .L20
     /tmp/ccTXrUq6.s:343    .text:00000000000001d4 .L21
     /tmp/ccTXrUq6.s:244    .text:0000000000000148 .L19
     /tmp/ccTXrUq6.s:313    .text:00000000000001b4 .L11
     /tmp/ccTXrUq6.s:1241   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccTXrUq6.s:2413   .debug_str:00000000000004d7 .LASF73
     /tmp/ccTXrUq6.s:2429   .debug_str:0000000000000609 .LASF74
     /tmp/ccTXrUq6.s:2315   .debug_str:0000000000000144 .LASF75
     /tmp/ccTXrUq6.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccTXrUq6.s:405    .text:000000000000021c .Letext0
     /tmp/ccTXrUq6.s:2275   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccTXrUq6.s:2359   .debug_str:0000000000000301 .LASF0
     /tmp/ccTXrUq6.s:2365   .debug_str:0000000000000331 .LASF1
     /tmp/ccTXrUq6.s:2345   .debug_str:000000000000027a .LASF2
     /tmp/ccTXrUq6.s:2327   .debug_str:00000000000001c6 .LASF4
     /tmp/ccTXrUq6.s:2395   .debug_str:0000000000000440 .LASF3
     /tmp/ccTXrUq6.s:2287   .debug_str:0000000000000086 .LASF5
     /tmp/ccTXrUq6.s:2367   .debug_str:0000000000000344 .LASF6
     /tmp/ccTXrUq6.s:2357   .debug_str:00000000000002ee .LASF7
     /tmp/ccTXrUq6.s:2423   .debug_str:00000000000005dd .LASF8
     /tmp/ccTXrUq6.s:2319   .debug_str:000000000000016a .LASF9
     /tmp/ccTXrUq6.s:2375   .debug_str:0000000000000388 .LASF10
     /tmp/ccTXrUq6.s:2417   .debug_str:00000000000005a7 .LASF11
     /tmp/ccTXrUq6.s:2289   .debug_str:000000000000008d .LASF12
     /tmp/ccTXrUq6.s:2281   .debug_str:000000000000002b .LASF13
     /tmp/ccTXrUq6.s:2297   .debug_str:00000000000000b7 .LASF14
     /tmp/ccTXrUq6.s:2389   .debug_str:00000000000003fe .LASF15
     /tmp/ccTXrUq6.s:2299   .debug_str:00000000000000c3 .LASF16
     /tmp/ccTXrUq6.s:2405   .debug_str:0000000000000496 .LASF23
     /tmp/ccTXrUq6.s:2313   .debug_str:000000000000013c .LASF42
     /tmp/ccTXrUq6.s:2441   .debug_str:000000000000069f .LASF17
     /tmp/ccTXrUq6.s:2433   .debug_str:0000000000000641 .LASF18
     /tmp/ccTXrUq6.s:2407   .debug_str:00000000000004a7 .LASF19
     /tmp/ccTXrUq6.s:2373   .debug_str:000000000000037e .LASF20
     /tmp/ccTXrUq6.s:2361   .debug_str:000000000000030e .LASF21
     /tmp/ccTXrUq6.s:2383   .debug_str:00000000000003aa .LASF22
     /tmp/ccTXrUq6.s:2401   .debug_str:000000000000046c .LASF24
     /tmp/ccTXrUq6.s:2369   .debug_str:0000000000000357 .LASF25
     /tmp/ccTXrUq6.s:2355   .debug_str:00000000000002e4 .LASF26
     /tmp/ccTXrUq6.s:2301   .debug_str:00000000000000d9 .LASF27
     /tmp/ccTXrUq6.s:2415   .debug_str:000000000000059b .LASF40
     /tmp/ccTXrUq6.s:2333   .debug_str:00000000000001f6 .LASF76
     /tmp/ccTXrUq6.s:2291   .debug_str:000000000000009d .LASF48
     /tmp/ccTXrUq6.s:2435   .debug_str:0000000000000646 .LASF49
     /tmp/ccTXrUq6.s:2295   .debug_str:00000000000000af .LASF28
     /tmp/ccTXrUq6.s:2321   .debug_str:0000000000000178 .LASF30
     /tmp/ccTXrUq6.s:2393   .debug_str:0000000000000432 .LASF29
GAS LISTING /tmp/ccTXrUq6.s 			page 18


     /tmp/ccTXrUq6.s:2307   .debug_str:0000000000000106 .LASF31
     /tmp/ccTXrUq6.s:2309   .debug_str:000000000000012d .LASF32
     /tmp/ccTXrUq6.s:2437   .debug_str:0000000000000666 .LASF33
     /tmp/ccTXrUq6.s:2377   .debug_str:0000000000000397 .LASF34
     /tmp/ccTXrUq6.s:2335   .debug_str:000000000000021b .LASF35
     /tmp/ccTXrUq6.s:2399   .debug_str:0000000000000462 .LASF36
     /tmp/ccTXrUq6.s:2421   .debug_str:00000000000005bb .LASF37
     /tmp/ccTXrUq6.s:2371   .debug_str:0000000000000374 .LASF38
     /tmp/ccTXrUq6.s:2425   .debug_str:00000000000005ed .LASF39
     /tmp/ccTXrUq6.s:2325   .debug_str:00000000000001b2 .LASF77
     /tmp/ccTXrUq6.s:2285   .debug_str:000000000000006e .LASF78
     /tmp/ccTXrUq6.s:2397   .debug_str:0000000000000452 .LASF41
     /tmp/ccTXrUq6.s:2419   .debug_str:00000000000005b6 .LASF43
     /tmp/ccTXrUq6.s:2431   .debug_str:000000000000061b .LASF79
     /tmp/ccTXrUq6.s:2305   .debug_str:0000000000000101 .LASF44
     /tmp/ccTXrUq6.s:2341   .debug_str:000000000000026e .LASF45
     /tmp/ccTXrUq6.s:2439   .debug_str:0000000000000694 .LASF46
     /tmp/ccTXrUq6.s:2323   .debug_str:0000000000000198 .LASF47
     /tmp/ccTXrUq6.s:2391   .debug_str:0000000000000414 .LASF50
     /tmp/ccTXrUq6.s:2331   .debug_str:00000000000001d8 .LASF80
     /tmp/ccTXrUq6.s:2411   .debug_str:00000000000004ce .LASF51
     /tmp/ccTXrUq6.s:2349   .debug_str:0000000000000294 .LASF52
     /tmp/ccTXrUq6.s:2317   .debug_str:0000000000000162 .LASF53
     /tmp/ccTXrUq6.s:2351   .debug_str:00000000000002b8 .LASF54
     /tmp/ccTXrUq6.s:2347   .debug_str:0000000000000288 .LASF55
     /tmp/ccTXrUq6.s:2387   .debug_str:00000000000003d9 .LASF56
     /tmp/ccTXrUq6.s:2293   .debug_str:00000000000000a5 .LASF57
     /tmp/ccTXrUq6.s:2409   .debug_str:00000000000004ac .LASF58
     /tmp/ccTXrUq6.s:2303   .debug_str:00000000000000f6 .LASF59
     /tmp/ccTXrUq6.s:2443   .debug_str:00000000000006a4 .LASF60
     /tmp/ccTXrUq6.s:2353   .debug_str:00000000000002db .LASF61
     /tmp/ccTXrUq6.s:2277   .debug_str:0000000000000000 .LASF62
     /tmp/ccTXrUq6.s:2279   .debug_str:0000000000000021 .LASF63
     /tmp/ccTXrUq6.s:2339   .debug_str:000000000000024c .LASF64
     /tmp/ccTXrUq6.s:2311   .debug_str:0000000000000137 .LASF65
     /tmp/ccTXrUq6.s:2445   .debug_str:00000000000006c8 .LASF81
     /tmp/ccTXrUq6.s:2283   .debug_str:000000000000003b .LASF66
     /tmp/ccTXrUq6.s:365    .text:00000000000001e8 .LFB27
     /tmp/ccTXrUq6.s:391    .text:000000000000021c .LFE27
     /tmp/ccTXrUq6.s:381    .text:000000000000020c .LVL22
     /tmp/ccTXrUq6.s:2385   .debug_str:00000000000003af .LASF67
     /tmp/ccTXrUq6.s:9      .text:0000000000000000 .LFB26
     /tmp/ccTXrUq6.s:53     .text:0000000000000040 .LFE26
     /tmp/ccTXrUq6.s:2337   .debug_str:000000000000023d .LASF68
     /tmp/ccTXrUq6.s:2329   .debug_str:00000000000001cd .LASF69
     /tmp/ccTXrUq6.s:38     .text:000000000000002c .LBB11
     /tmp/ccTXrUq6.s:49     .text:000000000000003c .LBE11
     /tmp/ccTXrUq6.s:2104   .debug_loc:0000000000000000 .LLST0
     /tmp/ccTXrUq6.s:2379   .debug_str:00000000000003a0 .LASF70
     /tmp/ccTXrUq6.s:2381   .debug_str:00000000000003a5 .LASF71
     /tmp/ccTXrUq6.s:2363   .debug_str:0000000000000317 .LASF82
     /tmp/ccTXrUq6.s:134    .text:00000000000000a8 .LFB20
     /tmp/ccTXrUq6.s:360    .text:00000000000001e8 .LFE20
     /tmp/ccTXrUq6.s:148    .text:00000000000000b4 .LBB26
     /tmp/ccTXrUq6.s:2243   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccTXrUq6.s:2113   .debug_loc:000000000000002c .LLST4
     /tmp/ccTXrUq6.s:2124   .debug_loc:0000000000000062 .LLST5
GAS LISTING /tmp/ccTXrUq6.s 			page 19


     /tmp/ccTXrUq6.s:2139   .debug_loc:00000000000000aa .LLST6
     /tmp/ccTXrUq6.s:150    .text:00000000000000b4 .LBB28
     /tmp/ccTXrUq6.s:2150   .debug_loc:00000000000000e0 .LLST7
     /tmp/ccTXrUq6.s:2165   .debug_loc:000000000000011a .LLST8
     /tmp/ccTXrUq6.s:2186   .debug_loc:0000000000000178 .LLST9
     /tmp/ccTXrUq6.s:59     .text:0000000000000040 .LFB19
     /tmp/ccTXrUq6.s:128    .text:00000000000000a8 .LFE19
     /tmp/ccTXrUq6.s:74     .text:0000000000000054 .LBB14
     /tmp/ccTXrUq6.s:2197   .debug_loc:00000000000001ae .LLST1
     /tmp/ccTXrUq6.s:2212   .debug_loc:00000000000001f6 .LLST2
     /tmp/ccTXrUq6.s:2223   .debug_loc:000000000000022c .LLST3
     /tmp/ccTXrUq6.s:93     .text:000000000000007c .LVL6
     /tmp/ccTXrUq6.s:2427   .debug_str:0000000000000601 .LASF72
     /tmp/ccTXrUq6.s:2343   .debug_str:0000000000000273 .LASF83
     /tmp/ccTXrUq6.s:2403   .debug_str:0000000000000486 .LASF84
     /tmp/ccTXrUq6.s:37     .text:000000000000002c .LVL1
     /tmp/ccTXrUq6.s:46     .text:000000000000003c .LVL2
     /tmp/ccTXrUq6.s:145    .text:00000000000000b4 .LVL11
     /tmp/ccTXrUq6.s:312    .text:00000000000001b4 .LVL18
     /tmp/ccTXrUq6.s:324    .text:00000000000001c0 .LVL19
     /tmp/ccTXrUq6.s:354    .text:00000000000001e4 .LVL21
     /tmp/ccTXrUq6.s:292    .text:0000000000000194 .LVL17
     /tmp/ccTXrUq6.s:342    .text:00000000000001d4 .LVL20
     /tmp/ccTXrUq6.s:158    .text:00000000000000c0 .LVL12
     /tmp/ccTXrUq6.s:213    .text:000000000000011c .LVL13
     /tmp/ccTXrUq6.s:215    .text:0000000000000120 .LVL14
     /tmp/ccTXrUq6.s:267    .text:0000000000000168 .LVL16
     /tmp/ccTXrUq6.s:229    .text:0000000000000134 .LVL15
     /tmp/ccTXrUq6.s:73     .text:0000000000000054 .LVL3
     /tmp/ccTXrUq6.s:110    .text:0000000000000094 .LVL7
     /tmp/ccTXrUq6.s:122    .text:00000000000000a4 .LVL9
     /tmp/ccTXrUq6.s:80     .text:0000000000000060 .LVL4
     /tmp/ccTXrUq6.s:118    .text:00000000000000a0 .LVL8
     /tmp/ccTXrUq6.s:90     .text:0000000000000074 .LVL5
     /tmp/ccTXrUq6.s:409    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccTXrUq6.s:96     .text:000000000000007c .LBE14
     /tmp/ccTXrUq6.s:113    .text:0000000000000094 .LBB17
     /tmp/ccTXrUq6.s:124    .text:00000000000000a4 .LBE17
     /tmp/ccTXrUq6.s:315    .text:00000000000001b4 .LBE26
     /tmp/ccTXrUq6.s:327    .text:00000000000001c0 .LBB43
     /tmp/ccTXrUq6.s:356    .text:00000000000001e4 .LBE43
     /tmp/ccTXrUq6.s:299    .text:0000000000000194 .LBE28
     /tmp/ccTXrUq6.s:329    .text:00000000000001c0 .LBB41
     /tmp/ccTXrUq6.s:349    .text:00000000000001d4 .LBE41
     /tmp/ccTXrUq6.s:154    .text:00000000000000b4 .LBB30
     /tmp/ccTXrUq6.s:297    .text:0000000000000194 .LBE30
     /tmp/ccTXrUq6.s:331    .text:00000000000001c0 .LBB39
     /tmp/ccTXrUq6.s:347    .text:00000000000001d4 .LBE39
     /tmp/ccTXrUq6.s:225    .text:0000000000000130 .LBB33
     /tmp/ccTXrUq6.s:294    .text:0000000000000194 .LBE33
     /tmp/ccTXrUq6.s:334    .text:00000000000001c0 .LBB34
     /tmp/ccTXrUq6.s:344    .text:00000000000001d4 .LBE34

UNDEFINED SYMBOLS
_ZdlPv
_ZN16MemoryAllocation9fmem_headE
