GAS LISTING /tmp/ccplJ8fq.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZNK3TCB10isFinishedEv
   9              	_ZNK3TCB10isFinishedEv:
  10              	.LFB46:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by os on 8/14/22.
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/RiscV.hpp"
   7:src/tcb.cpp   **** 
   8:src/tcb.cpp   **** 
   9:src/tcb.cpp   **** 
  10:src/tcb.cpp   **** bool TCB::isFinished() const {
  12              		.loc 1 10 30
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  11:src/tcb.cpp   ****     return finished;
  21              		.loc 1 11 5
  12:src/tcb.cpp   **** }
  22              		.loc 1 12 1 is_stmt 0
  23 000c 03450502 		lbu	a0,32(a0)
  24              	.LVL1:
  25 0010 03348100 		ld	s0,8(sp)
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
  28 0014 13010101 		addi	sp,sp,16
  29              		.cfi_def_cfa_offset 0
  30 0018 67800000 		jr	ra
  31              		.cfi_endproc
  32              	.LFE46:
  34              		.align	2
  35              		.globl	_ZN3TCB11setFinishedEb
  37              	_ZN3TCB11setFinishedEb:
  38              	.LFB47:
  13:src/tcb.cpp   **** 
  14:src/tcb.cpp   **** void TCB::setFinished(bool finished) {
  39              		.loc 1 14 38 is_stmt 1
  40              		.cfi_startproc
  41              	.LVL2:
  42 001c 130101FF 		addi	sp,sp,-16
  43              		.cfi_def_cfa_offset 16
  44 0020 23348100 		sd	s0,8(sp)
  45              		.cfi_offset 8, -8
  46 0024 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccplJ8fq.s 			page 2


  47              		.cfi_def_cfa 8, 0
  15:src/tcb.cpp   ****     TCB::finished=finished;
  48              		.loc 1 15 5
  49              		.loc 1 15 18 is_stmt 0
  50 0028 2300B502 		sb	a1,32(a0)
  16:src/tcb.cpp   **** }
  51              		.loc 1 16 1
  52 002c 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0030 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 0034 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE47:
  61              		.align	2
  62              		.globl	_ZN3TCB12createThreadEPFvPvEPPS_S0_
  64              	_ZN3TCB12createThreadEPFvPvEPPS_S0_:
  65              	.LFB48:
  17:src/tcb.cpp   **** TCB* TCB::running = nullptr;
  18:src/tcb.cpp   **** 
  19:src/tcb.cpp   **** uint64 TCB::timeSliceCounter=0;
  20:src/tcb.cpp   **** 
  21:src/tcb.cpp   **** int TCB::createThread(TCB::Body body, TCB** handle , void* arguments) {
  66              		.loc 1 21 71 is_stmt 1
  67              		.cfi_startproc
  68              	.LVL3:
  69 0038 130101FE 		addi	sp,sp,-32
  70              		.cfi_def_cfa_offset 32
  71 003c 233C1100 		sd	ra,24(sp)
  72 0040 23388100 		sd	s0,16(sp)
  73 0044 23349100 		sd	s1,8(sp)
  74              		.cfi_offset 1, -8
  75              		.cfi_offset 8, -16
  76              		.cfi_offset 9, -24
  77 0048 13040102 		addi	s0,sp,32
  78              		.cfi_def_cfa 8, 0
  79 004c 93840500 		mv	s1,a1
  22:src/tcb.cpp   ****     //*handle = new TCB(body, TIME_SLICE, arguments);
  23:src/tcb.cpp   ****     *handle = (TCB*) MemoryAllocation::mem_alloc(MemoryAllocation::bytesToBlocks(sizeof(TCB)));
  80              		.loc 1 23 5
  81              	.LVL4:
  82              		.file 2 "src/../h/../h/../h/MemoryAllocation.hpp"
   1:src/../h/../h/../h/MemoryAllocation.hpp **** #include "../lib/hw.h"
   2:src/../h/../h/../h/MemoryAllocation.hpp **** 
   3:src/../h/../h/../h/MemoryAllocation.hpp **** 
   4:src/../h/../h/../h/MemoryAllocation.hpp **** #ifndef PROJECT_BASE_MEMORYALLOCATION_HPP
   5:src/../h/../h/../h/MemoryAllocation.hpp **** #define PROJECT_BASE_MEMORYALLOCATION_HPP
   6:src/../h/../h/../h/MemoryAllocation.hpp **** 
   7:src/../h/../h/../h/MemoryAllocation.hpp **** 
   8:src/../h/../h/../h/MemoryAllocation.hpp **** class MemoryAllocation {
   9:src/../h/../h/../h/MemoryAllocation.hpp **** 
  10:src/../h/../h/../h/MemoryAllocation.hpp ****     //===========================DEFINICIJA SINGLETON KLASE POCETAK=======================k
  11:src/../h/../h/../h/MemoryAllocation.hpp **** private:
  12:src/../h/../h/../h/MemoryAllocation.hpp **** 
  13:src/../h/../h/../h/MemoryAllocation.hpp ****     struct FreeMem {
  14:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *next;
GAS LISTING /tmp/ccplJ8fq.s 			page 3


  15:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem *prev;
  16:src/../h/../h/../h/MemoryAllocation.hpp ****         size_t size;
  17:src/../h/../h/../h/MemoryAllocation.hpp ****     };
  18:src/../h/../h/../h/MemoryAllocation.hpp **** 
  19:src/../h/../h/../h/MemoryAllocation.hpp **** 
  20:src/../h/../h/../h/MemoryAllocation.hpp ****     static FreeMem *fmem_head; //koja pocetna vrednost?
  21:src/../h/../h/../h/MemoryAllocation.hpp **** 
  22:src/../h/../h/../h/MemoryAllocation.hpp **** 
  23:src/../h/../h/../h/MemoryAllocation.hpp **** 
  24:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *instance;
  25:src/../h/../h/../h/MemoryAllocation.hpp ****     int data;
  26:src/../h/../h/../h/MemoryAllocation.hpp **** 
  27:src/../h/../h/../h/MemoryAllocation.hpp **** 
  28:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation() { //OVO SE SADA NIGGDE
  29:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  30:src/../h/../h/../h/MemoryAllocation.hpp ****                                     (char *) HEAP_START_ADDR); //da li smem ovo da castujem u size_
  31:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->next = nullptr;
  32:src/../h/../h/../h/MemoryAllocation.hpp ****         fmem_head->prev = nullptr;
  33:src/../h/../h/../h/MemoryAllocation.hpp ****         data = 0;
  34:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  35:src/../h/../h/../h/MemoryAllocation.hpp **** 
  36:src/../h/../h/../h/MemoryAllocation.hpp ****     MemoryAllocation(MemoryAllocation const &);
  37:src/../h/../h/../h/MemoryAllocation.hpp **** 
  38:src/../h/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const &);
  39:src/../h/../h/../h/MemoryAllocation.hpp **** 
  40:src/../h/../h/../h/MemoryAllocation.hpp **** public:
  41:src/../h/../h/../h/MemoryAllocation.hpp **** 
  42:src/../h/../h/../h/MemoryAllocation.hpp **** 
  43:src/../h/../h/../h/MemoryAllocation.hpp ****     static MemoryAllocation *getInstance() {
  44:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!instance) {
  45:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head =  (FreeMem*) HEAP_START_ADDR;
  46:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->size = (size_t) ((char *) HEAP_END_ADDR -
  47:src/../h/../h/../h/MemoryAllocation.hpp ****                                         (char *) HEAP_START_ADDR); //da li smem ovo da castujem u s
  48:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->next = nullptr;
  49:src/../h/../h/../h/MemoryAllocation.hpp ****             fmem_head->prev = nullptr;
  50:src/../h/../h/../h/MemoryAllocation.hpp ****             static MemoryAllocation* instance;
  51:src/../h/../h/../h/MemoryAllocation.hpp ****             return instance;
  52:src/../h/../h/../h/MemoryAllocation.hpp ****         }
  53:src/../h/../h/../h/MemoryAllocation.hpp ****         return instance;
  54:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  55:src/../h/../h/../h/MemoryAllocation.hpp **** 
  56:src/../h/../h/../h/MemoryAllocation.hpp **** 
  57:src/../h/../h/../h/MemoryAllocation.hpp ****     int getData() {
  58:src/../h/../h/../h/MemoryAllocation.hpp ****         return this->data;
  59:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  60:src/../h/../h/../h/MemoryAllocation.hpp **** 
  61:src/../h/../h/../h/MemoryAllocation.hpp ****     void setData(int data) {
  62:src/../h/../h/../h/MemoryAllocation.hpp ****         this->data = data;
  63:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  64:src/../h/../h/../h/MemoryAllocation.hpp **** 
  65:src/../h/../h/../h/MemoryAllocation.hpp ****     /*MemoryAllocation(MemoryAllocation const&) = delete;
  66:src/../h/../h/../h/MemoryAllocation.hpp ****     void operator=(MemoryAllocation const&)  = delete;*/
  67:src/../h/../h/../h/MemoryAllocation.hpp **** //===========================DEFINICIJA SINGLETON KLASE KRAJ========================
  68:src/../h/../h/../h/MemoryAllocation.hpp ****     static int bytesToBlocks(size_t size){
  69:src/../h/../h/../h/MemoryAllocation.hpp ****         return (size+sizeof(FreeMem)+MEM_BLOCK_SIZE-1)/MEM_BLOCK_SIZE;
  83              		.loc 2 69 9
  84              	.LBB18:
GAS LISTING /tmp/ccplJ8fq.s 			page 4


  85              	.LBB19:
  70:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  71:src/../h/../h/../h/MemoryAllocation.hpp **** 
  72:src/../h/../h/../h/MemoryAllocation.hpp **** 
  73:src/../h/../h/../h/MemoryAllocation.hpp **** //===========================METODE ZA ALOKACIJU MEMORIJE===========================
  74:src/../h/../h/../h/MemoryAllocation.hpp ****     static void tryToJoin (FreeMem* curr) {
  75:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!curr) return;
  76:src/../h/../h/../h/MemoryAllocation.hpp ****         if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
  77:src/../h/../h/../h/MemoryAllocation.hpp ****         // Remove the cur->next segment:
  78:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->size += curr->next->size;
  79:src/../h/../h/../h/MemoryAllocation.hpp ****             curr->next = curr->next->next;
  80:src/../h/../h/../h/MemoryAllocation.hpp ****             if (curr->next) curr->next->prev = curr;
  81:src/../h/../h/../h/MemoryAllocation.hpp ****             return;
  82:src/../h/../h/../h/MemoryAllocation.hpp ****         }
  83:src/../h/../h/../h/MemoryAllocation.hpp **** 
  84:src/../h/../h/../h/MemoryAllocation.hpp ****     }
  85:src/../h/../h/../h/MemoryAllocation.hpp **** 
  86:src/../h/../h/../h/MemoryAllocation.hpp ****     //===================================== mem_free, ali sa ptr ===============
  87:src/../h/../h/../h/MemoryAllocation.hpp ****         static int mem_free(void* ptr) { //radi i kada posaljem sa &
  88:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
  89:src/../h/../h/../h/MemoryAllocation.hpp ****         if(!fmem_head || ptr < (char*)fmem_head)
  90:src/../h/../h/../h/MemoryAllocation.hpp ****         {
  91:src/../h/../h/../h/MemoryAllocation.hpp ****             cur=nullptr;
  92:src/../h/../h/../h/MemoryAllocation.hpp ****         }else {
  93:src/../h/../h/../h/MemoryAllocation.hpp ****                 for (cur=fmem_head; cur->next!=ptr && ptr>(char*)(cur->next); cur=cur->next); //moz
  94:src/../h/../h/../h/MemoryAllocation.hpp ****             }
  95:src/../h/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newSeg = (FreeMem*)ptr;
  96:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->next=nullptr;
  97:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=nullptr;
  98:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->size=bytesToBlocks(sizeof(ptr))*MEM_BLOCK_SIZE;
  99:src/../h/../h/../h/MemoryAllocation.hpp ****                         //sizeof(ptr);
 100:src/../h/../h/../h/MemoryAllocation.hpp ****                 newSeg->prev=cur;
 101:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(cur) {
 102:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = cur->next;
 103:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 104:src/../h/../h/../h/MemoryAllocation.hpp ****                 else {
 105:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next = fmem_head;
 106:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 107:src/../h/../h/../h/MemoryAllocation.hpp ****                 if(newSeg->next) {
 108:src/../h/../h/../h/MemoryAllocation.hpp ****                     newSeg->next->prev=newSeg;
 109:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 110:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur) {
 111:src/../h/../h/../h/MemoryAllocation.hpp ****                     cur->next = newSeg; //zasto ovde odjednom uzme vrednost x8000 umesto x8000f...?
 112:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 113:src/../h/../h/../h/MemoryAllocation.hpp ****                 else {
 114:src/../h/../h/../h/MemoryAllocation.hpp ****                     fmem_head = newSeg;
 115:src/../h/../h/../h/MemoryAllocation.hpp ****                 }
 116:src/../h/../h/../h/MemoryAllocation.hpp ****                 // Try to merge with the previous and next segments:
 117:src/../h/../h/../h/MemoryAllocation.hpp ****             tryToJoin(newSeg);
 118:src/../h/../h/../h/MemoryAllocation.hpp ****             tryToJoin(cur);
 119:src/../h/../h/../h/MemoryAllocation.hpp ****             //mozda da fmem_head nije jednako starom fmem_headu?
 120:src/../h/../h/../h/MemoryAllocation.hpp ****             if(newSeg==nullptr){
 121:src/../h/../h/../h/MemoryAllocation.hpp ****                 return -1;
 122:src/../h/../h/../h/MemoryAllocation.hpp ****             }else{return 0;}
 123:src/../h/../h/../h/MemoryAllocation.hpp **** 
 124:src/../h/../h/../h/MemoryAllocation.hpp **** 
 125:src/../h/../h/../h/MemoryAllocation.hpp ****     }
GAS LISTING /tmp/ccplJ8fq.s 			page 5


 126:src/../h/../h/../h/MemoryAllocation.hpp ****     //===================================== kraj probe ==========================
 127:src/../h/../h/../h/MemoryAllocation.hpp **** 
 128:src/../h/../h/../h/MemoryAllocation.hpp **** 
 129:src/../h/../h/../h/MemoryAllocation.hpp **** 
 130:src/../h/../h/../h/MemoryAllocation.hpp ****     /*int mem_free(char* addr, size_t size) {
 131:src/../h/../h/../h/MemoryAllocation.hpp ****         // Find the place where to insert the new free segment (just after cur):
 132:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* cur=0;
 133:src/../h/../h/../h/MemoryAllocation.hpp ****         if (!fmem_head || addr<(char*)fmem_head)
 134:src/../h/../h/../h/MemoryAllocation.hpp ****             cur = 0; // insert as the first
 135:src/../h/../h/../h/MemoryAllocation.hpp ****         else
 136:src/../h/../h/../h/MemoryAllocation.hpp ****             for (cur=fmem_head; cur->next!=0 && addr>(char*)(cur->next);
 137:src/../h/../h/../h/MemoryAllocation.hpp ****                  cur=cur->next);
 138:src/../h/../h/../h/MemoryAllocation.hpp ****             // Insert the new segment after cur:
 139:src/../h/../h/../h/MemoryAllocation.hpp ****         FreeMem* newSeg = (FreeMem*)addr;
 140:src/../h/../h/../h/MemoryAllocation.hpp ****         newSeg->size = size;
 141:src/../h/../h/../h/MemoryAllocation.hpp ****         newSeg->prev = cur;
 142:src/../h/../h/../h/MemoryAllocation.hpp ****         if (cur) newSeg->next = cur->next;
 143:src/../h/../h/../h/MemoryAllocation.hpp ****         else newSeg->next = fmem_head;
 144:src/../h/../h/../h/MemoryAllocation.hpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
 145:src/../h/../h/../h/MemoryAllocation.hpp ****         if (cur) cur->next = newSeg;
 146:src/../h/../h/../h/MemoryAllocation.hpp ****         else fmem_head = newSeg;
 147:src/../h/../h/../h/MemoryAllocation.hpp ****             // Try to merge with the previous and next segments:
 148:src/../h/../h/../h/MemoryAllocation.hpp ****         tryToJoin(newSeg);
 149:src/../h/../h/../h/MemoryAllocation.hpp ****         tryToJoin(cur);
 150:src/../h/../h/../h/MemoryAllocation.hpp ****     }*/
 151:src/../h/../h/../h/MemoryAllocation.hpp **** 
 152:src/../h/../h/../h/MemoryAllocation.hpp ****     static void* mem_alloc(size_t size) {//uopste ne radi, iako u lotsofsmallmallocs pise da radi
 153:src/../h/../h/../h/MemoryAllocation.hpp ****         //size_t x=sizeof(fmem_head);
 154:src/../h/../h/../h/MemoryAllocation.hpp ****         //pozovi ovde samo bytes to blocks od size, da ne moras to da radis iz maina
 155:src/../h/../h/../h/MemoryAllocation.hpp ****         size=(size)*(size_t)MEM_BLOCK_SIZE; //kada je ovo ukljuceno, pravi problem u memfree, so il
  86              		.loc 2 155 9
 156:src/../h/../h/../h/MemoryAllocation.hpp ****         for (FreeMem* cur = fmem_head; cur != nullptr; cur=cur->next){ // U DRUGOJ ITERACIJI FMEM_H
  87              		.loc 2 156 9
  88              	.LBB20:
  89              		.loc 2 156 23 is_stmt 0
  90 0050 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
  90      83B70700 
  91 0058 83B70700 		ld	a5,0(a5)
  92              	.LVL5:
  93              	.L7:
  94              		.loc 2 156 44 is_stmt 1
  95 005c 638A070C 		beqz	a5,.L6
  96              	.LBB21:
 157:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
  97              		.loc 2 157 13
  98              		.loc 2 157 34 is_stmt 0
  99 0060 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
  99      03370700 
 100 0068 83360700 		ld	a3,0(a4)
 101 006c 83B60600 		ld	a3,0(a3)
 102              		.loc 2 157 22
 103 0070 23B0D700 		sd	a3,0(a5)
 158:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 104              		.loc 2 158 13 is_stmt 1
 105              		.loc 2 158 34 is_stmt 0
 106 0074 03370700 		ld	a4,0(a4)
 107 0078 83358700 		ld	a1,8(a4)
GAS LISTING /tmp/ccplJ8fq.s 			page 6


 108              		.loc 2 158 22
 109 007c 23B4B700 		sd	a1,8(a5)
 159:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 110              		.loc 2 159 13 is_stmt 1
 111              		.loc 2 159 22 is_stmt 0
 112 0080 03B70701 		ld	a4,16(a5)
 113              		.loc 2 159 13
 114 0084 1308F007 		li	a6,127
 115 0088 6376E802 		bleu	a4,a6,.L29
 160:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 116              		.loc 2 160 13 is_stmt 1
 117              	.LBB22:
 118              		.loc 2 160 26 is_stmt 0
 119 008c 130707F8 		addi	a4,a4,-128
 120              		.loc 2 160 13
 121 0090 13088001 		li	a6,24
 122 0094 636CE802 		bgtu	a4,a6,.L8
 161:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 123              		.loc 2 161 17 is_stmt 1
 124 0098 63820502 		beqz	a1,.L9
 125              		.loc 2 161 32
 126              		.loc 2 161 48 is_stmt 0
 127 009c 23B0D500 		sd	a3,0(a1)
 128              	.L10:
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->next) cur->next->prev = cur->prev;
 129              		.loc 2 163 17 is_stmt 1
 130              		.loc 2 163 26 is_stmt 0
 131 00a0 03B70700 		ld	a4,0(a5)
 132              		.loc 2 163 17
 133 00a4 63060708 		beqz	a4,.L6
 134              		.loc 2 163 32 is_stmt 1
 135              		.loc 2 163 55 is_stmt 0
 136 00a8 83B68700 		ld	a3,8(a5)
 137              		.loc 2 163 48
 138 00ac 2334D700 		sd	a3,8(a4)
 164:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 139              		.loc 2 164 17 is_stmt 1
 140              		.loc 2 164 24 is_stmt 0
 141 00b0 6F000008 		j	.L6
 142              	.L29:
 143              	.LBE22:
 144              	.LBE21:
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 145              		.loc 2 156 59
 146 00b4 93870600 		mv	a5,a3
 147              	.LVL6:
 148 00b8 6FF05FFA 		j	.L7
 149              	.LVL7:
 150              	.L9:
 151              	.LBB27:
 152              	.LBB25:
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 153              		.loc 2 162 22 is_stmt 1
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 154              		.loc 2 162 32 is_stmt 0
 155 00bc 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
GAS LISTING /tmp/ccplJ8fq.s 			page 7


 155      03370700 
 156 00c4 2330D700 		sd	a3,0(a4)
 157 00c8 6FF09FFD 		j	.L10
 158              	.L8:
 159              	.LBB23:
 165:src/../h/../h/../h/MemoryAllocation.hpp ****             }else {
 166:src/../h/../h/../h/MemoryAllocation.hpp ****                 FreeMem* newfrgm = (FreeMem*)((char*)cur+size);
 160              		.loc 2 166 17 is_stmt 1
 161              		.loc 2 166 26 is_stmt 0
 162 00cc 13870708 		addi	a4,a5,128
 163              	.LVL8:
 167:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev=nullptr;
 164              		.loc 2 167 17 is_stmt 1
 165              		.loc 2 167 30 is_stmt 0
 166 00d0 23340700 		sd	zero,8(a4)
 168:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next=nullptr;
 167              		.loc 2 168 17 is_stmt 1
 168              		.loc 2 168 30 is_stmt 0
 169 00d4 23B00708 		sd	zero,128(a5)
 169:src/../h/../h/../h/MemoryAllocation.hpp ****                 //newfrgm->size=cur->size-size;// DODATO TOKOM PROBE NITI
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->prev) cur->prev->next = newfrgm;
 170              		.loc 2 170 17 is_stmt 1
 171              		.loc 2 170 33 is_stmt 0
 172 00d8 83B68700 		ld	a3,8(a5)
 173              		.loc 2 170 25
 174 00dc 638C060C 		beqz	a3,.L12
 175              		.loc 2 170 39 is_stmt 1
 176              		.loc 2 170 55 is_stmt 0
 177 00e0 23B0E600 		sd	a4,0(a3)
 178              	.L13:
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 179              		.loc 2 172 17 is_stmt 1
 180              		.loc 2 172 33 is_stmt 0
 181 00e4 83B60700 		ld	a3,0(a5)
 182              		.loc 2 172 25
 183 00e8 63840600 		beqz	a3,.L14
 184              		.loc 2 172 39 is_stmt 1
 185              		.loc 2 172 55 is_stmt 0
 186 00ec 23B4E600 		sd	a4,8(a3)
 187              	.L14:
 173:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 188              		.loc 2 173 17 is_stmt 1
 189              		.loc 2 173 38 is_stmt 0
 190 00f0 83B58700 		ld	a1,8(a5)
 191              		.loc 2 173 31
 192 00f4 2334B700 		sd	a1,8(a4)
 174:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 193              		.loc 2 174 17 is_stmt 1
 194              		.loc 2 174 38 is_stmt 0
 195 00f8 83B60700 		ld	a3,0(a5)
 196              		.loc 2 174 31
 197 00fc 2330D700 		sd	a3,0(a4)
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
 198              		.loc 2 175 17 is_stmt 1
 199              		.loc 2 175 38 is_stmt 0
 200 0100 83B70701 		ld	a5,16(a5)
GAS LISTING /tmp/ccplJ8fq.s 			page 8


 201              	.LVL9:
 202              		.loc 2 175 42
 203 0104 938707F8 		addi	a5,a5,-128
 204              		.loc 2 175 31
 205 0108 2338F700 		sd	a5,16(a4)
 176:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 206              		.loc 2 176 17 is_stmt 1
 207              		.loc 2 176 35 is_stmt 0
 208 010c 9306070C 		addi	a3,a4,192
 209              		.loc 2 176 27
 210 0110 17080000 		la	a6,_ZN16MemoryAllocation9fmem_headE
 210      03380800 
 211 0118 2330D800 		sd	a3,0(a6)
 177:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
 212              		.loc 2 177 17 is_stmt 1
 213              		.loc 2 177 42 is_stmt 0
 214 011c 03380700 		ld	a6,0(a4)
 215              		.loc 2 177 32
 216 0120 2330070D 		sd	a6,192(a4)
 178:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 217              		.loc 2 178 17 is_stmt 1
 218              		.loc 2 178 32 is_stmt 0
 219 0124 2334B70C 		sd	a1,200(a4)
 179:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->size=newfrgm->size;
 220              		.loc 2 179 17 is_stmt 1
 221              		.loc 2 179 32 is_stmt 0
 222 0128 2338F70C 		sd	a5,208(a4)
 180:src/../h/../h/../h/MemoryAllocation.hpp ****                 //fmem_head = (FreeMem*) (char*)newfrgm;
 181:src/../h/../h/../h/MemoryAllocation.hpp ****                 return newfrgm;
 223              		.loc 2 181 17 is_stmt 1
 224              		.loc 2 181 24 is_stmt 0
 225 012c 93070700 		mv	a5,a4
 226              	.LVL10:
 227              	.L6:
 228              	.LBE23:
 229              	.LBE25:
 230              	.LBE27:
 231              	.LBE20:
 232              	.LBE19:
 233              	.LBE18:
 234              		.loc 1 23 13
 235 0130 23B0F400 		sd	a5,0(s1)
  24:src/tcb.cpp   ****     (*handle)->body=body;
 236              		.loc 1 24 5 is_stmt 1
 237              		.loc 1 24 20 is_stmt 0
 238 0134 23B0A700 		sd	a0,0(a5)
  25:src/tcb.cpp   ****     (*handle)->arguments=arguments;
 239              		.loc 1 25 5 is_stmt 1
 240              		.loc 1 25 6 is_stmt 0
 241 0138 83B70400 		ld	a5,0(s1)
 242              		.loc 1 25 25
 243 013c 23B4C702 		sd	a2,40(a5)
  26:src/tcb.cpp   ****     (*handle)->stack = body ? (uint64*) MemoryAllocation::mem_alloc(MemoryAllocation::bytesToBlocks
 244              		.loc 1 26 5 is_stmt 1
 245              		.loc 1 26 29 is_stmt 0
 246 0140 63060512 		beqz	a0,.L30
 247              	.LVL11:
GAS LISTING /tmp/ccplJ8fq.s 			page 9


  69:src/../h/../h/../h/MemoryAllocation.hpp ****     }
 248              		.loc 2 69 9 is_stmt 1
 249              	.LBB31:
 250              	.LBB32:
 155:src/../h/../h/../h/MemoryAllocation.hpp ****         for (FreeMem* cur = fmem_head; cur != nullptr; cur=cur->next){ // U DRUGOJ ITERACIJI FMEM_H
 251              		.loc 2 155 9
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 252              		.loc 2 156 9
 253              	.LBB33:
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 254              		.loc 2 156 23 is_stmt 0
 255 0144 97070000 		la	a5,_ZN16MemoryAllocation9fmem_headE
 255      83B70700 
 256 014c 83B70700 		ld	a5,0(a5)
 257              	.LVL12:
 258              	.L17:
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 259              		.loc 2 156 44 is_stmt 1
 260 0150 63800712 		beqz	a5,.L15
 261              	.LBB34:
 157:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 262              		.loc 2 157 13
 157:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 263              		.loc 2 157 34 is_stmt 0
 264 0154 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 264      03370700 
 265 015c 83360700 		ld	a3,0(a4)
 266 0160 03B60600 		ld	a2,0(a3)
 157:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->prev=fmem_head->prev;
 267              		.loc 2 157 22
 268 0164 23B0C700 		sd	a2,0(a5)
 158:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 269              		.loc 2 158 13 is_stmt 1
 158:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 270              		.loc 2 158 34 is_stmt 0
 271 0168 03370700 		ld	a4,0(a4)
 272 016c 83358700 		ld	a1,8(a4)
 158:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size<size) continue;
 273              		.loc 2 158 22
 274 0170 23B4B700 		sd	a1,8(a5)
 159:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 275              		.loc 2 159 13 is_stmt 1
 159:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 276              		.loc 2 159 22 is_stmt 0
 277 0174 03B70701 		ld	a4,16(a5)
 159:src/../h/../h/../h/MemoryAllocation.hpp ****             if (cur->size-size<=sizeof(FreeMem)){
 278              		.loc 2 159 13
 279 0178 B7160000 		li	a3,4096
 280 017c 9386F603 		addi	a3,a3,63
 281 0180 63F4E604 		bleu	a4,a3,.L31
 160:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 282              		.loc 2 160 13 is_stmt 1
 283              	.LBB35:
 160:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 284              		.loc 2 160 26 is_stmt 0
 285 0184 B7F6FFFF 		li	a3,-4096
 286 0188 938606FC 		addi	a3,a3,-64
GAS LISTING /tmp/ccplJ8fq.s 			page 10


 287 018c 3307D700 		add	a4,a4,a3
 160:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->prev) cur->prev->next = cur->next;
 288              		.loc 2 160 13
 289 0190 93068001 		li	a3,24
 290 0194 63E6E604 		bgtu	a4,a3,.L18
 161:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 291              		.loc 2 161 17 is_stmt 1
 292 0198 638C0502 		beqz	a1,.L19
 161:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 293              		.loc 2 161 32
 161:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = cur->next;
 294              		.loc 2 161 48 is_stmt 0
 295 019c 23B0C500 		sd	a2,0(a1)
 296              	.L20:
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 297              		.loc 2 163 17 is_stmt 1
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 298              		.loc 2 163 26 is_stmt 0
 299 01a0 03B70700 		ld	a4,0(a5)
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 300              		.loc 2 163 17
 301 01a4 6306070C 		beqz	a4,.L15
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 302              		.loc 2 163 32 is_stmt 1
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 303              		.loc 2 163 55 is_stmt 0
 304 01a8 83B68700 		ld	a3,8(a5)
 163:src/../h/../h/../h/MemoryAllocation.hpp ****                 return cur;
 305              		.loc 2 163 48
 306 01ac 2334D700 		sd	a3,8(a4)
 164:src/../h/../h/../h/MemoryAllocation.hpp ****             }else {
 307              		.loc 2 164 17 is_stmt 1
 164:src/../h/../h/../h/MemoryAllocation.hpp ****             }else {
 308              		.loc 2 164 24 is_stmt 0
 309 01b0 6F00000C 		j	.L15
 310              	.LVL13:
 311              	.L12:
 312              	.LBE35:
 313              	.LBE34:
 314              	.LBE33:
 315              	.LBE32:
 316              	.LBE31:
 317              	.LBB41:
 318              	.LBB30:
 319              	.LBB29:
 320              	.LBB28:
 321              	.LBB26:
 322              	.LBB24:
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 323              		.loc 2 171 22 is_stmt 1
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 324              		.loc 2 171 41 is_stmt 0
 325 01b4 9306070C 		addi	a3,a4,192
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 326              		.loc 2 171 32
 327 01b8 97050000 		la	a1,_ZN16MemoryAllocation9fmem_headE
 327      83B50500 
GAS LISTING /tmp/ccplJ8fq.s 			page 11


 328 01c0 23B0D500 		sd	a3,0(a1)
 329 01c4 6FF01FF2 		j	.L13
 330              	.LVL14:
 331              	.L31:
 332              	.LBE24:
 333              	.LBE26:
 334              	.LBE28:
 335              	.LBE29:
 336              	.LBE30:
 337              	.LBE41:
 338              	.LBB42:
 339              	.LBB40:
 340              	.LBB39:
 156:src/../h/../h/../h/MemoryAllocation.hpp ****             cur->next=fmem_head->next;
 341              		.loc 2 156 59
 342 01c8 93070600 		mv	a5,a2
 343              	.LVL15:
 344 01cc 6FF05FF8 		j	.L17
 345              	.LVL16:
 346              	.L19:
 347              	.LBB38:
 348              	.LBB37:
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->next) cur->next->prev = cur->prev;
 349              		.loc 2 162 22 is_stmt 1
 162:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur->next) cur->next->prev = cur->prev;
 350              		.loc 2 162 32 is_stmt 0
 351 01d0 17070000 		la	a4,_ZN16MemoryAllocation9fmem_headE
 351      03370700 
 352 01d8 2330C700 		sd	a2,0(a4)
 353 01dc 6FF05FFC 		j	.L20
 354              	.L18:
 355              	.LBB36:
 166:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev=nullptr;
 356              		.loc 2 166 17 is_stmt 1
 166:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev=nullptr;
 357              		.loc 2 166 26 is_stmt 0
 358 01e0 37170000 		li	a4,4096
 359 01e4 13070704 		addi	a4,a4,64
 360 01e8 3387E700 		add	a4,a5,a4
 361              	.LVL17:
 167:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next=nullptr;
 362              		.loc 2 167 17 is_stmt 1
 167:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next=nullptr;
 363              		.loc 2 167 30 is_stmt 0
 364 01ec 23340700 		sd	zero,8(a4)
 168:src/../h/../h/../h/MemoryAllocation.hpp ****                 //newfrgm->size=cur->size-size;// DODATO TOKOM PROBE NITI
 365              		.loc 2 168 17 is_stmt 1
 168:src/../h/../h/../h/MemoryAllocation.hpp ****                 //newfrgm->size=cur->size-size;// DODATO TOKOM PROBE NITI
 366              		.loc 2 168 30 is_stmt 0
 367 01f0 23300700 		sd	zero,0(a4)
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 368              		.loc 2 170 17 is_stmt 1
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 369              		.loc 2 170 33 is_stmt 0
 370 01f4 83B68700 		ld	a3,8(a5)
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 371              		.loc 2 170 25
GAS LISTING /tmp/ccplJ8fq.s 			page 12


 372 01f8 63800606 		beqz	a3,.L22
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 373              		.loc 2 170 39 is_stmt 1
 170:src/../h/../h/../h/MemoryAllocation.hpp ****                 else fmem_head = newfrgm+sizeof(fmem_head); // ovo sam dodao sizeof da bi mi radio 
 374              		.loc 2 170 55 is_stmt 0
 375 01fc 23B0E600 		sd	a4,0(a3)
 376              	.L23:
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 377              		.loc 2 172 17 is_stmt 1
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 378              		.loc 2 172 33 is_stmt 0
 379 0200 83B60700 		ld	a3,0(a5)
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 380              		.loc 2 172 25
 381 0204 63840600 		beqz	a3,.L24
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 382              		.loc 2 172 39 is_stmt 1
 172:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->prev = cur->prev;
 383              		.loc 2 172 55 is_stmt 0
 384 0208 23B4E600 		sd	a4,8(a3)
 385              	.L24:
 173:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 386              		.loc 2 173 17 is_stmt 1
 173:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 387              		.loc 2 173 38 is_stmt 0
 388 020c 03B68700 		ld	a2,8(a5)
 173:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->next = cur->next;
 389              		.loc 2 173 31
 390 0210 2334C700 		sd	a2,8(a4)
 174:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
 391              		.loc 2 174 17 is_stmt 1
 174:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
 392              		.loc 2 174 38 is_stmt 0
 393 0214 83B60700 		ld	a3,0(a5)
 174:src/../h/../h/../h/MemoryAllocation.hpp ****                 newfrgm->size = cur->size-size;
 394              		.loc 2 174 31
 395 0218 2330D700 		sd	a3,0(a4)
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 396              		.loc 2 175 17 is_stmt 1
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 397              		.loc 2 175 38 is_stmt 0
 398 021c 83B70701 		ld	a5,16(a5)
 399              	.LVL18:
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 400              		.loc 2 175 42
 401 0220 B7F6FFFF 		li	a3,-4096
 402 0224 938606FC 		addi	a3,a3,-64
 403 0228 B387D700 		add	a5,a5,a3
 175:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head =newfrgm+sizeof(fmem_head);
 404              		.loc 2 175 31
 405 022c 2338F700 		sd	a5,16(a4)
 176:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
 406              		.loc 2 176 17 is_stmt 1
 176:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
 407              		.loc 2 176 35 is_stmt 0
 408 0230 9306070C 		addi	a3,a4,192
 176:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->next=newfrgm->next;
GAS LISTING /tmp/ccplJ8fq.s 			page 13


 409              		.loc 2 176 27
 410 0234 97050000 		la	a1,_ZN16MemoryAllocation9fmem_headE
 410      83B50500 
 411 023c 23B0D500 		sd	a3,0(a1)
 177:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 412              		.loc 2 177 17 is_stmt 1
 177:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 413              		.loc 2 177 42 is_stmt 0
 414 0240 83350700 		ld	a1,0(a4)
 177:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->prev=newfrgm->prev;
 415              		.loc 2 177 32
 416 0244 2330B70C 		sd	a1,192(a4)
 178:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->size=newfrgm->size;
 417              		.loc 2 178 17 is_stmt 1
 178:src/../h/../h/../h/MemoryAllocation.hpp ****                 fmem_head->size=newfrgm->size;
 418              		.loc 2 178 32 is_stmt 0
 419 0248 2334C70C 		sd	a2,200(a4)
 179:src/../h/../h/../h/MemoryAllocation.hpp ****                 //fmem_head = (FreeMem*) (char*)newfrgm;
 420              		.loc 2 179 17 is_stmt 1
 179:src/../h/../h/../h/MemoryAllocation.hpp ****                 //fmem_head = (FreeMem*) (char*)newfrgm;
 421              		.loc 2 179 32 is_stmt 0
 422 024c 2338F70C 		sd	a5,208(a4)
 423              		.loc 2 181 17 is_stmt 1
 424              		.loc 2 181 24 is_stmt 0
 425 0250 93070700 		mv	a5,a4
 426              	.LVL19:
 427 0254 6F00C001 		j	.L15
 428              	.LVL20:
 429              	.L22:
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 430              		.loc 2 171 22 is_stmt 1
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 431              		.loc 2 171 41 is_stmt 0
 432 0258 9306070C 		addi	a3,a4,192
 171:src/../h/../h/../h/MemoryAllocation.hpp ****                 if (cur && cur->next) cur->next->prev = newfrgm;
 433              		.loc 2 171 32
 434 025c 17060000 		la	a2,_ZN16MemoryAllocation9fmem_headE
 434      03360600 
 435 0264 2330D600 		sd	a3,0(a2)
 436 0268 6FF09FF9 		j	.L23
 437              	.LVL21:
 438              	.L30:
 439              	.LBE36:
 440              	.LBE37:
 441              	.LBE38:
 442              	.LBE39:
 443              	.LBE40:
 444              	.LBE42:
 445              		.loc 1 26 29
 446 026c 93070000 		li	a5,0
 447              	.LVL22:
 448              	.L15:
 449              		.loc 1 26 6 discriminator 4
 450 0270 03B70400 		ld	a4,0(s1)
 451              		.loc 1 26 22 discriminator 4
 452 0274 2334F700 		sd	a5,8(a4)
  27:src/tcb.cpp   ****     (*handle)->context.ra = body ? (uint64)&threadWrapper : 0;
GAS LISTING /tmp/ccplJ8fq.s 			page 14


 453              		.loc 1 27 5 is_stmt 1 discriminator 4
 454              		.loc 1 27 34 is_stmt 0 discriminator 4
 455 0278 630C0506 		beqz	a0,.L32
 456              		.loc 1 27 34 discriminator 1
 457 027c 17070000 		lla	a4,_ZN3TCB13threadWrapperEv
 457      13070700 
 458              	.L25:
 459              		.loc 1 27 6 discriminator 4
 460 0284 83B70400 		ld	a5,0(s1)
 461              		.loc 1 27 27 discriminator 4
 462 0288 23B8E700 		sd	a4,16(a5)
  28:src/tcb.cpp   ****     (*handle)->context.sp = (*handle)->stack ? (uint64) &(*handle)->stack[DEFAULT_STACK_SIZE] : 0;
 463              		.loc 1 28 5 is_stmt 1 discriminator 4
 464              		.loc 1 28 30 is_stmt 0 discriminator 4
 465 028c 03B70400 		ld	a4,0(s1)
 466              		.loc 1 28 40 discriminator 4
 467 0290 83378700 		ld	a5,8(a4)
 468              		.loc 1 28 46 discriminator 4
 469 0294 63820706 		beqz	a5,.L33
 470              		.loc 1 28 57 discriminator 1
 471 0298 B7860000 		li	a3,32768
 472 029c B387D700 		add	a5,a5,a3
 473              	.L26:
 474              		.loc 1 28 27 discriminator 4
 475 02a0 233CF700 		sd	a5,24(a4)
  29:src/tcb.cpp   ****     (*handle)->finished=false;
 476              		.loc 1 29 5 is_stmt 1 discriminator 4
 477              		.loc 1 29 6 is_stmt 0 discriminator 4
 478 02a4 83B70400 		ld	a5,0(s1)
 479              		.loc 1 29 24 discriminator 4
 480 02a8 23800702 		sb	zero,32(a5)
  30:src/tcb.cpp   ****     (*handle)->semBlocked=nullptr;
 481              		.loc 1 30 5 is_stmt 1 discriminator 4
 482              		.loc 1 30 6 is_stmt 0 discriminator 4
 483 02ac 83B70400 		ld	a5,0(s1)
 484              		.loc 1 30 26 discriminator 4
 485 02b0 23B80702 		sd	zero,48(a5)
  31:src/tcb.cpp   ****     (*handle)->timeSlice=TIME_SLICE;
 486              		.loc 1 31 5 is_stmt 1 discriminator 4
 487              		.loc 1 31 6 is_stmt 0 discriminator 4
 488 02b4 83B70400 		ld	a5,0(s1)
 489              		.loc 1 31 25 discriminator 4
 490 02b8 13072000 		li	a4,2
 491 02bc 23BCE702 		sd	a4,56(a5)
  32:src/tcb.cpp   ****     if (body != nullptr) { Scheduler::put(*handle); }
 492              		.loc 1 32 5 is_stmt 1 discriminator 4
 493 02c0 63080500 		beqz	a0,.L27
 494              		.loc 1 32 28 discriminator 1
 495              		.loc 1 32 42 is_stmt 0 discriminator 1
 496 02c4 03B50400 		ld	a0,0(s1)
 497              	.LVL23:
 498 02c8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 498      E7800000 
 499              	.LVL24:
 500              	.L27:
  33:src/tcb.cpp   ****     if(*handle==nullptr){
 501              		.loc 1 33 5 is_stmt 1
GAS LISTING /tmp/ccplJ8fq.s 			page 15


 502              		.loc 1 33 8 is_stmt 0
 503 02d0 83B70400 		ld	a5,0(s1)
 504              		.loc 1 33 5
 505 02d4 63860702 		beqz	a5,.L36
  34:src/tcb.cpp   ****         return -1;
  35:src/tcb.cpp   ****     }else{return 0;}
 506              		.loc 1 35 18
 507 02d8 13050000 		li	a0,0
 508              	.L28:
  36:src/tcb.cpp   **** }
 509              		.loc 1 36 1
 510 02dc 83308101 		ld	ra,24(sp)
 511              		.cfi_remember_state
 512              		.cfi_restore 1
 513 02e0 03340101 		ld	s0,16(sp)
 514              		.cfi_restore 8
 515              		.cfi_def_cfa 2, 32
 516 02e4 83348100 		ld	s1,8(sp)
 517              		.cfi_restore 9
 518              	.LVL25:
 519 02e8 13010102 		addi	sp,sp,32
 520              		.cfi_def_cfa_offset 0
 521 02ec 67800000 		jr	ra
 522              	.LVL26:
 523              	.L32:
 524              		.cfi_restore_state
  27:src/tcb.cpp   ****     (*handle)->context.sp = (*handle)->stack ? (uint64) &(*handle)->stack[DEFAULT_STACK_SIZE] : 0;
 525              		.loc 1 27 34
 526 02f0 13070000 		li	a4,0
 527 02f4 6FF01FF9 		j	.L25
 528              	.L33:
  28:src/tcb.cpp   ****     (*handle)->finished=false;
 529              		.loc 1 28 46
 530 02f8 93070000 		li	a5,0
 531 02fc 6FF05FFA 		j	.L26
 532              	.LVL27:
 533              	.L36:
  34:src/tcb.cpp   ****     }else{return 0;}
 534              		.loc 1 34 17
 535 0300 1305F0FF 		li	a0,-1
 536 0304 6FF09FFD 		j	.L28
 537              		.cfi_endproc
 538              	.LFE48:
 540              		.align	2
 541              		.globl	_ZN3TCB5yieldEv
 543              	_ZN3TCB5yieldEv:
 544              	.LFB49:
  37:src/tcb.cpp   **** 
  38:src/tcb.cpp   **** void TCB::yield(){
 545              		.loc 1 38 18 is_stmt 1
 546              		.cfi_startproc
 547 0308 130101FF 		addi	sp,sp,-16
 548              		.cfi_def_cfa_offset 16
 549 030c 23348100 		sd	s0,8(sp)
 550              		.cfi_offset 8, -8
 551 0310 13040101 		addi	s0,sp,16
 552              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccplJ8fq.s 			page 16


  39:src/tcb.cpp   ****     uint64 sysCallNr=0x13UL;
 553              		.loc 1 39 5
 554              	.LVL28:
  40:src/tcb.cpp   ****     __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 555              		.loc 1 40 5
 556              		.loc 1 40 66 is_stmt 0
 557 0314 93073001 		li	a5,19
 558              	#APP
 559              	# 40 "src/tcb.cpp" 1
  41              	    __asm__ volatile ("ecall");
 560              		mv a0, a5
 561              	# 0 "" 2
 562              		.loc 1 41 5 is_stmt 1
 563              		.loc 1 41 31 is_stmt 0
 564              	# 41 "src/tcb.cpp" 1
  42              	
  43:src/tcb.cpp   **** };
 565              		ecall
 566              	# 0 "" 2
 567              		.loc 1 43 1
 568              	#NO_APP
 569 0320 03348100 		ld	s0,8(sp)
 570              		.cfi_restore 8
 571              		.cfi_def_cfa 2, 16
 572 0324 13010101 		addi	sp,sp,16
 573              		.cfi_def_cfa_offset 0
 574 0328 67800000 		jr	ra
 575              		.cfi_endproc
 576              	.LFE49:
 578              		.align	2
 579              		.globl	_ZN3TCB13threadWrapperEv
 581              	_ZN3TCB13threadWrapperEv:
 582              	.LFB51:
  44:src/tcb.cpp   **** 
  45:src/tcb.cpp   **** void TCB::dispatch() {
  46:src/tcb.cpp   ****     TCB *old = running;
  47:src/tcb.cpp   ****     if (old->semBlocked==nullptr && !old->isFinished()) {
  48:src/tcb.cpp   ****         Scheduler::put(old);
  49:src/tcb.cpp   ****     }
  50:src/tcb.cpp   ****     running = Scheduler::get();
  51:src/tcb.cpp   **** 
  52:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  53:src/tcb.cpp   **** }
  54:src/tcb.cpp   **** 
  55:src/tcb.cpp   **** void TCB::threadWrapper() {
 583              		.loc 1 55 27 is_stmt 1
 584              		.cfi_startproc
 585 032c 130101FE 		addi	sp,sp,-32
 586              		.cfi_def_cfa_offset 32
 587 0330 233C1100 		sd	ra,24(sp)
 588 0334 23388100 		sd	s0,16(sp)
 589 0338 23349100 		sd	s1,8(sp)
 590              		.cfi_offset 1, -8
 591              		.cfi_offset 8, -16
 592              		.cfi_offset 9, -24
 593 033c 13040102 		addi	s0,sp,32
 594              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccplJ8fq.s 			page 17


  56:src/tcb.cpp   ****     //RiscV::popSppSpie();
  57:src/tcb.cpp   ****     __asm__ volatile ("csrw sepc, ra");
 595              		.loc 1 57 5
 596              		.loc 1 57 39 is_stmt 0
 597              	#APP
 598              	# 57 "src/tcb.cpp" 1
  58              	    //__asm__ volatile ("sret");
  59:src/tcb.cpp   ****     running->body(running->arguments);
 599              		csrw sepc, ra
 600              	# 0 "" 2
 601              		.loc 1 59 5 is_stmt 1
 602              		.loc 1 59 14 is_stmt 0
 603              	#NO_APP
 604 0344 97040000 		lla	s1,.LANCHOR0
 604      93840400 
 605 034c 83B70400 		ld	a5,0(s1)
 606 0350 03B70700 		ld	a4,0(a5)
 607              		.loc 1 59 18
 608 0354 03B58702 		ld	a0,40(a5)
 609 0358 E7000700 		jalr	a4
 610              	.LVL29:
  60:src/tcb.cpp   ****     running->setFinished(true);
 611              		.loc 1 60 5 is_stmt 1
 612              		.loc 1 60 25 is_stmt 0
 613 035c 93051000 		li	a1,1
 614 0360 03B50400 		ld	a0,0(s1)
 615 0364 97000000 		call	_ZN3TCB11setFinishedEb
 615      E7800000 
 616              	.LVL30:
  61:src/tcb.cpp   ****     TCB::yield();
 617              		.loc 1 61 5 is_stmt 1
 618              		.loc 1 61 15 is_stmt 0
 619 036c 97000000 		call	_ZN3TCB5yieldEv
 619      E7800000 
 620              	.LVL31:
  62:src/tcb.cpp   **** }
 621              		.loc 1 62 1
 622 0374 83308101 		ld	ra,24(sp)
 623              		.cfi_restore 1
 624 0378 03340101 		ld	s0,16(sp)
 625              		.cfi_restore 8
 626              		.cfi_def_cfa 2, 32
 627 037c 83348100 		ld	s1,8(sp)
 628              		.cfi_restore 9
 629 0380 13010102 		addi	sp,sp,32
 630              		.cfi_def_cfa_offset 0
 631 0384 67800000 		jr	ra
 632              		.cfi_endproc
 633              	.LFE51:
 635              		.align	2
 636              		.globl	_ZN3TCB8dispatchEv
 638              	_ZN3TCB8dispatchEv:
 639              	.LFB50:
  45:src/tcb.cpp   ****     TCB *old = running;
 640              		.loc 1 45 22 is_stmt 1
 641              		.cfi_startproc
 642 0388 130101FE 		addi	sp,sp,-32
GAS LISTING /tmp/ccplJ8fq.s 			page 18


 643              		.cfi_def_cfa_offset 32
 644 038c 233C1100 		sd	ra,24(sp)
 645 0390 23388100 		sd	s0,16(sp)
 646 0394 23349100 		sd	s1,8(sp)
 647              		.cfi_offset 1, -8
 648              		.cfi_offset 8, -16
 649              		.cfi_offset 9, -24
 650 0398 13040102 		addi	s0,sp,32
 651              		.cfi_def_cfa 8, 0
  46:src/tcb.cpp   ****     if (old->semBlocked==nullptr && !old->isFinished()) {
 652              		.loc 1 46 5
  46:src/tcb.cpp   ****     if (old->semBlocked==nullptr && !old->isFinished()) {
 653              		.loc 1 46 10 is_stmt 0
 654 039c 97040000 		ld	s1,.LANCHOR0
 654      83B40400 
 655              	.LVL32:
  47:src/tcb.cpp   ****         Scheduler::put(old);
 656              		.loc 1 47 5 is_stmt 1
  47:src/tcb.cpp   ****         Scheduler::put(old);
 657              		.loc 1 47 14 is_stmt 0
 658 03a4 83B70403 		ld	a5,48(s1)
  47:src/tcb.cpp   ****         Scheduler::put(old);
 659              		.loc 1 47 34
 660 03a8 638C0702 		beqz	a5,.L44
 661              	.L42:
  50:src/tcb.cpp   **** 
 662              		.loc 1 50 5 is_stmt 1
  50:src/tcb.cpp   **** 
 663              		.loc 1 50 29 is_stmt 0
 664 03ac 97000000 		call	_ZN9Scheduler3getEv@plt
 664      E7800000 
 665              	.LVL33:
  50:src/tcb.cpp   **** 
 666              		.loc 1 50 13
 667 03b4 97070000 		sd	a0,.LANCHOR0,a5
 667      23B0A700 
  52:src/tcb.cpp   **** }
 668              		.loc 1 52 5 is_stmt 1
  52:src/tcb.cpp   **** }
 669              		.loc 1 52 23 is_stmt 0
 670 03bc 93050501 		addi	a1,a0,16
 671 03c0 13850401 		addi	a0,s1,16
 672 03c4 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 672      E7800000 
 673              	.LVL34:
  53:src/tcb.cpp   **** 
 674              		.loc 1 53 1
 675 03cc 83308101 		ld	ra,24(sp)
 676              		.cfi_remember_state
 677              		.cfi_restore 1
 678 03d0 03340101 		ld	s0,16(sp)
 679              		.cfi_restore 8
 680              		.cfi_def_cfa 2, 32
 681 03d4 83348100 		ld	s1,8(sp)
 682              		.cfi_restore 9
 683              	.LVL35:
 684 03d8 13010102 		addi	sp,sp,32
GAS LISTING /tmp/ccplJ8fq.s 			page 19


 685              		.cfi_def_cfa_offset 0
 686 03dc 67800000 		jr	ra
 687              	.LVL36:
 688              	.L44:
 689              		.cfi_restore_state
  47:src/tcb.cpp   ****         Scheduler::put(old);
 690              		.loc 1 47 53 discriminator 1
 691 03e0 13850400 		mv	a0,s1
 692 03e4 97000000 		call	_ZNK3TCB10isFinishedEv
 692      E7800000 
 693              	.LVL37:
  47:src/tcb.cpp   ****         Scheduler::put(old);
 694              		.loc 1 47 34 discriminator 1
 695 03ec E31005FC 		bnez	a0,.L42
  48:src/tcb.cpp   ****     }
 696              		.loc 1 48 9 is_stmt 1
  48:src/tcb.cpp   ****     }
 697              		.loc 1 48 23 is_stmt 0
 698 03f0 13850400 		mv	a0,s1
 699 03f4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 699      E7800000 
 700              	.LVL38:
 701 03fc 6FF01FFB 		j	.L42
 702              		.cfi_endproc
 703              	.LFE50:
 705              		.globl	_ZN3TCB16timeSliceCounterE
 706              		.globl	_ZN3TCB7runningE
 707              		.bss
 708              		.align	3
 709              		.set	.LANCHOR0,. + 0
 712              	_ZN3TCB7runningE:
 713 0000 00000000 		.zero	8
 713      00000000 
 716              	_ZN3TCB16timeSliceCounterE:
 717 0008 00000000 		.zero	8
 717      00000000 
 718              		.text
 719              	.Letext0:
 720              		.file 3 "src/../h/../lib/hw.h"
 721              		.file 4 "src/../h/../h/Scheduler.hpp"
 722              		.file 5 "src/../h/tcb.hpp"
 723              		.file 6 "src/../h/../h/semaphore.hpp"
GAS LISTING /tmp/ccplJ8fq.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccplJ8fq.s:9      .text:0000000000000000 _ZNK3TCB10isFinishedEv
     /tmp/ccplJ8fq.s:13     .text:0000000000000000 .L0 
     /tmp/ccplJ8fq.s:15     .text:0000000000000000 .L0 
     /tmp/ccplJ8fq.s:16     .text:0000000000000004 .L0 
     /tmp/ccplJ8fq.s:18     .text:0000000000000008 .L0 
     /tmp/ccplJ8fq.s:20     .text:000000000000000c .L0 
     /tmp/ccplJ8fq.s:22     .text:000000000000000c .L0 
     /tmp/ccplJ8fq.s:23     .text:000000000000000c .L0 
     /tmp/ccplJ8fq.s:26     .text:0000000000000014 .L0 
     /tmp/ccplJ8fq.s:27     .text:0000000000000014 .L0 
     /tmp/ccplJ8fq.s:29     .text:0000000000000018 .L0 
     /tmp/ccplJ8fq.s:31     .text:000000000000001c .L0 
     /tmp/ccplJ8fq.s:37     .text:000000000000001c _ZN3TCB11setFinishedEb
     /tmp/ccplJ8fq.s:40     .text:000000000000001c .L0 
     /tmp/ccplJ8fq.s:42     .text:000000000000001c .L0 
     /tmp/ccplJ8fq.s:43     .text:0000000000000020 .L0 
     /tmp/ccplJ8fq.s:45     .text:0000000000000024 .L0 
     /tmp/ccplJ8fq.s:47     .text:0000000000000028 .L0 
     /tmp/ccplJ8fq.s:49     .text:0000000000000028 .L0 
     /tmp/ccplJ8fq.s:50     .text:0000000000000028 .L0 
     /tmp/ccplJ8fq.s:52     .text:000000000000002c .L0 
     /tmp/ccplJ8fq.s:53     .text:0000000000000030 .L0 
     /tmp/ccplJ8fq.s:54     .text:0000000000000030 .L0 
     /tmp/ccplJ8fq.s:56     .text:0000000000000034 .L0 
     /tmp/ccplJ8fq.s:58     .text:0000000000000038 .L0 
     /tmp/ccplJ8fq.s:64     .text:0000000000000038 _ZN3TCB12createThreadEPFvPvEPPS_S0_
     /tmp/ccplJ8fq.s:67     .text:0000000000000038 .L0 
     /tmp/ccplJ8fq.s:69     .text:0000000000000038 .L0 
     /tmp/ccplJ8fq.s:70     .text:000000000000003c .L0 
     /tmp/ccplJ8fq.s:74     .text:0000000000000048 .L0 
     /tmp/ccplJ8fq.s:75     .text:0000000000000048 .L0 
     /tmp/ccplJ8fq.s:76     .text:0000000000000048 .L0 
     /tmp/ccplJ8fq.s:78     .text:000000000000004c .L0 
     /tmp/ccplJ8fq.s:83     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:86     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:87     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:89     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:90     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:95     .text:000000000000005c .L0 
     /tmp/ccplJ8fq.s:98     .text:0000000000000060 .L0 
     /tmp/ccplJ8fq.s:99     .text:0000000000000060 .L0 
     /tmp/ccplJ8fq.s:103    .text:0000000000000070 .L0 
     /tmp/ccplJ8fq.s:105    .text:0000000000000074 .L0 
     /tmp/ccplJ8fq.s:106    .text:0000000000000074 .L0 
     /tmp/ccplJ8fq.s:109    .text:000000000000007c .L0 
     /tmp/ccplJ8fq.s:111    .text:0000000000000080 .L0 
     /tmp/ccplJ8fq.s:112    .text:0000000000000080 .L0 
     /tmp/ccplJ8fq.s:114    .text:0000000000000084 .L0 
     /tmp/ccplJ8fq.s:118    .text:000000000000008c .L0 
     /tmp/ccplJ8fq.s:119    .text:000000000000008c .L0 
     /tmp/ccplJ8fq.s:121    .text:0000000000000090 .L0 
     /tmp/ccplJ8fq.s:124    .text:0000000000000098 .L0 
     /tmp/ccplJ8fq.s:126    .text:000000000000009c .L0 
     /tmp/ccplJ8fq.s:127    .text:000000000000009c .L0 
     /tmp/ccplJ8fq.s:130    .text:00000000000000a0 .L0 
GAS LISTING /tmp/ccplJ8fq.s 			page 21


     /tmp/ccplJ8fq.s:131    .text:00000000000000a0 .L0 
     /tmp/ccplJ8fq.s:133    .text:00000000000000a4 .L0 
     /tmp/ccplJ8fq.s:135    .text:00000000000000a8 .L0 
     /tmp/ccplJ8fq.s:136    .text:00000000000000a8 .L0 
     /tmp/ccplJ8fq.s:138    .text:00000000000000ac .L0 
     /tmp/ccplJ8fq.s:140    .text:00000000000000b0 .L0 
     /tmp/ccplJ8fq.s:141    .text:00000000000000b0 .L0 
     /tmp/ccplJ8fq.s:146    .text:00000000000000b4 .L0 
     /tmp/ccplJ8fq.s:154    .text:00000000000000bc .L0 
     /tmp/ccplJ8fq.s:155    .text:00000000000000bc .L0 
     /tmp/ccplJ8fq.s:161    .text:00000000000000cc .L0 
     /tmp/ccplJ8fq.s:162    .text:00000000000000cc .L0 
     /tmp/ccplJ8fq.s:165    .text:00000000000000d0 .L0 
     /tmp/ccplJ8fq.s:166    .text:00000000000000d0 .L0 
     /tmp/ccplJ8fq.s:168    .text:00000000000000d4 .L0 
     /tmp/ccplJ8fq.s:169    .text:00000000000000d4 .L0 
     /tmp/ccplJ8fq.s:171    .text:00000000000000d8 .L0 
     /tmp/ccplJ8fq.s:172    .text:00000000000000d8 .L0 
     /tmp/ccplJ8fq.s:174    .text:00000000000000dc .L0 
     /tmp/ccplJ8fq.s:176    .text:00000000000000e0 .L0 
     /tmp/ccplJ8fq.s:177    .text:00000000000000e0 .L0 
     /tmp/ccplJ8fq.s:180    .text:00000000000000e4 .L0 
     /tmp/ccplJ8fq.s:181    .text:00000000000000e4 .L0 
     /tmp/ccplJ8fq.s:183    .text:00000000000000e8 .L0 
     /tmp/ccplJ8fq.s:185    .text:00000000000000ec .L0 
     /tmp/ccplJ8fq.s:186    .text:00000000000000ec .L0 
     /tmp/ccplJ8fq.s:189    .text:00000000000000f0 .L0 
     /tmp/ccplJ8fq.s:190    .text:00000000000000f0 .L0 
     /tmp/ccplJ8fq.s:192    .text:00000000000000f4 .L0 
     /tmp/ccplJ8fq.s:194    .text:00000000000000f8 .L0 
     /tmp/ccplJ8fq.s:195    .text:00000000000000f8 .L0 
     /tmp/ccplJ8fq.s:197    .text:00000000000000fc .L0 
     /tmp/ccplJ8fq.s:199    .text:0000000000000100 .L0 
     /tmp/ccplJ8fq.s:200    .text:0000000000000100 .L0 
     /tmp/ccplJ8fq.s:203    .text:0000000000000104 .L0 
     /tmp/ccplJ8fq.s:205    .text:0000000000000108 .L0 
     /tmp/ccplJ8fq.s:207    .text:000000000000010c .L0 
     /tmp/ccplJ8fq.s:208    .text:000000000000010c .L0 
     /tmp/ccplJ8fq.s:210    .text:0000000000000110 .L0 
     /tmp/ccplJ8fq.s:213    .text:000000000000011c .L0 
     /tmp/ccplJ8fq.s:214    .text:000000000000011c .L0 
     /tmp/ccplJ8fq.s:216    .text:0000000000000120 .L0 
     /tmp/ccplJ8fq.s:218    .text:0000000000000124 .L0 
     /tmp/ccplJ8fq.s:219    .text:0000000000000124 .L0 
     /tmp/ccplJ8fq.s:221    .text:0000000000000128 .L0 
     /tmp/ccplJ8fq.s:222    .text:0000000000000128 .L0 
     /tmp/ccplJ8fq.s:224    .text:000000000000012c .L0 
     /tmp/ccplJ8fq.s:225    .text:000000000000012c .L0 
     /tmp/ccplJ8fq.s:235    .text:0000000000000130 .L0 
     /tmp/ccplJ8fq.s:237    .text:0000000000000134 .L0 
     /tmp/ccplJ8fq.s:238    .text:0000000000000134 .L0 
     /tmp/ccplJ8fq.s:240    .text:0000000000000138 .L0 
     /tmp/ccplJ8fq.s:241    .text:0000000000000138 .L0 
     /tmp/ccplJ8fq.s:243    .text:000000000000013c .L0 
     /tmp/ccplJ8fq.s:245    .text:0000000000000140 .L0 
     /tmp/ccplJ8fq.s:246    .text:0000000000000140 .L0 
     /tmp/ccplJ8fq.s:251    .text:0000000000000144 .L0 
GAS LISTING /tmp/ccplJ8fq.s 			page 22


     /tmp/ccplJ8fq.s:252    .text:0000000000000144 .L0 
     /tmp/ccplJ8fq.s:254    .text:0000000000000144 .L0 
     /tmp/ccplJ8fq.s:255    .text:0000000000000144 .L0 
     /tmp/ccplJ8fq.s:260    .text:0000000000000150 .L0 
     /tmp/ccplJ8fq.s:263    .text:0000000000000154 .L0 
     /tmp/ccplJ8fq.s:264    .text:0000000000000154 .L0 
     /tmp/ccplJ8fq.s:268    .text:0000000000000164 .L0 
     /tmp/ccplJ8fq.s:270    .text:0000000000000168 .L0 
     /tmp/ccplJ8fq.s:271    .text:0000000000000168 .L0 
     /tmp/ccplJ8fq.s:274    .text:0000000000000170 .L0 
     /tmp/ccplJ8fq.s:276    .text:0000000000000174 .L0 
     /tmp/ccplJ8fq.s:277    .text:0000000000000174 .L0 
     /tmp/ccplJ8fq.s:279    .text:0000000000000178 .L0 
     /tmp/ccplJ8fq.s:284    .text:0000000000000184 .L0 
     /tmp/ccplJ8fq.s:285    .text:0000000000000184 .L0 
     /tmp/ccplJ8fq.s:289    .text:0000000000000190 .L0 
     /tmp/ccplJ8fq.s:292    .text:0000000000000198 .L0 
     /tmp/ccplJ8fq.s:294    .text:000000000000019c .L0 
     /tmp/ccplJ8fq.s:295    .text:000000000000019c .L0 
     /tmp/ccplJ8fq.s:298    .text:00000000000001a0 .L0 
     /tmp/ccplJ8fq.s:299    .text:00000000000001a0 .L0 
     /tmp/ccplJ8fq.s:301    .text:00000000000001a4 .L0 
     /tmp/ccplJ8fq.s:303    .text:00000000000001a8 .L0 
     /tmp/ccplJ8fq.s:304    .text:00000000000001a8 .L0 
     /tmp/ccplJ8fq.s:306    .text:00000000000001ac .L0 
     /tmp/ccplJ8fq.s:308    .text:00000000000001b0 .L0 
     /tmp/ccplJ8fq.s:309    .text:00000000000001b0 .L0 
     /tmp/ccplJ8fq.s:324    .text:00000000000001b4 .L0 
     /tmp/ccplJ8fq.s:325    .text:00000000000001b4 .L0 
     /tmp/ccplJ8fq.s:327    .text:00000000000001b8 .L0 
     /tmp/ccplJ8fq.s:342    .text:00000000000001c8 .L0 
     /tmp/ccplJ8fq.s:350    .text:00000000000001d0 .L0 
     /tmp/ccplJ8fq.s:351    .text:00000000000001d0 .L0 
     /tmp/ccplJ8fq.s:357    .text:00000000000001e0 .L0 
     /tmp/ccplJ8fq.s:358    .text:00000000000001e0 .L0 
     /tmp/ccplJ8fq.s:363    .text:00000000000001ec .L0 
     /tmp/ccplJ8fq.s:364    .text:00000000000001ec .L0 
     /tmp/ccplJ8fq.s:366    .text:00000000000001f0 .L0 
     /tmp/ccplJ8fq.s:367    .text:00000000000001f0 .L0 
     /tmp/ccplJ8fq.s:369    .text:00000000000001f4 .L0 
     /tmp/ccplJ8fq.s:370    .text:00000000000001f4 .L0 
     /tmp/ccplJ8fq.s:372    .text:00000000000001f8 .L0 
     /tmp/ccplJ8fq.s:374    .text:00000000000001fc .L0 
     /tmp/ccplJ8fq.s:375    .text:00000000000001fc .L0 
     /tmp/ccplJ8fq.s:378    .text:0000000000000200 .L0 
     /tmp/ccplJ8fq.s:379    .text:0000000000000200 .L0 
     /tmp/ccplJ8fq.s:381    .text:0000000000000204 .L0 
     /tmp/ccplJ8fq.s:383    .text:0000000000000208 .L0 
     /tmp/ccplJ8fq.s:384    .text:0000000000000208 .L0 
     /tmp/ccplJ8fq.s:387    .text:000000000000020c .L0 
     /tmp/ccplJ8fq.s:388    .text:000000000000020c .L0 
     /tmp/ccplJ8fq.s:390    .text:0000000000000210 .L0 
     /tmp/ccplJ8fq.s:392    .text:0000000000000214 .L0 
     /tmp/ccplJ8fq.s:393    .text:0000000000000214 .L0 
     /tmp/ccplJ8fq.s:395    .text:0000000000000218 .L0 
     /tmp/ccplJ8fq.s:397    .text:000000000000021c .L0 
     /tmp/ccplJ8fq.s:398    .text:000000000000021c .L0 
GAS LISTING /tmp/ccplJ8fq.s 			page 23


     /tmp/ccplJ8fq.s:401    .text:0000000000000220 .L0 
     /tmp/ccplJ8fq.s:405    .text:000000000000022c .L0 
     /tmp/ccplJ8fq.s:407    .text:0000000000000230 .L0 
     /tmp/ccplJ8fq.s:408    .text:0000000000000230 .L0 
     /tmp/ccplJ8fq.s:410    .text:0000000000000234 .L0 
     /tmp/ccplJ8fq.s:413    .text:0000000000000240 .L0 
     /tmp/ccplJ8fq.s:414    .text:0000000000000240 .L0 
     /tmp/ccplJ8fq.s:416    .text:0000000000000244 .L0 
     /tmp/ccplJ8fq.s:418    .text:0000000000000248 .L0 
     /tmp/ccplJ8fq.s:419    .text:0000000000000248 .L0 
     /tmp/ccplJ8fq.s:421    .text:000000000000024c .L0 
     /tmp/ccplJ8fq.s:422    .text:000000000000024c .L0 
     /tmp/ccplJ8fq.s:424    .text:0000000000000250 .L0 
     /tmp/ccplJ8fq.s:425    .text:0000000000000250 .L0 
     /tmp/ccplJ8fq.s:431    .text:0000000000000258 .L0 
     /tmp/ccplJ8fq.s:432    .text:0000000000000258 .L0 
     /tmp/ccplJ8fq.s:434    .text:000000000000025c .L0 
     /tmp/ccplJ8fq.s:446    .text:000000000000026c .L0 
     /tmp/ccplJ8fq.s:450    .text:0000000000000270 .L0 
     /tmp/ccplJ8fq.s:452    .text:0000000000000274 .L0 
     /tmp/ccplJ8fq.s:454    .text:0000000000000278 .L0 
     /tmp/ccplJ8fq.s:455    .text:0000000000000278 .L0 
     /tmp/ccplJ8fq.s:581    .text:000000000000032c _ZN3TCB13threadWrapperEv
     /tmp/ccplJ8fq.s:457    .text:000000000000027c .L0 
     /tmp/ccplJ8fq.s:460    .text:0000000000000284 .L0 
     /tmp/ccplJ8fq.s:462    .text:0000000000000288 .L0 
     /tmp/ccplJ8fq.s:464    .text:000000000000028c .L0 
     /tmp/ccplJ8fq.s:465    .text:000000000000028c .L0 
     /tmp/ccplJ8fq.s:467    .text:0000000000000290 .L0 
     /tmp/ccplJ8fq.s:469    .text:0000000000000294 .L0 
     /tmp/ccplJ8fq.s:471    .text:0000000000000298 .L0 
     /tmp/ccplJ8fq.s:475    .text:00000000000002a0 .L0 
     /tmp/ccplJ8fq.s:477    .text:00000000000002a4 .L0 
     /tmp/ccplJ8fq.s:478    .text:00000000000002a4 .L0 
     /tmp/ccplJ8fq.s:480    .text:00000000000002a8 .L0 
     /tmp/ccplJ8fq.s:482    .text:00000000000002ac .L0 
     /tmp/ccplJ8fq.s:483    .text:00000000000002ac .L0 
     /tmp/ccplJ8fq.s:485    .text:00000000000002b0 .L0 
     /tmp/ccplJ8fq.s:487    .text:00000000000002b4 .L0 
     /tmp/ccplJ8fq.s:488    .text:00000000000002b4 .L0 
     /tmp/ccplJ8fq.s:490    .text:00000000000002b8 .L0 
     /tmp/ccplJ8fq.s:493    .text:00000000000002c0 .L0 
     /tmp/ccplJ8fq.s:495    .text:00000000000002c4 .L0 
     /tmp/ccplJ8fq.s:496    .text:00000000000002c4 .L0 
     /tmp/ccplJ8fq.s:502    .text:00000000000002d0 .L0 
     /tmp/ccplJ8fq.s:503    .text:00000000000002d0 .L0 
     /tmp/ccplJ8fq.s:505    .text:00000000000002d4 .L0 
     /tmp/ccplJ8fq.s:507    .text:00000000000002d8 .L0 
     /tmp/ccplJ8fq.s:510    .text:00000000000002dc .L0 
     /tmp/ccplJ8fq.s:511    .text:00000000000002e0 .L0 
     /tmp/ccplJ8fq.s:512    .text:00000000000002e0 .L0 
     /tmp/ccplJ8fq.s:514    .text:00000000000002e4 .L0 
     /tmp/ccplJ8fq.s:515    .text:00000000000002e4 .L0 
     /tmp/ccplJ8fq.s:517    .text:00000000000002e8 .L0 
     /tmp/ccplJ8fq.s:520    .text:00000000000002ec .L0 
     /tmp/ccplJ8fq.s:524    .text:00000000000002f0 .L0 
     /tmp/ccplJ8fq.s:526    .text:00000000000002f0 .L0 
GAS LISTING /tmp/ccplJ8fq.s 			page 24


     /tmp/ccplJ8fq.s:530    .text:00000000000002f8 .L0 
     /tmp/ccplJ8fq.s:535    .text:0000000000000300 .L0 
     /tmp/ccplJ8fq.s:537    .text:0000000000000308 .L0 
     /tmp/ccplJ8fq.s:543    .text:0000000000000308 _ZN3TCB5yieldEv
     /tmp/ccplJ8fq.s:546    .text:0000000000000308 .L0 
     /tmp/ccplJ8fq.s:547    .text:0000000000000308 .L0 
     /tmp/ccplJ8fq.s:548    .text:000000000000030c .L0 
     /tmp/ccplJ8fq.s:550    .text:0000000000000310 .L0 
     /tmp/ccplJ8fq.s:552    .text:0000000000000314 .L0 
     /tmp/ccplJ8fq.s:555    .text:0000000000000314 .L0 
     /tmp/ccplJ8fq.s:556    .text:0000000000000314 .L0 
     /tmp/ccplJ8fq.s:557    .text:0000000000000314 .L0 
     /tmp/ccplJ8fq.s:563    .text:000000000000031c .L0 
         src/tcb.cpp:41     .text:000000000000031c .L0 
     /tmp/ccplJ8fq.s:569    .text:0000000000000320 .L0 
     /tmp/ccplJ8fq.s:570    .text:0000000000000324 .L0 
     /tmp/ccplJ8fq.s:571    .text:0000000000000324 .L0 
     /tmp/ccplJ8fq.s:573    .text:0000000000000328 .L0 
     /tmp/ccplJ8fq.s:575    .text:000000000000032c .L0 
     /tmp/ccplJ8fq.s:584    .text:000000000000032c .L0 
     /tmp/ccplJ8fq.s:585    .text:000000000000032c .L0 
     /tmp/ccplJ8fq.s:586    .text:0000000000000330 .L0 
     /tmp/ccplJ8fq.s:590    .text:000000000000033c .L0 
     /tmp/ccplJ8fq.s:591    .text:000000000000033c .L0 
     /tmp/ccplJ8fq.s:592    .text:000000000000033c .L0 
     /tmp/ccplJ8fq.s:594    .text:0000000000000340 .L0 
     /tmp/ccplJ8fq.s:596    .text:0000000000000340 .L0 
         src/tcb.cpp:57     .text:0000000000000340 .L0 
     /tmp/ccplJ8fq.s:602    .text:0000000000000344 .L0 
     /tmp/ccplJ8fq.s:604    .text:0000000000000344 .L0 
     /tmp/ccplJ8fq.s:608    .text:0000000000000354 .L0 
     /tmp/ccplJ8fq.s:612    .text:000000000000035c .L0 
     /tmp/ccplJ8fq.s:613    .text:000000000000035c .L0 
     /tmp/ccplJ8fq.s:618    .text:000000000000036c .L0 
     /tmp/ccplJ8fq.s:619    .text:000000000000036c .L0 
     /tmp/ccplJ8fq.s:622    .text:0000000000000374 .L0 
     /tmp/ccplJ8fq.s:623    .text:0000000000000378 .L0 
     /tmp/ccplJ8fq.s:625    .text:000000000000037c .L0 
     /tmp/ccplJ8fq.s:626    .text:000000000000037c .L0 
     /tmp/ccplJ8fq.s:628    .text:0000000000000380 .L0 
     /tmp/ccplJ8fq.s:630    .text:0000000000000384 .L0 
     /tmp/ccplJ8fq.s:632    .text:0000000000000388 .L0 
     /tmp/ccplJ8fq.s:638    .text:0000000000000388 _ZN3TCB8dispatchEv
     /tmp/ccplJ8fq.s:641    .text:0000000000000388 .L0 
     /tmp/ccplJ8fq.s:642    .text:0000000000000388 .L0 
     /tmp/ccplJ8fq.s:643    .text:000000000000038c .L0 
     /tmp/ccplJ8fq.s:647    .text:0000000000000398 .L0 
     /tmp/ccplJ8fq.s:648    .text:0000000000000398 .L0 
     /tmp/ccplJ8fq.s:649    .text:0000000000000398 .L0 
     /tmp/ccplJ8fq.s:651    .text:000000000000039c .L0 
     /tmp/ccplJ8fq.s:653    .text:000000000000039c .L0 
     /tmp/ccplJ8fq.s:654    .text:000000000000039c .L0 
     /tmp/ccplJ8fq.s:657    .text:00000000000003a4 .L0 
     /tmp/ccplJ8fq.s:658    .text:00000000000003a4 .L0 
     /tmp/ccplJ8fq.s:660    .text:00000000000003a8 .L0 
     /tmp/ccplJ8fq.s:663    .text:00000000000003ac .L0 
     /tmp/ccplJ8fq.s:664    .text:00000000000003ac .L0 
GAS LISTING /tmp/ccplJ8fq.s 			page 25


     /tmp/ccplJ8fq.s:667    .text:00000000000003b4 .L0 
     /tmp/ccplJ8fq.s:669    .text:00000000000003bc .L0 
     /tmp/ccplJ8fq.s:670    .text:00000000000003bc .L0 
     /tmp/ccplJ8fq.s:675    .text:00000000000003cc .L0 
     /tmp/ccplJ8fq.s:676    .text:00000000000003d0 .L0 
     /tmp/ccplJ8fq.s:677    .text:00000000000003d0 .L0 
     /tmp/ccplJ8fq.s:679    .text:00000000000003d4 .L0 
     /tmp/ccplJ8fq.s:680    .text:00000000000003d4 .L0 
     /tmp/ccplJ8fq.s:682    .text:00000000000003d8 .L0 
     /tmp/ccplJ8fq.s:685    .text:00000000000003dc .L0 
     /tmp/ccplJ8fq.s:689    .text:00000000000003e0 .L0 
     /tmp/ccplJ8fq.s:691    .text:00000000000003e0 .L0 
     /tmp/ccplJ8fq.s:695    .text:00000000000003ec .L0 
     /tmp/ccplJ8fq.s:697    .text:00000000000003f0 .L0 
     /tmp/ccplJ8fq.s:698    .text:00000000000003f0 .L0 
     /tmp/ccplJ8fq.s:702    .text:0000000000000400 .L0 
     /tmp/ccplJ8fq.s:716    .bss:0000000000000008 _ZN3TCB16timeSliceCounterE
     /tmp/ccplJ8fq.s:712    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccplJ8fq.s:709    .bss:0000000000000000 .LANCHOR0
     /tmp/ccplJ8fq.s:724    .text:0000000000000400 .L0 
     /tmp/ccplJ8fq.s:90     .text:0000000000000050 .L0 
     /tmp/ccplJ8fq.s:99     .text:0000000000000060 .L0 
     /tmp/ccplJ8fq.s:155    .text:00000000000000bc .L0 
     /tmp/ccplJ8fq.s:210    .text:0000000000000110 .L0 
     /tmp/ccplJ8fq.s:255    .text:0000000000000144 .L0 
     /tmp/ccplJ8fq.s:264    .text:0000000000000154 .L0 
     /tmp/ccplJ8fq.s:327    .text:00000000000001b8 .L0 
     /tmp/ccplJ8fq.s:351    .text:00000000000001d0 .L0 
     /tmp/ccplJ8fq.s:410    .text:0000000000000234 .L0 
     /tmp/ccplJ8fq.s:434    .text:000000000000025c .L0 
     /tmp/ccplJ8fq.s:457    .text:000000000000027c .L0 
     /tmp/ccplJ8fq.s:604    .text:0000000000000344 .L0 
     /tmp/ccplJ8fq.s:654    .text:000000000000039c .L0 
     /tmp/ccplJ8fq.s:667    .text:00000000000003b4 .L0 
     /tmp/ccplJ8fq.s:227    .text:0000000000000130 .L6
     /tmp/ccplJ8fq.s:142    .text:00000000000000b4 .L29
     /tmp/ccplJ8fq.s:158    .text:00000000000000cc .L8
     /tmp/ccplJ8fq.s:150    .text:00000000000000bc .L9
     /tmp/ccplJ8fq.s:93     .text:000000000000005c .L7
     /tmp/ccplJ8fq.s:128    .text:00000000000000a0 .L10
     /tmp/ccplJ8fq.s:311    .text:00000000000001b4 .L12
     /tmp/ccplJ8fq.s:187    .text:00000000000000f0 .L14
     /tmp/ccplJ8fq.s:438    .text:000000000000026c .L30
     /tmp/ccplJ8fq.s:448    .text:0000000000000270 .L15
     /tmp/ccplJ8fq.s:331    .text:00000000000001c8 .L31
     /tmp/ccplJ8fq.s:354    .text:00000000000001e0 .L18
     /tmp/ccplJ8fq.s:346    .text:00000000000001d0 .L19
     /tmp/ccplJ8fq.s:178    .text:00000000000000e4 .L13
     /tmp/ccplJ8fq.s:258    .text:0000000000000150 .L17
     /tmp/ccplJ8fq.s:296    .text:00000000000001a0 .L20
     /tmp/ccplJ8fq.s:429    .text:0000000000000258 .L22
     /tmp/ccplJ8fq.s:385    .text:000000000000020c .L24
     /tmp/ccplJ8fq.s:376    .text:0000000000000200 .L23
     /tmp/ccplJ8fq.s:523    .text:00000000000002f0 .L32
     /tmp/ccplJ8fq.s:528    .text:00000000000002f8 .L33
     /tmp/ccplJ8fq.s:500    .text:00000000000002d0 .L27
     /tmp/ccplJ8fq.s:533    .text:0000000000000300 .L36
GAS LISTING /tmp/ccplJ8fq.s 			page 26


     /tmp/ccplJ8fq.s:458    .text:0000000000000284 .L25
     /tmp/ccplJ8fq.s:473    .text:00000000000002a0 .L26
     /tmp/ccplJ8fq.s:508    .text:00000000000002dc .L28
     /tmp/ccplJ8fq.s:688    .text:00000000000003e0 .L44
     /tmp/ccplJ8fq.s:661    .text:00000000000003ac .L42
     /tmp/ccplJ8fq.s:1777   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccplJ8fq.s:3187   .debug_str:0000000000000615 .LASF106
     /tmp/ccplJ8fq.s:3065   .debug_str:000000000000022c .LASF107
     /tmp/ccplJ8fq.s:3053   .debug_str:00000000000001c9 .LASF108
     /tmp/ccplJ8fq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccplJ8fq.s:719    .text:0000000000000400 .Letext0
     /tmp/ccplJ8fq.s:2987   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccplJ8fq.s:3067   .debug_str:0000000000000238 .LASF0
     /tmp/ccplJ8fq.s:3085   .debug_str:00000000000002c3 .LASF1
     /tmp/ccplJ8fq.s:3147   .debug_str:00000000000004f3 .LASF2
     /tmp/ccplJ8fq.s:3153   .debug_str:0000000000000528 .LASF4
     /tmp/ccplJ8fq.s:3071   .debug_str:000000000000024f .LASF3
     /tmp/ccplJ8fq.s:2999   .debug_str:0000000000000051 .LASF5
     /tmp/ccplJ8fq.s:3131   .debug_str:0000000000000460 .LASF6
     /tmp/ccplJ8fq.s:3075   .debug_str:000000000000026a .LASF7
     /tmp/ccplJ8fq.s:3051   .debug_str:00000000000001b9 .LASF8
     /tmp/ccplJ8fq.s:3057   .debug_str:00000000000001f3 .LASF9
     /tmp/ccplJ8fq.s:3017   .debug_str:00000000000000cd .LASF10
     /tmp/ccplJ8fq.s:3043   .debug_str:000000000000018f .LASF11
     /tmp/ccplJ8fq.s:3027   .debug_str:0000000000000105 .LASF12
     /tmp/ccplJ8fq.s:3015   .debug_str:00000000000000bd .LASF13
     /tmp/ccplJ8fq.s:3171   .debug_str:00000000000005a8 .LASF14
     /tmp/ccplJ8fq.s:3039   .debug_str:0000000000000162 .LASF15
     /tmp/ccplJ8fq.s:3167   .debug_str:0000000000000585 .LASF16
     /tmp/ccplJ8fq.s:3093   .debug_str:0000000000000302 .LASF23
     /tmp/ccplJ8fq.s:3183   .debug_str:0000000000000605 .LASF41
     /tmp/ccplJ8fq.s:3019   .debug_str:00000000000000dc .LASF17
     /tmp/ccplJ8fq.s:3001   .debug_str:0000000000000058 .LASF18
     /tmp/ccplJ8fq.s:3083   .debug_str:00000000000002be .LASF19
     /tmp/ccplJ8fq.s:3163   .debug_str:0000000000000568 .LASF20
     /tmp/ccplJ8fq.s:3025   .debug_str:00000000000000fc .LASF21
     /tmp/ccplJ8fq.s:3079   .debug_str:00000000000002ab .LASF22
     /tmp/ccplJ8fq.s:3105   .debug_str:0000000000000363 .LASF24
     /tmp/ccplJ8fq.s:3149   .debug_str:0000000000000501 .LASF25
     /tmp/ccplJ8fq.s:3151   .debug_str:000000000000051e .LASF26
     /tmp/ccplJ8fq.s:3109   .debug_str:0000000000000394 .LASF27
     /tmp/ccplJ8fq.s:3205   .debug_str:0000000000000775 .LASF40
     /tmp/ccplJ8fq.s:3101   .debug_str:0000000000000334 .LASF56
     /tmp/ccplJ8fq.s:3215   .debug_str:00000000000007c8 .LASF58
     /tmp/ccplJ8fq.s:3181   .debug_str:00000000000005e5 .LASF60
     /tmp/ccplJ8fq.s:3099   .debug_str:000000000000032c .LASF28
     /tmp/ccplJ8fq.s:3117   .debug_str:00000000000003f4 .LASF30
     /tmp/ccplJ8fq.s:3081   .debug_str:00000000000002b0 .LASF29
     /tmp/ccplJ8fq.s:3123   .debug_str:0000000000000422 .LASF31
     /tmp/ccplJ8fq.s:3069   .debug_str:0000000000000245 .LASF32
     /tmp/ccplJ8fq.s:3077   .debug_str:000000000000027d .LASF33
     /tmp/ccplJ8fq.s:3175   .debug_str:00000000000005bd .LASF34
     /tmp/ccplJ8fq.s:3211   .debug_str:00000000000007a0 .LASF35
     /tmp/ccplJ8fq.s:3103   .debug_str:0000000000000359 .LASF36
     /tmp/ccplJ8fq.s:3197   .debug_str:0000000000000717 .LASF37
     /tmp/ccplJ8fq.s:3049   .debug_str:00000000000001af .LASF38
     /tmp/ccplJ8fq.s:3179   .debug_str:00000000000005d1 .LASF39
GAS LISTING /tmp/ccplJ8fq.s 			page 27


     /tmp/ccplJ8fq.s:3209   .debug_str:000000000000078c .LASF109
     /tmp/ccplJ8fq.s:3063   .debug_str:0000000000000214 .LASF110
     /tmp/ccplJ8fq.s:3115   .debug_str:00000000000003e4 .LASF111
     /tmp/ccplJ8fq.s:3021   .debug_str:00000000000000e1 .LASF42
     /tmp/ccplJ8fq.s:3217   .debug_str:00000000000007d0 .LASF43
     /tmp/ccplJ8fq.s:3055   .debug_str:00000000000001e7 .LASF44
     /tmp/ccplJ8fq.s:3011   .debug_str:0000000000000092 .LASF45
     /tmp/ccplJ8fq.s:3047   .debug_str:00000000000001a3 .LASF46
     /tmp/ccplJ8fq.s:2991   .debug_str:0000000000000005 .LASF47
     /tmp/ccplJ8fq.s:3095   .debug_str:0000000000000313 .LASF48
     /tmp/ccplJ8fq.s:3165   .debug_str:0000000000000572 .LASF49
     /tmp/ccplJ8fq.s:3059   .debug_str:0000000000000201 .LASF50
     /tmp/ccplJ8fq.s:3155   .debug_str:000000000000052f .LASF51
     /tmp/ccplJ8fq.s:2997   .debug_str:0000000000000045 .LASF52
     /tmp/ccplJ8fq.s:3169   .debug_str:000000000000059b .LASF53
     /tmp/ccplJ8fq.s:3141   .debug_str:00000000000004c0 .LASF54
     /tmp/ccplJ8fq.s:3125   .debug_str:0000000000000449 .LASF112
     /tmp/ccplJ8fq.s:3139   .debug_str:00000000000004b0 .LASF64
     /tmp/ccplJ8fq.s:3159   .debug_str:0000000000000545 .LASF66
     /tmp/ccplJ8fq.s:3097   .debug_str:0000000000000320 .LASF55
     /tmp/ccplJ8fq.s:3041   .debug_str:0000000000000178 .LASF57
     /tmp/ccplJ8fq.s:3177   .debug_str:00000000000005c6 .LASF59
     /tmp/ccplJ8fq.s:3107   .debug_str:000000000000037d .LASF61
     /tmp/ccplJ8fq.s:3005   .debug_str:000000000000006e .LASF62
     /tmp/ccplJ8fq.s:3199   .debug_str:0000000000000739 .LASF63
     /tmp/ccplJ8fq.s:3087   .debug_str:00000000000002d6 .LASF65
     /tmp/ccplJ8fq.s:3189   .debug_str:00000000000006d9 .LASF67
     /tmp/ccplJ8fq.s:3089   .debug_str:00000000000002dc .LASF68
     /tmp/ccplJ8fq.s:3135   .debug_str:000000000000047e .LASF69
     /tmp/ccplJ8fq.s:3185   .debug_str:000000000000060d .LASF113
     /tmp/ccplJ8fq.s:2989   .debug_str:0000000000000000 .LASF70
     /tmp/ccplJ8fq.s:3213   .debug_str:00000000000007c2 .LASF71
     /tmp/ccplJ8fq.s:3195   .debug_str:000000000000070f .LASF72
     /tmp/ccplJ8fq.s:3173   .debug_str:00000000000005b4 .LASF73
     /tmp/ccplJ8fq.s:3129   .debug_str:0000000000000456 .LASF74
     /tmp/ccplJ8fq.s:3133   .debug_str:0000000000000473 .LASF75
     /tmp/ccplJ8fq.s:3191   .debug_str:00000000000006e9 .LASF76
     /tmp/ccplJ8fq.s:3009   .debug_str:0000000000000084 .LASF78
     /tmp/ccplJ8fq.s:3091   .debug_str:00000000000002e9 .LASF80
     /tmp/ccplJ8fq.s:3029   .debug_str:0000000000000115 .LASF77
     /tmp/ccplJ8fq.s:2995   .debug_str:000000000000001d .LASF114
     /tmp/ccplJ8fq.s:3035   .debug_str:0000000000000143 .LASF79
     /tmp/ccplJ8fq.s:3023   .debug_str:00000000000000e9 .LASF81
     /tmp/ccplJ8fq.s:3157   .debug_str:0000000000000534 .LASF82
     /tmp/ccplJ8fq.s:3207   .debug_str:0000000000000781 .LASF115
     /tmp/ccplJ8fq.s:3143   .debug_str:00000000000004e4 .LASF83
     /tmp/ccplJ8fq.s:3145   .debug_str:00000000000004e9 .LASF84
     /tmp/ccplJ8fq.s:3061   .debug_str:000000000000020e .LASF85
     /tmp/ccplJ8fq.s:3113   .debug_str:00000000000003cd .LASF86
     /tmp/ccplJ8fq.s:3033   .debug_str:000000000000013b .LASF87
     /tmp/ccplJ8fq.s:3111   .debug_str:00000000000003b1 .LASF88
     /tmp/ccplJ8fq.s:3073   .debug_str:0000000000000261 .LASF89
     /tmp/ccplJ8fq.s:3013   .debug_str:00000000000000a2 .LASF90
     /tmp/ccplJ8fq.s:3127   .debug_str:000000000000044e .LASF91
     /tmp/ccplJ8fq.s:3137   .debug_str:0000000000000496 .LASF92
     /tmp/ccplJ8fq.s:3007   .debug_str:000000000000007a .LASF93
     /tmp/ccplJ8fq.s:3193   .debug_str:00000000000006f3 .LASF94
GAS LISTING /tmp/ccplJ8fq.s 			page 28


     /tmp/ccplJ8fq.s:3121   .debug_str:000000000000041c .LASF95
     /tmp/ccplJ8fq.s:3037   .debug_str:000000000000014c .LASF96
     /tmp/ccplJ8fq.s:2993   .debug_str:0000000000000015 .LASF97
     /tmp/ccplJ8fq.s:3031   .debug_str:0000000000000123 .LASF98
     /tmp/ccplJ8fq.s:3119   .debug_str:0000000000000414 .LASF99
     /tmp/ccplJ8fq.s:3003   .debug_str:000000000000005d .LASF100
     /tmp/ccplJ8fq.s:3201   .debug_str:0000000000000750 .LASF101
     /tmp/ccplJ8fq.s:582    .text:000000000000032c .LFB51
     /tmp/ccplJ8fq.s:633    .text:0000000000000388 .LFE51
     /tmp/ccplJ8fq.s:616    .text:000000000000036c .LVL30
     /tmp/ccplJ8fq.s:620    .text:0000000000000374 .LVL31
     /tmp/ccplJ8fq.s:639    .text:0000000000000388 .LFB50
     /tmp/ccplJ8fq.s:703    .text:0000000000000400 .LFE50
     /tmp/ccplJ8fq.s:2730   .debug_loc:0000000000000000 .LLST10
     /tmp/ccplJ8fq.s:665    .text:00000000000003b4 .LVL33
     /tmp/ccplJ8fq.s:673    .text:00000000000003cc .LVL34
     /tmp/ccplJ8fq.s:693    .text:00000000000003ec .LVL37
     /tmp/ccplJ8fq.s:700    .text:00000000000003fc .LVL38
     /tmp/ccplJ8fq.s:544    .text:0000000000000308 .LFB49
     /tmp/ccplJ8fq.s:576    .text:000000000000032c .LFE49
     /tmp/ccplJ8fq.s:3203   .debug_str:000000000000076b .LASF102
     /tmp/ccplJ8fq.s:65     .text:0000000000000038 .LFB48
     /tmp/ccplJ8fq.s:538    .text:0000000000000308 .LFE48
     /tmp/ccplJ8fq.s:2741   .debug_loc:0000000000000036 .LLST1
     /tmp/ccplJ8fq.s:3219   .debug_str:00000000000007dd .LASF103
     /tmp/ccplJ8fq.s:2766   .debug_loc:0000000000000098 .LLST2
     /tmp/ccplJ8fq.s:2788   .debug_loc:00000000000000f7 .LLST3
     /tmp/ccplJ8fq.s:84     .text:0000000000000050 .LBB18
     /tmp/ccplJ8fq.s:2955   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccplJ8fq.s:2824   .debug_loc:0000000000000182 .LLST4
     /tmp/ccplJ8fq.s:2839   .debug_loc:00000000000001bc .LLST5
     /tmp/ccplJ8fq.s:2860   .debug_loc:000000000000021b .LLST6
     /tmp/ccplJ8fq.s:249    .text:0000000000000144 .LBB31
     /tmp/ccplJ8fq.s:2871   .debug_loc:0000000000000251 .LLST7
     /tmp/ccplJ8fq.s:2892   .debug_loc:00000000000002a3 .LLST8
     /tmp/ccplJ8fq.s:355    .text:00000000000001e0 .LBB36
     /tmp/ccplJ8fq.s:439    .text:000000000000026c .LBE36
     /tmp/ccplJ8fq.s:2917   .debug_loc:0000000000000315 .LLST9
     /tmp/ccplJ8fq.s:499    .text:00000000000002d0 .LVL24
     /tmp/ccplJ8fq.s:38     .text:000000000000001c .LFB47
     /tmp/ccplJ8fq.s:59     .text:0000000000000038 .LFE47
     /tmp/ccplJ8fq.s:3045   .debug_str:000000000000019e .LASF104
     /tmp/ccplJ8fq.s:10     .text:0000000000000000 .LFB46
     /tmp/ccplJ8fq.s:32     .text:000000000000001c .LFE46
     /tmp/ccplJ8fq.s:2928   .debug_loc:000000000000034b .LLST0
     /tmp/ccplJ8fq.s:3161   .debug_str:0000000000000560 .LASF105
     /tmp/ccplJ8fq.s:655    .text:00000000000003a4 .LVL32
     /tmp/ccplJ8fq.s:683    .text:00000000000003d8 .LVL35
     /tmp/ccplJ8fq.s:687    .text:00000000000003e0 .LVL36
     /tmp/ccplJ8fq.s:68     .text:0000000000000038 .LVL3
     /tmp/ccplJ8fq.s:497    .text:00000000000002c8 .LVL23
     /tmp/ccplJ8fq.s:522    .text:00000000000002f0 .LVL26
     /tmp/ccplJ8fq.s:532    .text:0000000000000300 .LVL27
     /tmp/ccplJ8fq.s:92     .text:000000000000005c .LVL5
     /tmp/ccplJ8fq.s:518    .text:00000000000002e8 .LVL25
     /tmp/ccplJ8fq.s:257    .text:0000000000000150 .LVL12
     /tmp/ccplJ8fq.s:310    .text:00000000000001b4 .LVL13
GAS LISTING /tmp/ccplJ8fq.s 			page 29


     /tmp/ccplJ8fq.s:330    .text:00000000000001c8 .LVL14
     /tmp/ccplJ8fq.s:437    .text:000000000000026c .LVL21
     /tmp/ccplJ8fq.s:447    .text:0000000000000270 .LVL22
     /tmp/ccplJ8fq.s:81     .text:0000000000000050 .LVL4
     /tmp/ccplJ8fq.s:226    .text:0000000000000130 .LVL10
     /tmp/ccplJ8fq.s:147    .text:00000000000000b8 .LVL6
     /tmp/ccplJ8fq.s:149    .text:00000000000000bc .LVL7
     /tmp/ccplJ8fq.s:201    .text:0000000000000104 .LVL9
     /tmp/ccplJ8fq.s:163    .text:00000000000000d0 .LVL8
     /tmp/ccplJ8fq.s:247    .text:0000000000000144 .LVL11
     /tmp/ccplJ8fq.s:426    .text:0000000000000254 .LVL19
     /tmp/ccplJ8fq.s:428    .text:0000000000000258 .LVL20
     /tmp/ccplJ8fq.s:343    .text:00000000000001cc .LVL15
     /tmp/ccplJ8fq.s:345    .text:00000000000001d0 .LVL16
     /tmp/ccplJ8fq.s:399    .text:0000000000000220 .LVL18
     /tmp/ccplJ8fq.s:361    .text:00000000000001ec .LVL17
     /tmp/ccplJ8fq.s:14     .text:0000000000000000 .LVL0
     /tmp/ccplJ8fq.s:24     .text:0000000000000010 .LVL1
     /tmp/ccplJ8fq.s:725    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccplJ8fq.s:233    .text:0000000000000130 .LBE18
     /tmp/ccplJ8fq.s:317    .text:00000000000001b4 .LBB41
     /tmp/ccplJ8fq.s:337    .text:00000000000001c8 .LBE41
     /tmp/ccplJ8fq.s:88     .text:0000000000000050 .LBB20
     /tmp/ccplJ8fq.s:231    .text:0000000000000130 .LBE20
     /tmp/ccplJ8fq.s:319    .text:00000000000001b4 .LBB29
     /tmp/ccplJ8fq.s:335    .text:00000000000001c8 .LBE29
     /tmp/ccplJ8fq.s:159    .text:00000000000000cc .LBB23
     /tmp/ccplJ8fq.s:228    .text:0000000000000130 .LBE23
     /tmp/ccplJ8fq.s:322    .text:00000000000001b4 .LBB24
     /tmp/ccplJ8fq.s:332    .text:00000000000001c8 .LBE24
     /tmp/ccplJ8fq.s:316    .text:00000000000001b4 .LBE31
     /tmp/ccplJ8fq.s:338    .text:00000000000001c8 .LBB42
     /tmp/ccplJ8fq.s:444    .text:000000000000026c .LBE42
     /tmp/ccplJ8fq.s:253    .text:0000000000000144 .LBB33
     /tmp/ccplJ8fq.s:314    .text:00000000000001b4 .LBE33
     /tmp/ccplJ8fq.s:340    .text:00000000000001c8 .LBB39
     /tmp/ccplJ8fq.s:442    .text:000000000000026c .LBE39

UNDEFINED SYMBOLS
_ZN16MemoryAllocation9fmem_headE
_ZN9Scheduler3putEP3TCB
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
