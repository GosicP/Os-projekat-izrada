GAS LISTING /tmp/ccmmgjoT.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB45:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 8/18/22.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   6:src/syscall_c.cpp **** #include "../h/RiscV.hpp"
   7:src/syscall_c.cpp **** //#include "../h/MemoryAllocation.hpp"
   8:src/syscall_c.cpp **** 
   9:src/syscall_c.cpp **** 
  10:src/syscall_c.cpp **** 
  11:src/syscall_c.cpp **** void *mem_alloc(size_t  size) {
  12              		.loc 1 11 31
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  12:src/syscall_c.cpp ****     void* pointer = nullptr;
  21              		.loc 1 12 5
  22              	.LVL1:
  13:src/syscall_c.cpp ****     uint64 sysCallNr=0x01UL;
  23              		.loc 1 13 5
  14:src/syscall_c.cpp ****     //size=MemoryAllocation::bytesToBlocks(size);
  15:src/syscall_c.cpp ****     //mozda ovde mozes da koristis privremeni registar "scratch", da bi koristio sd
  16:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : [size] "r" (size)); //izgleda da ipak mora sd, jer ne prepozna
  24              		.loc 1 16 5
  25              		.loc 1 16 56 is_stmt 0
  26              	#APP
  27              	# 16 "src/syscall_c.cpp" 1
  17              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
  28              		mv a1, a0
  29              	# 0 "" 2
  30              		.loc 1 17 5 is_stmt 1
  31              		.loc 1 17 66 is_stmt 0
  32              	#NO_APP
  33 0010 93071000 		li	a5,1
  34              	#APP
  35              	# 17 "src/syscall_c.cpp" 1
  18              	     //ovo bi trebalo u mainu, ali kom mainu, gde ja uopste smem da deklarisem trap??????? izgleda 
  19:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  36              		mv a0, a5
  37              	# 0 "" 2
  38              		.loc 1 19 5 is_stmt 1
  39              		.loc 1 19 30 is_stmt 0
GAS LISTING /tmp/ccmmgjoT.s 			page 2


  40              	# 19 "src/syscall_c.cpp" 1
  20              	    __asm__ volatile("mv %[pointer], a1" : [pointer] "=r"(pointer));
  41              		ecall
  42              	# 0 "" 2
  43              		.loc 1 20 5 is_stmt 1
  44              		.loc 1 20 68 is_stmt 0
  45              	# 20 "src/syscall_c.cpp" 1
  21              	    return pointer;
  46              		mv a0, a1
  47              	# 0 "" 2
  48              	.LVL2:
  49              		.loc 1 21 5 is_stmt 1
  22:src/syscall_c.cpp **** }
  50              		.loc 1 22 1 is_stmt 0
  51              	#NO_APP
  52 0020 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0024 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 0028 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE45:
  61              		.align	2
  62              		.globl	_Z8mem_freePv
  64              	_Z8mem_freePv:
  65              	.LFB46:
  23:src/syscall_c.cpp **** 
  24:src/syscall_c.cpp **** int mem_free(void * ptr) {
  66              		.loc 1 24 26 is_stmt 1
  67              		.cfi_startproc
  68              	.LVL3:
  69 002c 130101FF 		addi	sp,sp,-16
  70              		.cfi_def_cfa_offset 16
  71 0030 23348100 		sd	s0,8(sp)
  72              		.cfi_offset 8, -8
  73 0034 13040101 		addi	s0,sp,16
  74              		.cfi_def_cfa 8, 0
  25:src/syscall_c.cpp ****     int ret=0;
  75              		.loc 1 25 5
  76              	.LVL4:
  26:src/syscall_c.cpp ****     uint64 sysCallNr=0x02UL;
  77              		.loc 1 26 5
  27:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : [ptr] "r" (ptr));
  78              		.loc 1 27 5
  79              		.loc 1 27 54 is_stmt 0
  80              	#APP
  81              	# 27 "src/syscall_c.cpp" 1
  28              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
  82              		mv a1, a0
  83              	# 0 "" 2
  84              		.loc 1 28 5 is_stmt 1
  85              		.loc 1 28 66 is_stmt 0
  86              	#NO_APP
  87 003c 93072000 		li	a5,2
  88              	#APP
  89              	# 28 "src/syscall_c.cpp" 1
GAS LISTING /tmp/ccmmgjoT.s 			page 3


  29              	    //RiscV::w_stvec((uint64) &Trap());
  30:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  90              		mv a0, a5
  91              	# 0 "" 2
  92              		.loc 1 30 5 is_stmt 1
  93              		.loc 1 30 30 is_stmt 0
  94              	# 30 "src/syscall_c.cpp" 1
  31              	    __asm__ volatile("mv %[ret], a1" : [ret] "=r"(ret)); //kaze undefined reference
  95              		ecall
  96              	# 0 "" 2
  97              		.loc 1 31 5 is_stmt 1
  98              		.loc 1 31 56 is_stmt 0
  99              	# 31 "src/syscall_c.cpp" 1
  32              	    return ret;
 100              		mv a0, a1
 101              	# 0 "" 2
 102              	.LVL5:
 103              		.loc 1 32 5 is_stmt 1
  33:src/syscall_c.cpp **** }
 104              		.loc 1 33 1 is_stmt 0
 105              	#NO_APP
 106 004c 1B050500 		sext.w	a0,a0
 107 0050 03348100 		ld	s0,8(sp)
 108              		.cfi_restore 8
 109              		.cfi_def_cfa 2, 16
 110 0054 13010101 		addi	sp,sp,16
 111              		.cfi_def_cfa_offset 0
 112 0058 67800000 		jr	ra
 113              		.cfi_endproc
 114              	.LFE46:
 116              		.align	2
 117              		.globl	_Z13thread_createPP3TCBPFvPvES2_
 119              	_Z13thread_createPP3TCBPFvPvES2_:
 120              	.LFB47:
  34:src/syscall_c.cpp **** 
  35:src/syscall_c.cpp **** int thread_create (
  36:src/syscall_c.cpp ****         thread_t* handle,
  37:src/syscall_c.cpp ****         void(*start_routine)(void*),
  38:src/syscall_c.cpp ****         void* arg
  39:src/syscall_c.cpp **** ){
 121              		.loc 1 39 2 is_stmt 1
 122              		.cfi_startproc
 123              	.LVL6:
 124 005c 130101FF 		addi	sp,sp,-16
 125              		.cfi_def_cfa_offset 16
 126 0060 23348100 		sd	s0,8(sp)
 127              		.cfi_offset 8, -8
 128 0064 13040101 		addi	s0,sp,16
 129              		.cfi_def_cfa 8, 0
  40:src/syscall_c.cpp ****     TCB* ret_value_thread;
 130              		.loc 1 40 5
  41:src/syscall_c.cpp ****     uint64 sysCallNr=0x11UL;
 131              		.loc 1 41 5
 132              	.LVL7:
  42:src/syscall_c.cpp ****     //neki stack_space alokacija se pominje????
  43:src/syscall_c.cpp ****     __asm__ volatile("mv a3, %0" : : [arg] "r" (arg));
 133              		.loc 1 43 5
GAS LISTING /tmp/ccmmgjoT.s 			page 4


 134              		.loc 1 43 54 is_stmt 0
 135              	#APP
 136              	# 43 "src/syscall_c.cpp" 1
  44              	    __asm__ volatile("mv a2, %0" : : [start_routine] "r" (start_routine));
 137              		mv a3, a2
 138              	# 0 "" 2
 139              		.loc 1 44 5 is_stmt 1
 140              		.loc 1 44 74 is_stmt 0
 141              	# 44 "src/syscall_c.cpp" 1
  45              	    __asm__ volatile("mv a1, %0" : : [handle] "r" (handle));
 142              		mv a2, a1
 143              	# 0 "" 2
 144              		.loc 1 45 5 is_stmt 1
 145              		.loc 1 45 60 is_stmt 0
 146              	# 45 "src/syscall_c.cpp" 1
  46              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 147              		mv a1, a0
 148              	# 0 "" 2
 149              		.loc 1 46 5 is_stmt 1
 150              		.loc 1 46 66 is_stmt 0
 151              	#NO_APP
 152 0074 93071001 		li	a5,17
 153              	#APP
 154              	# 46 "src/syscall_c.cpp" 1
  47              	    __asm__ volatile("ecall");
 155              		mv a0, a5
 156              	# 0 "" 2
 157              		.loc 1 47 5 is_stmt 1
 158              		.loc 1 47 30 is_stmt 0
 159              	# 47 "src/syscall_c.cpp" 1
  48              	    __asm__ volatile("mv %[ret_value_thread], a1" : [ret_value_thread] "=r"(ret_value_thread)); //k
 160              		ecall
 161              	# 0 "" 2
 162              		.loc 1 48 5 is_stmt 1
 163              		.loc 1 48 95 is_stmt 0
 164              	# 48 "src/syscall_c.cpp" 1
  49              	    return 0;//todo
 165              		mv a5, a1
 166              	# 0 "" 2
 167              	.LVL8:
 168              		.loc 1 49 5 is_stmt 1
  50:src/syscall_c.cpp ****     //moras da vidis sta ovde treba da se vrati
  51:src/syscall_c.cpp **** }
 169              		.loc 1 51 1 is_stmt 0
 170              	#NO_APP
 171 0084 13050000 		li	a0,0
 172              	.LVL9:
 173 0088 03348100 		ld	s0,8(sp)
 174              		.cfi_restore 8
 175              		.cfi_def_cfa 2, 16
 176 008c 13010101 		addi	sp,sp,16
 177              		.cfi_def_cfa_offset 0
 178 0090 67800000 		jr	ra
 179              		.cfi_endproc
 180              	.LFE47:
 182              		.align	2
 183              		.globl	_Z11thread_exitv
GAS LISTING /tmp/ccmmgjoT.s 			page 5


 185              	_Z11thread_exitv:
 186              	.LFB48:
  52:src/syscall_c.cpp **** 
  53:src/syscall_c.cpp **** int thread_exit (){
 187              		.loc 1 53 19 is_stmt 1
 188              		.cfi_startproc
 189 0094 130101FF 		addi	sp,sp,-16
 190              		.cfi_def_cfa_offset 16
 191 0098 23348100 		sd	s0,8(sp)
 192              		.cfi_offset 8, -8
 193 009c 13040101 		addi	s0,sp,16
 194              		.cfi_def_cfa 8, 0
  54:src/syscall_c.cpp ****     int ret=0;
 195              		.loc 1 54 5
 196              	.LVL10:
  55:src/syscall_c.cpp ****     uint64 sysCallNr=0x12UL;
 197              		.loc 1 55 5
  56:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 198              		.loc 1 56 5
 199              		.loc 1 56 66 is_stmt 0
 200 00a0 93072001 		li	a5,18
 201              	#APP
 202              	# 56 "src/syscall_c.cpp" 1
  57              	    __asm__ volatile("ecall");
 203              		mv a0, a5
 204              	# 0 "" 2
 205              		.loc 1 57 5 is_stmt 1
 206              		.loc 1 57 30 is_stmt 0
 207              	# 57 "src/syscall_c.cpp" 1
  58              	    //sta treba ovde da se vrati, verovatno da li je uspelo ili nije uspelo, PREBACI THREAD_EXIT U 
  59:src/syscall_c.cpp ****     __asm__ volatile("mv %[ret], a1" : [ret] "=r"(ret)); //kaze undefined reference
 208              		ecall
 209              	# 0 "" 2
 210              		.loc 1 59 5 is_stmt 1
 211              		.loc 1 59 56 is_stmt 0
 212              	# 59 "src/syscall_c.cpp" 1
  60              	    return ret;
 213              		mv a0, a1
 214              	# 0 "" 2
 215              	.LVL11:
 216              		.loc 1 60 5 is_stmt 1
  61:src/syscall_c.cpp **** }
 217              		.loc 1 61 1 is_stmt 0
 218              	#NO_APP
 219 00b0 1B050500 		sext.w	a0,a0
 220 00b4 03348100 		ld	s0,8(sp)
 221              		.cfi_restore 8
 222              		.cfi_def_cfa 2, 16
 223 00b8 13010101 		addi	sp,sp,16
 224              		.cfi_def_cfa_offset 0
 225 00bc 67800000 		jr	ra
 226              		.cfi_endproc
 227              	.LFE48:
 229              		.align	2
 230              		.globl	_Z15thread_dispatchv
 232              	_Z15thread_dispatchv:
 233              	.LFB49:
GAS LISTING /tmp/ccmmgjoT.s 			page 6


  62:src/syscall_c.cpp **** 
  63:src/syscall_c.cpp **** void thread_dispatch (){
 234              		.loc 1 63 24 is_stmt 1
 235              		.cfi_startproc
 236 00c0 130101FF 		addi	sp,sp,-16
 237              		.cfi_def_cfa_offset 16
 238 00c4 23348100 		sd	s0,8(sp)
 239              		.cfi_offset 8, -8
 240 00c8 13040101 		addi	s0,sp,16
 241              		.cfi_def_cfa 8, 0
  64:src/syscall_c.cpp ****     uint64 sysCallNr=0x13UL;
 242              		.loc 1 64 5
 243              	.LVL12:
  65:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 244              		.loc 1 65 5
 245              		.loc 1 65 66 is_stmt 0
 246 00cc 93073001 		li	a5,19
 247              	#APP
 248              	# 65 "src/syscall_c.cpp" 1
  66              	    __asm__ volatile("ecall");
 249              		mv a0, a5
 250              	# 0 "" 2
 251              		.loc 1 66 5 is_stmt 1
 252              		.loc 1 66 30 is_stmt 0
 253              	# 66 "src/syscall_c.cpp" 1
  67              	}
 254              		ecall
 255              	# 0 "" 2
 256              		.loc 1 67 1
 257              	#NO_APP
 258 00d8 03348100 		ld	s0,8(sp)
 259              		.cfi_restore 8
 260              		.cfi_def_cfa 2, 16
 261 00dc 13010101 		addi	sp,sp,16
 262              		.cfi_def_cfa_offset 0
 263 00e0 67800000 		jr	ra
 264              		.cfi_endproc
 265              	.LFE49:
 267              	.Letext0:
 268              		.file 2 "src/../h/../h/../lib/hw.h"
 269              		.file 3 "src/../h/../h/tcb.hpp"
 270              		.file 4 "src/../h/../h/../h/semaphore.hpp"
 271              		.file 5 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccmmgjoT.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccmmgjoT.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccmmgjoT.s:13     .text:0000000000000000 .L0 
     /tmp/ccmmgjoT.s:15     .text:0000000000000000 .L0 
     /tmp/ccmmgjoT.s:16     .text:0000000000000004 .L0 
     /tmp/ccmmgjoT.s:18     .text:0000000000000008 .L0 
     /tmp/ccmmgjoT.s:20     .text:000000000000000c .L0 
     /tmp/ccmmgjoT.s:23     .text:000000000000000c .L0 
     /tmp/ccmmgjoT.s:24     .text:000000000000000c .L0 
     /tmp/ccmmgjoT.s:25     .text:000000000000000c .L0 
   src/syscall_c.cpp:16     .text:000000000000000c .L0 
     /tmp/ccmmgjoT.s:31     .text:0000000000000010 .L0 
     /tmp/ccmmgjoT.s:33     .text:0000000000000010 .L0 
     /tmp/ccmmgjoT.s:39     .text:0000000000000018 .L0 
   src/syscall_c.cpp:19     .text:0000000000000018 .L0 
     /tmp/ccmmgjoT.s:44     .text:000000000000001c .L0 
   src/syscall_c.cpp:20     .text:000000000000001c .L0 
     /tmp/ccmmgjoT.s:50     .text:0000000000000020 .L0 
     /tmp/ccmmgjoT.s:52     .text:0000000000000020 .L0 
     /tmp/ccmmgjoT.s:53     .text:0000000000000024 .L0 
     /tmp/ccmmgjoT.s:54     .text:0000000000000024 .L0 
     /tmp/ccmmgjoT.s:56     .text:0000000000000028 .L0 
     /tmp/ccmmgjoT.s:58     .text:000000000000002c .L0 
     /tmp/ccmmgjoT.s:64     .text:000000000000002c _Z8mem_freePv
     /tmp/ccmmgjoT.s:67     .text:000000000000002c .L0 
     /tmp/ccmmgjoT.s:69     .text:000000000000002c .L0 
     /tmp/ccmmgjoT.s:70     .text:0000000000000030 .L0 
     /tmp/ccmmgjoT.s:72     .text:0000000000000034 .L0 
     /tmp/ccmmgjoT.s:74     .text:0000000000000038 .L0 
     /tmp/ccmmgjoT.s:77     .text:0000000000000038 .L0 
     /tmp/ccmmgjoT.s:78     .text:0000000000000038 .L0 
     /tmp/ccmmgjoT.s:79     .text:0000000000000038 .L0 
   src/syscall_c.cpp:27     .text:0000000000000038 .L0 
     /tmp/ccmmgjoT.s:85     .text:000000000000003c .L0 
     /tmp/ccmmgjoT.s:87     .text:000000000000003c .L0 
     /tmp/ccmmgjoT.s:93     .text:0000000000000044 .L0 
   src/syscall_c.cpp:30     .text:0000000000000044 .L0 
     /tmp/ccmmgjoT.s:98     .text:0000000000000048 .L0 
   src/syscall_c.cpp:31     .text:0000000000000048 .L0 
     /tmp/ccmmgjoT.s:104    .text:000000000000004c .L0 
     /tmp/ccmmgjoT.s:106    .text:000000000000004c .L0 
     /tmp/ccmmgjoT.s:108    .text:0000000000000054 .L0 
     /tmp/ccmmgjoT.s:109    .text:0000000000000054 .L0 
     /tmp/ccmmgjoT.s:111    .text:0000000000000058 .L0 
     /tmp/ccmmgjoT.s:113    .text:000000000000005c .L0 
     /tmp/ccmmgjoT.s:119    .text:000000000000005c _Z13thread_createPP3TCBPFvPvES2_
     /tmp/ccmmgjoT.s:122    .text:000000000000005c .L0 
     /tmp/ccmmgjoT.s:124    .text:000000000000005c .L0 
     /tmp/ccmmgjoT.s:125    .text:0000000000000060 .L0 
     /tmp/ccmmgjoT.s:127    .text:0000000000000064 .L0 
     /tmp/ccmmgjoT.s:129    .text:0000000000000068 .L0 
     /tmp/ccmmgjoT.s:131    .text:0000000000000068 .L0 
     /tmp/ccmmgjoT.s:133    .text:0000000000000068 .L0 
     /tmp/ccmmgjoT.s:134    .text:0000000000000068 .L0 
   src/syscall_c.cpp:43     .text:0000000000000068 .L0 
     /tmp/ccmmgjoT.s:140    .text:000000000000006c .L0 
GAS LISTING /tmp/ccmmgjoT.s 			page 8


   src/syscall_c.cpp:44     .text:000000000000006c .L0 
     /tmp/ccmmgjoT.s:145    .text:0000000000000070 .L0 
   src/syscall_c.cpp:45     .text:0000000000000070 .L0 
     /tmp/ccmmgjoT.s:150    .text:0000000000000074 .L0 
     /tmp/ccmmgjoT.s:152    .text:0000000000000074 .L0 
     /tmp/ccmmgjoT.s:158    .text:000000000000007c .L0 
   src/syscall_c.cpp:47     .text:000000000000007c .L0 
     /tmp/ccmmgjoT.s:163    .text:0000000000000080 .L0 
   src/syscall_c.cpp:48     .text:0000000000000080 .L0 
     /tmp/ccmmgjoT.s:169    .text:0000000000000084 .L0 
     /tmp/ccmmgjoT.s:171    .text:0000000000000084 .L0 
     /tmp/ccmmgjoT.s:174    .text:000000000000008c .L0 
     /tmp/ccmmgjoT.s:175    .text:000000000000008c .L0 
     /tmp/ccmmgjoT.s:177    .text:0000000000000090 .L0 
     /tmp/ccmmgjoT.s:179    .text:0000000000000094 .L0 
     /tmp/ccmmgjoT.s:185    .text:0000000000000094 _Z11thread_exitv
     /tmp/ccmmgjoT.s:188    .text:0000000000000094 .L0 
     /tmp/ccmmgjoT.s:189    .text:0000000000000094 .L0 
     /tmp/ccmmgjoT.s:190    .text:0000000000000098 .L0 
     /tmp/ccmmgjoT.s:192    .text:000000000000009c .L0 
     /tmp/ccmmgjoT.s:194    .text:00000000000000a0 .L0 
     /tmp/ccmmgjoT.s:197    .text:00000000000000a0 .L0 
     /tmp/ccmmgjoT.s:198    .text:00000000000000a0 .L0 
     /tmp/ccmmgjoT.s:199    .text:00000000000000a0 .L0 
     /tmp/ccmmgjoT.s:200    .text:00000000000000a0 .L0 
     /tmp/ccmmgjoT.s:206    .text:00000000000000a8 .L0 
   src/syscall_c.cpp:57     .text:00000000000000a8 .L0 
     /tmp/ccmmgjoT.s:211    .text:00000000000000ac .L0 
   src/syscall_c.cpp:59     .text:00000000000000ac .L0 
     /tmp/ccmmgjoT.s:217    .text:00000000000000b0 .L0 
     /tmp/ccmmgjoT.s:219    .text:00000000000000b0 .L0 
     /tmp/ccmmgjoT.s:221    .text:00000000000000b8 .L0 
     /tmp/ccmmgjoT.s:222    .text:00000000000000b8 .L0 
     /tmp/ccmmgjoT.s:224    .text:00000000000000bc .L0 
     /tmp/ccmmgjoT.s:226    .text:00000000000000c0 .L0 
     /tmp/ccmmgjoT.s:232    .text:00000000000000c0 _Z15thread_dispatchv
     /tmp/ccmmgjoT.s:235    .text:00000000000000c0 .L0 
     /tmp/ccmmgjoT.s:236    .text:00000000000000c0 .L0 
     /tmp/ccmmgjoT.s:237    .text:00000000000000c4 .L0 
     /tmp/ccmmgjoT.s:239    .text:00000000000000c8 .L0 
     /tmp/ccmmgjoT.s:241    .text:00000000000000cc .L0 
     /tmp/ccmmgjoT.s:244    .text:00000000000000cc .L0 
     /tmp/ccmmgjoT.s:245    .text:00000000000000cc .L0 
     /tmp/ccmmgjoT.s:246    .text:00000000000000cc .L0 
     /tmp/ccmmgjoT.s:252    .text:00000000000000d4 .L0 
   src/syscall_c.cpp:66     .text:00000000000000d4 .L0 
     /tmp/ccmmgjoT.s:258    .text:00000000000000d8 .L0 
     /tmp/ccmmgjoT.s:259    .text:00000000000000dc .L0 
     /tmp/ccmmgjoT.s:260    .text:00000000000000dc .L0 
     /tmp/ccmmgjoT.s:262    .text:00000000000000e0 .L0 
     /tmp/ccmmgjoT.s:264    .text:00000000000000e4 .L0 
     /tmp/ccmmgjoT.s:272    .text:00000000000000e4 .L0 
     /tmp/ccmmgjoT.s:975    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccmmgjoT.s:1950   .debug_str:00000000000004b6 .LASF79
     /tmp/ccmmgjoT.s:1884   .debug_str:00000000000002df .LASF80
     /tmp/ccmmgjoT.s:1846   .debug_str:00000000000001d0 .LASF81
     /tmp/ccmmgjoT.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccmmgjoT.s 			page 9


     /tmp/ccmmgjoT.s:267    .text:00000000000000e4 .Letext0
     /tmp/ccmmgjoT.s:1788   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccmmgjoT.s:1860   .debug_str:000000000000022b .LASF0
     /tmp/ccmmgjoT.s:1872   .debug_str:0000000000000279 .LASF1
     /tmp/ccmmgjoT.s:1922   .debug_str:0000000000000407 .LASF2
     /tmp/ccmmgjoT.s:1926   .debug_str:0000000000000422 .LASF4
     /tmp/ccmmgjoT.s:1862   .debug_str:0000000000000238 .LASF3
     /tmp/ccmmgjoT.s:1800   .debug_str:0000000000000051 .LASF5
     /tmp/ccmmgjoT.s:1906   .debug_str:000000000000037e .LASF6
     /tmp/ccmmgjoT.s:1866   .debug_str:0000000000000253 .LASF7
     /tmp/ccmmgjoT.s:1844   .debug_str:00000000000001c0 .LASF8
     /tmp/ccmmgjoT.s:1850   .debug_str:00000000000001fa .LASF9
     /tmp/ccmmgjoT.s:1818   .debug_str:00000000000000dd .LASF10
     /tmp/ccmmgjoT.s:1840   .debug_str:00000000000001a5 .LASF11
     /tmp/ccmmgjoT.s:1822   .debug_str:00000000000000ff .LASF12
     /tmp/ccmmgjoT.s:1816   .debug_str:00000000000000cd .LASF13
     /tmp/ccmmgjoT.s:1940   .debug_str:0000000000000486 .LASF14
     /tmp/ccmmgjoT.s:1836   .debug_str:0000000000000178 .LASF15
     /tmp/ccmmgjoT.s:1934   .debug_str:0000000000000452 .LASF16
     /tmp/ccmmgjoT.s:1892   .debug_str:0000000000000326 .LASF82
     /tmp/ccmmgjoT.s:1944   .debug_str:000000000000049b .LASF83
     /tmp/ccmmgjoT.s:1972   .debug_str:0000000000000601 .LASF17
     /tmp/ccmmgjoT.s:1848   .debug_str:00000000000001ee .LASF19
     /tmp/ccmmgjoT.s:1812   .debug_str:00000000000000a2 .LASF18
     /tmp/ccmmgjoT.s:1842   .debug_str:00000000000001b4 .LASF20
     /tmp/ccmmgjoT.s:1792   .debug_str:0000000000000005 .LASF21
     /tmp/ccmmgjoT.s:1880   .debug_str:00000000000002c6 .LASF23
     /tmp/ccmmgjoT.s:1932   .debug_str:000000000000043f .LASF22
     /tmp/ccmmgjoT.s:1924   .debug_str:0000000000000415 .LASF24
     /tmp/ccmmgjoT.s:1928   .debug_str:0000000000000429 .LASF25
     /tmp/ccmmgjoT.s:1798   .debug_str:0000000000000045 .LASF26
     /tmp/ccmmgjoT.s:1938   .debug_str:0000000000000479 .LASF27
     /tmp/ccmmgjoT.s:1914   .debug_str:00000000000003c6 .LASF28
     /tmp/ccmmgjoT.s:1898   .debug_str:000000000000035f .LASF84
     /tmp/ccmmgjoT.s:1912   .debug_str:00000000000003b6 .LASF31
     /tmp/ccmmgjoT.s:1878   .debug_str:00000000000002ab .LASF33
     /tmp/ccmmgjoT.s:1882   .debug_str:00000000000002d3 .LASF67
     /tmp/ccmmgjoT.s:1838   .debug_str:000000000000018e .LASF85
     /tmp/ccmmgjoT.s:1946   .debug_str:00000000000004a3 .LASF47
     /tmp/ccmmgjoT.s:1888   .debug_str:00000000000002f8 .LASF49
     /tmp/ccmmgjoT.s:1806   .debug_str:000000000000007e .LASF29
     /tmp/ccmmgjoT.s:1960   .debug_str:00000000000005b8 .LASF30
     /tmp/ccmmgjoT.s:1874   .debug_str:000000000000028c .LASF32
     /tmp/ccmmgjoT.s:1952   .debug_str:000000000000057a .LASF34
     /tmp/ccmmgjoT.s:1948   .debug_str:00000000000004ae .LASF86
     /tmp/ccmmgjoT.s:1790   .debug_str:0000000000000000 .LASF35
     /tmp/ccmmgjoT.s:1970   .debug_str:00000000000005fb .LASF36
     /tmp/ccmmgjoT.s:1958   .debug_str:00000000000005b0 .LASF37
     /tmp/ccmmgjoT.s:1942   .debug_str:0000000000000492 .LASF38
     /tmp/ccmmgjoT.s:1902   .debug_str:000000000000036c .LASF39
     /tmp/ccmmgjoT.s:1908   .debug_str:0000000000000391 .LASF40
     /tmp/ccmmgjoT.s:1810   .debug_str:0000000000000094 .LASF41
     /tmp/ccmmgjoT.s:1876   .debug_str:0000000000000292 .LASF43
     /tmp/ccmmgjoT.s:1826   .debug_str:000000000000012b .LASF87
     /tmp/ccmmgjoT.s:1796   .debug_str:000000000000001d .LASF88
     /tmp/ccmmgjoT.s:1832   .debug_str:0000000000000159 .LASF42
     /tmp/ccmmgjoT.s:1820   .debug_str:00000000000000ec .LASF44
GAS LISTING /tmp/ccmmgjoT.s 			page 10


     /tmp/ccmmgjoT.s:1930   .debug_str:000000000000042e .LASF89
     /tmp/ccmmgjoT.s:1968   .debug_str:00000000000005f0 .LASF90
     /tmp/ccmmgjoT.s:1916   .debug_str:00000000000003ea .LASF45
     /tmp/ccmmgjoT.s:1920   .debug_str:00000000000003fd .LASF46
     /tmp/ccmmgjoT.s:1854   .debug_str:0000000000000216 .LASF48
     /tmp/ccmmgjoT.s:1890   .debug_str:000000000000030f .LASF50
     /tmp/ccmmgjoT.s:1830   .debug_str:0000000000000151 .LASF51
     /tmp/ccmmgjoT.s:1824   .debug_str:000000000000010f .LASF52
     /tmp/ccmmgjoT.s:1864   .debug_str:000000000000024a .LASF53
     /tmp/ccmmgjoT.s:1814   .debug_str:00000000000000b2 .LASF54
     /tmp/ccmmgjoT.s:1900   .debug_str:0000000000000364 .LASF55
     /tmp/ccmmgjoT.s:1910   .debug_str:000000000000039c .LASF56
     /tmp/ccmmgjoT.s:1808   .debug_str:000000000000008a .LASF57
     /tmp/ccmmgjoT.s:1956   .debug_str:0000000000000594 .LASF58
     /tmp/ccmmgjoT.s:1858   .debug_str:0000000000000225 .LASF59
     /tmp/ccmmgjoT.s:1834   .debug_str:0000000000000162 .LASF60
     /tmp/ccmmgjoT.s:1794   .debug_str:0000000000000015 .LASF61
     /tmp/ccmmgjoT.s:1828   .debug_str:0000000000000139 .LASF62
     /tmp/ccmmgjoT.s:1894   .debug_str:0000000000000336 .LASF63
     /tmp/ccmmgjoT.s:1964   .debug_str:00000000000005d9 .LASF64
     /tmp/ccmmgjoT.s:1802   .debug_str:0000000000000058 .LASF65
     /tmp/ccmmgjoT.s:233    .text:00000000000000c0 .LFB49
     /tmp/ccmmgjoT.s:265    .text:00000000000000e4 .LFE49
     /tmp/ccmmgjoT.s:1962   .debug_str:00000000000005cf .LASF66
     /tmp/ccmmgjoT.s:1936   .debug_str:0000000000000468 .LASF69
     /tmp/ccmmgjoT.s:186    .text:0000000000000094 .LFB48
     /tmp/ccmmgjoT.s:227    .text:00000000000000c0 .LFE48
     /tmp/ccmmgjoT.s:1697   .debug_loc:0000000000000000 .LLST5
     /tmp/ccmmgjoT.s:1966   .debug_str:00000000000005e2 .LASF68
     /tmp/ccmmgjoT.s:1896   .debug_str:000000000000033e .LASF70
     /tmp/ccmmgjoT.s:120    .text:000000000000005c .LFB47
     /tmp/ccmmgjoT.s:180    .text:0000000000000094 .LFE47
     /tmp/ccmmgjoT.s:1886   .debug_str:00000000000002f1 .LASF71
     /tmp/ccmmgjoT.s:1709   .debug_loc:0000000000000037 .LLST4
     /tmp/ccmmgjoT.s:1868   .debug_str:0000000000000266 .LASF72
     /tmp/ccmmgjoT.s:1804   .debug_str:000000000000006d .LASF91
     /tmp/ccmmgjoT.s:1856   .debug_str:000000000000021c .LASF73
     /tmp/ccmmgjoT.s:1918   .debug_str:00000000000003ef .LASF74
     /tmp/ccmmgjoT.s:65     .text:000000000000002c .LFB46
     /tmp/ccmmgjoT.s:114    .text:000000000000005c .LFE46
     /tmp/ccmmgjoT.s:1723   .debug_loc:0000000000000070 .LLST2
     /tmp/ccmmgjoT.s:1737   .debug_loc:00000000000000a9 .LLST3
     /tmp/ccmmgjoT.s:1954   .debug_str:000000000000058a .LASF75
     /tmp/ccmmgjoT.s:1852   .debug_str:0000000000000208 .LASF76
     /tmp/ccmmgjoT.s:10     .text:0000000000000000 .LFB45
     /tmp/ccmmgjoT.s:59     .text:000000000000002c .LFE45
     /tmp/ccmmgjoT.s:1870   .debug_str:0000000000000274 .LASF77
     /tmp/ccmmgjoT.s:1749   .debug_loc:00000000000000e0 .LLST0
     /tmp/ccmmgjoT.s:1904   .debug_str:0000000000000376 .LASF78
     /tmp/ccmmgjoT.s:1763   .debug_loc:0000000000000119 .LLST1
     /tmp/ccmmgjoT.s:196    .text:00000000000000a0 .LVL10
     /tmp/ccmmgjoT.s:215    .text:00000000000000b0 .LVL11
     /tmp/ccmmgjoT.s:123    .text:000000000000005c .LVL6
     /tmp/ccmmgjoT.s:172    .text:0000000000000088 .LVL9
     /tmp/ccmmgjoT.s:68     .text:000000000000002c .LVL3
     /tmp/ccmmgjoT.s:102    .text:000000000000004c .LVL5
     /tmp/ccmmgjoT.s:76     .text:0000000000000038 .LVL4
GAS LISTING /tmp/ccmmgjoT.s 			page 11


     /tmp/ccmmgjoT.s:14     .text:0000000000000000 .LVL0
     /tmp/ccmmgjoT.s:48     .text:0000000000000020 .LVL2
     /tmp/ccmmgjoT.s:22     .text:000000000000000c .LVL1
     /tmp/ccmmgjoT.s:273    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
