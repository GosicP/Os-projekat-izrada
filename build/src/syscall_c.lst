GAS LISTING /tmp/ccdnxwNR.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB45:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 8/18/22.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   6:src/syscall_c.cpp **** #include "../h/RiscV.hpp"
   7:src/syscall_c.cpp **** //#include "../h/MemoryAllocation.hpp"
   8:src/syscall_c.cpp **** 
   9:src/syscall_c.cpp **** 
  10:src/syscall_c.cpp **** 
  11:src/syscall_c.cpp **** void *mem_alloc(size_t  size) {
  12              		.loc 1 11 31
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  12:src/syscall_c.cpp ****     void* pointer = nullptr;
  21              		.loc 1 12 5
  22              	.LVL1:
  13:src/syscall_c.cpp ****     uint64 sysCallNr=0x01UL;
  23              		.loc 1 13 5
  14:src/syscall_c.cpp ****     //size=MemoryAllocation::bytesToBlocks(size);
  15:src/syscall_c.cpp ****     //mozda ovde mozes da koristis privremeni registar "scratch", da bi koristio sd
  16:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : [size] "r" (size)); //izgleda da ipak mora sd, jer ne prepozna
  24              		.loc 1 16 5
  25              		.loc 1 16 56 is_stmt 0
  26              	#APP
  27              	# 16 "src/syscall_c.cpp" 1
  17              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
  28              		mv a1, a0
  29              	# 0 "" 2
  30              		.loc 1 17 5 is_stmt 1
  31              		.loc 1 17 66 is_stmt 0
  32              	#NO_APP
  33 0010 93071000 		li	a5,1
  34              	#APP
  35              	# 17 "src/syscall_c.cpp" 1
  18              	     //ovo bi trebalo u mainu, ali kom mainu, gde ja uopste smem da deklarisem trap??????? izgleda 
  19:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  36              		mv a0, a5
  37              	# 0 "" 2
  38              		.loc 1 19 5 is_stmt 1
  39              		.loc 1 19 30 is_stmt 0
GAS LISTING /tmp/ccdnxwNR.s 			page 2


  40              	# 19 "src/syscall_c.cpp" 1
  20              	    __asm__ volatile("mv %[pointer], a1" : [pointer] "=r"(pointer));
  41              		ecall
  42              	# 0 "" 2
  43              		.loc 1 20 5 is_stmt 1
  44              		.loc 1 20 68 is_stmt 0
  45              	# 20 "src/syscall_c.cpp" 1
  21              	    return pointer;
  46              		mv a0, a1
  47              	# 0 "" 2
  48              	.LVL2:
  49              		.loc 1 21 5 is_stmt 1
  22:src/syscall_c.cpp **** }
  50              		.loc 1 22 1 is_stmt 0
  51              	#NO_APP
  52 0020 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0024 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 0028 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE45:
  61              		.align	2
  62              		.globl	_Z8mem_freePv
  64              	_Z8mem_freePv:
  65              	.LFB46:
  23:src/syscall_c.cpp **** 
  24:src/syscall_c.cpp **** int mem_free(void * ptr) {
  66              		.loc 1 24 26 is_stmt 1
  67              		.cfi_startproc
  68              	.LVL3:
  69 002c 130101FF 		addi	sp,sp,-16
  70              		.cfi_def_cfa_offset 16
  71 0030 23348100 		sd	s0,8(sp)
  72              		.cfi_offset 8, -8
  73 0034 13040101 		addi	s0,sp,16
  74              		.cfi_def_cfa 8, 0
  25:src/syscall_c.cpp ****     int ret=0;
  75              		.loc 1 25 5
  76              	.LVL4:
  26:src/syscall_c.cpp ****     uint64 sysCallNr=0x02UL;
  77              		.loc 1 26 5
  27:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : [ptr] "r" (ptr));
  78              		.loc 1 27 5
  79              		.loc 1 27 54 is_stmt 0
  80              	#APP
  81              	# 27 "src/syscall_c.cpp" 1
  28              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
  82              		mv a1, a0
  83              	# 0 "" 2
  84              		.loc 1 28 5 is_stmt 1
  85              		.loc 1 28 66 is_stmt 0
  86              	#NO_APP
  87 003c 93072000 		li	a5,2
  88              	#APP
  89              	# 28 "src/syscall_c.cpp" 1
GAS LISTING /tmp/ccdnxwNR.s 			page 3


  29              	    //RiscV::w_stvec((uint64) &Trap());
  30:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  90              		mv a0, a5
  91              	# 0 "" 2
  92              		.loc 1 30 5 is_stmt 1
  93              		.loc 1 30 30 is_stmt 0
  94              	# 30 "src/syscall_c.cpp" 1
  31              	    __asm__ volatile("mv %[ret], a1" : [ret] "=r"(ret)); //kaze undefined reference
  95              		ecall
  96              	# 0 "" 2
  97              		.loc 1 31 5 is_stmt 1
  98              		.loc 1 31 56 is_stmt 0
  99              	# 31 "src/syscall_c.cpp" 1
  32              	    return ret;
 100              		mv a0, a1
 101              	# 0 "" 2
 102              	.LVL5:
 103              		.loc 1 32 5 is_stmt 1
  33:src/syscall_c.cpp **** }
 104              		.loc 1 33 1 is_stmt 0
 105              	#NO_APP
 106 004c 1B050500 		sext.w	a0,a0
 107 0050 03348100 		ld	s0,8(sp)
 108              		.cfi_restore 8
 109              		.cfi_def_cfa 2, 16
 110 0054 13010101 		addi	sp,sp,16
 111              		.cfi_def_cfa_offset 0
 112 0058 67800000 		jr	ra
 113              		.cfi_endproc
 114              	.LFE46:
 116              		.align	2
 117              		.globl	_Z13thread_createPP3TCBPFvPvES2_
 119              	_Z13thread_createPP3TCBPFvPvES2_:
 120              	.LFB47:
  34:src/syscall_c.cpp **** 
  35:src/syscall_c.cpp **** int thread_create (
  36:src/syscall_c.cpp ****         thread_t* handle,
  37:src/syscall_c.cpp ****         void(*start_routine)(void*),
  38:src/syscall_c.cpp ****         void* arg
  39:src/syscall_c.cpp **** ){
 121              		.loc 1 39 2 is_stmt 1
 122              		.cfi_startproc
 123              	.LVL6:
 124 005c 130101FF 		addi	sp,sp,-16
 125              		.cfi_def_cfa_offset 16
 126 0060 23348100 		sd	s0,8(sp)
 127              		.cfi_offset 8, -8
 128 0064 13040101 		addi	s0,sp,16
 129              		.cfi_def_cfa 8, 0
  40:src/syscall_c.cpp ****     TCB* ret_value_thread;
 130              		.loc 1 40 5
  41:src/syscall_c.cpp ****     uint64 sysCallNr=0x11UL;
 131              		.loc 1 41 5
 132              	.LVL7:
  42:src/syscall_c.cpp ****     //neki stack_space alokacija se pominje????
  43:src/syscall_c.cpp ****     __asm__ volatile("mv a3, %0" : : [arg] "r" (arg));
 133              		.loc 1 43 5
GAS LISTING /tmp/ccdnxwNR.s 			page 4


 134              		.loc 1 43 54 is_stmt 0
 135              	#APP
 136              	# 43 "src/syscall_c.cpp" 1
  44              	    __asm__ volatile("mv a2, %0" : : [start_routine] "r" (start_routine));
 137              		mv a3, a2
 138              	# 0 "" 2
 139              		.loc 1 44 5 is_stmt 1
 140              		.loc 1 44 74 is_stmt 0
 141              	# 44 "src/syscall_c.cpp" 1
  45              	    __asm__ volatile("mv a1, %0" : : [handle] "r" (handle));
 142              		mv a2, a1
 143              	# 0 "" 2
 144              		.loc 1 45 5 is_stmt 1
 145              		.loc 1 45 60 is_stmt 0
 146              	# 45 "src/syscall_c.cpp" 1
  46              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 147              		mv a1, a0
 148              	# 0 "" 2
 149              		.loc 1 46 5 is_stmt 1
 150              		.loc 1 46 66 is_stmt 0
 151              	#NO_APP
 152 0074 93071001 		li	a5,17
 153              	#APP
 154              	# 46 "src/syscall_c.cpp" 1
  47              	    __asm__ volatile("ecall");
 155              		mv a0, a5
 156              	# 0 "" 2
 157              		.loc 1 47 5 is_stmt 1
 158              		.loc 1 47 30 is_stmt 0
 159              	# 47 "src/syscall_c.cpp" 1
  48              	    __asm__ volatile("mv %[ret_value_thread], a1" : [ret_value_thread] "=r"(ret_value_thread)); //k
 160              		ecall
 161              	# 0 "" 2
 162              		.loc 1 48 5 is_stmt 1
 163              		.loc 1 48 95 is_stmt 0
 164              	# 48 "src/syscall_c.cpp" 1
  49              	    return 0;//todo
 165              		mv a5, a1
 166              	# 0 "" 2
 167              	.LVL8:
 168              		.loc 1 49 5 is_stmt 1
  50:src/syscall_c.cpp ****     //moras da vidis sta ovde treba da se vrati
  51:src/syscall_c.cpp **** }
 169              		.loc 1 51 1 is_stmt 0
 170              	#NO_APP
 171 0084 13050000 		li	a0,0
 172              	.LVL9:
 173 0088 03348100 		ld	s0,8(sp)
 174              		.cfi_restore 8
 175              		.cfi_def_cfa 2, 16
 176 008c 13010101 		addi	sp,sp,16
 177              		.cfi_def_cfa_offset 0
 178 0090 67800000 		jr	ra
 179              		.cfi_endproc
 180              	.LFE47:
 182              		.align	2
 183              		.globl	_Z11thread_exitv
GAS LISTING /tmp/ccdnxwNR.s 			page 5


 185              	_Z11thread_exitv:
 186              	.LFB48:
  52:src/syscall_c.cpp **** 
  53:src/syscall_c.cpp **** int thread_exit (){
 187              		.loc 1 53 19 is_stmt 1
 188              		.cfi_startproc
 189 0094 130101FF 		addi	sp,sp,-16
 190              		.cfi_def_cfa_offset 16
 191 0098 23348100 		sd	s0,8(sp)
 192              		.cfi_offset 8, -8
 193 009c 13040101 		addi	s0,sp,16
 194              		.cfi_def_cfa 8, 0
  54:src/syscall_c.cpp ****     int ret=0;
 195              		.loc 1 54 5
 196              	.LVL10:
  55:src/syscall_c.cpp ****     uint64 sysCallNr=0x12UL;
 197              		.loc 1 55 5
  56:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 198              		.loc 1 56 5
 199              		.loc 1 56 66 is_stmt 0
 200 00a0 93072001 		li	a5,18
 201              	#APP
 202              	# 56 "src/syscall_c.cpp" 1
  57              	    __asm__ volatile("ecall");
 203              		mv a0, a5
 204              	# 0 "" 2
 205              		.loc 1 57 5 is_stmt 1
 206              		.loc 1 57 30 is_stmt 0
 207              	# 57 "src/syscall_c.cpp" 1
  58              	    //sta treba ovde da se vrati, verovatno da li je uspelo ili nije uspelo, PREBACI THREAD_EXIT U 
  59:src/syscall_c.cpp ****     __asm__ volatile("mv %[ret], a1" : [ret] "=r"(ret)); //kaze undefined reference
 208              		ecall
 209              	# 0 "" 2
 210              		.loc 1 59 5 is_stmt 1
 211              		.loc 1 59 56 is_stmt 0
 212              	# 59 "src/syscall_c.cpp" 1
  60              	    return ret;
 213              		mv a0, a1
 214              	# 0 "" 2
 215              	.LVL11:
 216              		.loc 1 60 5 is_stmt 1
  61:src/syscall_c.cpp **** }
 217              		.loc 1 61 1 is_stmt 0
 218              	#NO_APP
 219 00b0 1B050500 		sext.w	a0,a0
 220 00b4 03348100 		ld	s0,8(sp)
 221              		.cfi_restore 8
 222              		.cfi_def_cfa 2, 16
 223 00b8 13010101 		addi	sp,sp,16
 224              		.cfi_def_cfa_offset 0
 225 00bc 67800000 		jr	ra
 226              		.cfi_endproc
 227              	.LFE48:
 229              		.align	2
 230              		.globl	_Z15thread_dispatchv
 232              	_Z15thread_dispatchv:
 233              	.LFB49:
GAS LISTING /tmp/ccdnxwNR.s 			page 6


  62:src/syscall_c.cpp **** 
  63:src/syscall_c.cpp **** void thread_dispatch (){
 234              		.loc 1 63 24 is_stmt 1
 235              		.cfi_startproc
 236 00c0 130101FF 		addi	sp,sp,-16
 237              		.cfi_def_cfa_offset 16
 238 00c4 23348100 		sd	s0,8(sp)
 239              		.cfi_offset 8, -8
 240 00c8 13040101 		addi	s0,sp,16
 241              		.cfi_def_cfa 8, 0
  64:src/syscall_c.cpp ****     uint64 sysCallNr=0x13UL;
 242              		.loc 1 64 5
 243              	.LVL12:
  65:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 244              		.loc 1 65 5
 245              		.loc 1 65 66 is_stmt 0
 246 00cc 93073001 		li	a5,19
 247              	#APP
 248              	# 65 "src/syscall_c.cpp" 1
  66              	    __asm__ volatile("ecall");
 249              		mv a0, a5
 250              	# 0 "" 2
 251              		.loc 1 66 5 is_stmt 1
 252              		.loc 1 66 30 is_stmt 0
 253              	# 66 "src/syscall_c.cpp" 1
  67              	}
 254              		ecall
 255              	# 0 "" 2
 256              		.loc 1 67 1
 257              	#NO_APP
 258 00d8 03348100 		ld	s0,8(sp)
 259              		.cfi_restore 8
 260              		.cfi_def_cfa 2, 16
 261 00dc 13010101 		addi	sp,sp,16
 262              		.cfi_def_cfa_offset 0
 263 00e0 67800000 		jr	ra
 264              		.cfi_endproc
 265              	.LFE49:
 267              		.align	2
 268              		.globl	_Z8sem_openPP9semaphorej
 270              	_Z8sem_openPP9semaphorej:
 271              	.LFB50:
  68:src/syscall_c.cpp **** 
  69:src/syscall_c.cpp **** int sem_open (
  70:src/syscall_c.cpp ****         sem_t* handle,
  71:src/syscall_c.cpp ****         unsigned init
  72:src/syscall_c.cpp **** ){
 272              		.loc 1 72 2 is_stmt 1
 273              		.cfi_startproc
 274              	.LVL13:
 275 00e4 130101FF 		addi	sp,sp,-16
 276              		.cfi_def_cfa_offset 16
 277 00e8 23348100 		sd	s0,8(sp)
 278              		.cfi_offset 8, -8
 279 00ec 13040101 		addi	s0,sp,16
 280              		.cfi_def_cfa 8, 0
  73:src/syscall_c.cpp ****     uint64 sysCallNr=0x21UL;
GAS LISTING /tmp/ccdnxwNR.s 			page 7


 281              		.loc 1 73 5
 282              	.LVL14:
  74:src/syscall_c.cpp ****     int retval;
 283              		.loc 1 74 5
  75:src/syscall_c.cpp ****     __asm__ volatile("mv a2, %0": : [init] "r" (init));
 284              		.loc 1 75 5
 285              		.loc 1 75 55 is_stmt 0
 286              	#APP
 287              	# 75 "src/syscall_c.cpp" 1
  76              	    __asm__ volatile("mv a1, %0": : [handle] "r" (handle));
 288              		mv a2, a1
 289              	# 0 "" 2
 290              		.loc 1 76 5 is_stmt 1
 291              		.loc 1 76 59 is_stmt 0
 292              	# 76 "src/syscall_c.cpp" 1
  77              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 293              		mv a1, a0
 294              	# 0 "" 2
 295              		.loc 1 77 5 is_stmt 1
 296              		.loc 1 77 66 is_stmt 0
 297              	#NO_APP
 298 00f8 93071002 		li	a5,33
 299              	#APP
 300              	# 77 "src/syscall_c.cpp" 1
  78              	    __asm__ volatile("ecall");
 301              		mv a0, a5
 302              	# 0 "" 2
 303              		.loc 1 78 5 is_stmt 1
 304              		.loc 1 78 30 is_stmt 0
 305              	# 78 "src/syscall_c.cpp" 1
  79              	    __asm__ volatile("mv %[retval], a1" : [retval] "=r"(retval));
 306              		ecall
 307              	# 0 "" 2
 308              		.loc 1 79 5 is_stmt 1
 309              		.loc 1 79 65 is_stmt 0
 310              	# 79 "src/syscall_c.cpp" 1
  80              	    return retval;
 311              		mv a0, a1
 312              	# 0 "" 2
 313              	.LVL15:
 314              		.loc 1 80 5 is_stmt 1
  81:src/syscall_c.cpp **** }
 315              		.loc 1 81 1 is_stmt 0
 316              	#NO_APP
 317 0108 1B050500 		sext.w	a0,a0
 318 010c 03348100 		ld	s0,8(sp)
 319              		.cfi_restore 8
 320              		.cfi_def_cfa 2, 16
 321 0110 13010101 		addi	sp,sp,16
 322              		.cfi_def_cfa_offset 0
 323 0114 67800000 		jr	ra
 324              		.cfi_endproc
 325              	.LFE50:
 327              		.align	2
 328              		.globl	_Z9sem_closeP9semaphore
 330              	_Z9sem_closeP9semaphore:
 331              	.LFB51:
GAS LISTING /tmp/ccdnxwNR.s 			page 8


  82:src/syscall_c.cpp **** 
  83:src/syscall_c.cpp **** int sem_close (sem_t handle){
 332              		.loc 1 83 29 is_stmt 1
 333              		.cfi_startproc
 334              	.LVL16:
 335 0118 130101FF 		addi	sp,sp,-16
 336              		.cfi_def_cfa_offset 16
 337 011c 23348100 		sd	s0,8(sp)
 338              		.cfi_offset 8, -8
 339 0120 13040101 		addi	s0,sp,16
 340              		.cfi_def_cfa 8, 0
  84:src/syscall_c.cpp ****     uint64 sysCallNr=0x22UL;
 341              		.loc 1 84 5
 342              	.LVL17:
  85:src/syscall_c.cpp ****     int retval;
 343              		.loc 1 85 5
  86:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0": : [handle] "r" (handle));
 344              		.loc 1 86 5
 345              		.loc 1 86 59 is_stmt 0
 346              	#APP
 347              	# 86 "src/syscall_c.cpp" 1
  87              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 348              		mv a1, a0
 349              	# 0 "" 2
 350              		.loc 1 87 5 is_stmt 1
 351              		.loc 1 87 66 is_stmt 0
 352              	#NO_APP
 353 0128 93072002 		li	a5,34
 354              	#APP
 355              	# 87 "src/syscall_c.cpp" 1
  88              	    __asm__ volatile("ecall");
 356              		mv a0, a5
 357              	# 0 "" 2
 358              		.loc 1 88 5 is_stmt 1
 359              		.loc 1 88 30 is_stmt 0
 360              	# 88 "src/syscall_c.cpp" 1
  89              	    __asm__ volatile("mv %[retval], a1" : [retval] "=r"(retval));
 361              		ecall
 362              	# 0 "" 2
 363              		.loc 1 89 5 is_stmt 1
 364              		.loc 1 89 65 is_stmt 0
 365              	# 89 "src/syscall_c.cpp" 1
  90              	    return retval;
 366              		mv a0, a1
 367              	# 0 "" 2
 368              	.LVL18:
 369              		.loc 1 90 5 is_stmt 1
  91:src/syscall_c.cpp **** }
 370              		.loc 1 91 1 is_stmt 0
 371              	#NO_APP
 372 0138 1B050500 		sext.w	a0,a0
 373 013c 03348100 		ld	s0,8(sp)
 374              		.cfi_restore 8
 375              		.cfi_def_cfa 2, 16
 376 0140 13010101 		addi	sp,sp,16
 377              		.cfi_def_cfa_offset 0
 378 0144 67800000 		jr	ra
GAS LISTING /tmp/ccdnxwNR.s 			page 9


 379              		.cfi_endproc
 380              	.LFE51:
 382              		.align	2
 383              		.globl	_Z8sem_waitP9semaphore
 385              	_Z8sem_waitP9semaphore:
 386              	.LFB52:
  92:src/syscall_c.cpp **** 
  93:src/syscall_c.cpp **** int sem_wait (sem_t id){
 387              		.loc 1 93 24 is_stmt 1
 388              		.cfi_startproc
 389              	.LVL19:
 390 0148 130101FF 		addi	sp,sp,-16
 391              		.cfi_def_cfa_offset 16
 392 014c 23348100 		sd	s0,8(sp)
 393              		.cfi_offset 8, -8
 394 0150 13040101 		addi	s0,sp,16
 395              		.cfi_def_cfa 8, 0
  94:src/syscall_c.cpp ****     uint64 sysCallNr=0x23UL;
 396              		.loc 1 94 5
 397              	.LVL20:
  95:src/syscall_c.cpp ****     int retval;
 398              		.loc 1 95 5
  96:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0": : [id] "r" (id));
 399              		.loc 1 96 5
 400              		.loc 1 96 51 is_stmt 0
 401              	#APP
 402              	# 96 "src/syscall_c.cpp" 1
  97              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 403              		mv a1, a0
 404              	# 0 "" 2
 405              		.loc 1 97 5 is_stmt 1
 406              		.loc 1 97 66 is_stmt 0
 407              	#NO_APP
 408 0158 93073002 		li	a5,35
 409              	#APP
 410              	# 97 "src/syscall_c.cpp" 1
  98              	    __asm__ volatile("ecall");
 411              		mv a0, a5
 412              	# 0 "" 2
 413              		.loc 1 98 5 is_stmt 1
 414              		.loc 1 98 30 is_stmt 0
 415              	# 98 "src/syscall_c.cpp" 1
  99              	    __asm__ volatile("mv %[retval], a1" : [retval] "=r"(retval));
 416              		ecall
 417              	# 0 "" 2
 418              		.loc 1 99 5 is_stmt 1
 419              		.loc 1 99 65 is_stmt 0
 420              	# 99 "src/syscall_c.cpp" 1
 100              	    return retval;
 421              		mv a0, a1
 422              	# 0 "" 2
 423              	.LVL21:
 424              		.loc 1 100 5 is_stmt 1
 101:src/syscall_c.cpp **** }
 425              		.loc 1 101 1 is_stmt 0
 426              	#NO_APP
 427 0168 1B050500 		sext.w	a0,a0
GAS LISTING /tmp/ccdnxwNR.s 			page 10


 428 016c 03348100 		ld	s0,8(sp)
 429              		.cfi_restore 8
 430              		.cfi_def_cfa 2, 16
 431 0170 13010101 		addi	sp,sp,16
 432              		.cfi_def_cfa_offset 0
 433 0174 67800000 		jr	ra
 434              		.cfi_endproc
 435              	.LFE52:
 437              		.align	2
 438              		.globl	_Z10sem_signalP9semaphore
 440              	_Z10sem_signalP9semaphore:
 441              	.LFB53:
 102:src/syscall_c.cpp **** 
 103:src/syscall_c.cpp **** int sem_signal (sem_t id){
 442              		.loc 1 103 26 is_stmt 1
 443              		.cfi_startproc
 444              	.LVL22:
 445 0178 130101FF 		addi	sp,sp,-16
 446              		.cfi_def_cfa_offset 16
 447 017c 23348100 		sd	s0,8(sp)
 448              		.cfi_offset 8, -8
 449 0180 13040101 		addi	s0,sp,16
 450              		.cfi_def_cfa 8, 0
 104:src/syscall_c.cpp ****     uint64 sysCallNr=0x24UL;
 451              		.loc 1 104 5
 452              	.LVL23:
 105:src/syscall_c.cpp ****     int retval;
 453              		.loc 1 105 5
 106:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0": : [id] "r" (id));
 454              		.loc 1 106 5
 455              		.loc 1 106 51 is_stmt 0
 456              	#APP
 457              	# 106 "src/syscall_c.cpp" 1
 107              	    __asm__ volatile("mv a0, %0" : : [sysCallNr] "r" (sysCallNr));
 458              		mv a1, a0
 459              	# 0 "" 2
 460              		.loc 1 107 5 is_stmt 1
 461              		.loc 1 107 66 is_stmt 0
 462              	#NO_APP
 463 0188 93074002 		li	a5,36
 464              	#APP
 465              	# 107 "src/syscall_c.cpp" 1
 108              	    __asm__ volatile("ecall");
 466              		mv a0, a5
 467              	# 0 "" 2
 468              		.loc 1 108 5 is_stmt 1
 469              		.loc 1 108 30 is_stmt 0
 470              	# 108 "src/syscall_c.cpp" 1
 109              	    __asm__ volatile("mv %[retval], a1" : [retval] "=r"(retval));
 471              		ecall
 472              	# 0 "" 2
 473              		.loc 1 109 5 is_stmt 1
 474              		.loc 1 109 65 is_stmt 0
 475              	# 109 "src/syscall_c.cpp" 1
 110              	    return retval;
 476              		mv a0, a1
 477              	# 0 "" 2
GAS LISTING /tmp/ccdnxwNR.s 			page 11


 478              	.LVL24:
 479              		.loc 1 110 5 is_stmt 1
 111:src/syscall_c.cpp **** }
 480              		.loc 1 111 1 is_stmt 0
 481              	#NO_APP
 482 0198 1B050500 		sext.w	a0,a0
 483 019c 03348100 		ld	s0,8(sp)
 484              		.cfi_restore 8
 485              		.cfi_def_cfa 2, 16
 486 01a0 13010101 		addi	sp,sp,16
 487              		.cfi_def_cfa_offset 0
 488 01a4 67800000 		jr	ra
 489              		.cfi_endproc
 490              	.LFE53:
 492              	.Letext0:
 493              		.file 2 "src/../h/../h/../lib/hw.h"
 494              		.file 3 "src/../h/../h/tcb.hpp"
 495              		.file 4 "src/../h/../h/../h/semaphore.hpp"
 496              		.file 5 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccdnxwNR.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccdnxwNR.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccdnxwNR.s:13     .text:0000000000000000 .L0 
     /tmp/ccdnxwNR.s:15     .text:0000000000000000 .L0 
     /tmp/ccdnxwNR.s:16     .text:0000000000000004 .L0 
     /tmp/ccdnxwNR.s:18     .text:0000000000000008 .L0 
     /tmp/ccdnxwNR.s:20     .text:000000000000000c .L0 
     /tmp/ccdnxwNR.s:23     .text:000000000000000c .L0 
     /tmp/ccdnxwNR.s:24     .text:000000000000000c .L0 
     /tmp/ccdnxwNR.s:25     .text:000000000000000c .L0 
   src/syscall_c.cpp:16     .text:000000000000000c .L0 
     /tmp/ccdnxwNR.s:31     .text:0000000000000010 .L0 
     /tmp/ccdnxwNR.s:33     .text:0000000000000010 .L0 
     /tmp/ccdnxwNR.s:39     .text:0000000000000018 .L0 
   src/syscall_c.cpp:19     .text:0000000000000018 .L0 
     /tmp/ccdnxwNR.s:44     .text:000000000000001c .L0 
   src/syscall_c.cpp:20     .text:000000000000001c .L0 
     /tmp/ccdnxwNR.s:50     .text:0000000000000020 .L0 
     /tmp/ccdnxwNR.s:52     .text:0000000000000020 .L0 
     /tmp/ccdnxwNR.s:53     .text:0000000000000024 .L0 
     /tmp/ccdnxwNR.s:54     .text:0000000000000024 .L0 
     /tmp/ccdnxwNR.s:56     .text:0000000000000028 .L0 
     /tmp/ccdnxwNR.s:58     .text:000000000000002c .L0 
     /tmp/ccdnxwNR.s:64     .text:000000000000002c _Z8mem_freePv
     /tmp/ccdnxwNR.s:67     .text:000000000000002c .L0 
     /tmp/ccdnxwNR.s:69     .text:000000000000002c .L0 
     /tmp/ccdnxwNR.s:70     .text:0000000000000030 .L0 
     /tmp/ccdnxwNR.s:72     .text:0000000000000034 .L0 
     /tmp/ccdnxwNR.s:74     .text:0000000000000038 .L0 
     /tmp/ccdnxwNR.s:77     .text:0000000000000038 .L0 
     /tmp/ccdnxwNR.s:78     .text:0000000000000038 .L0 
     /tmp/ccdnxwNR.s:79     .text:0000000000000038 .L0 
   src/syscall_c.cpp:27     .text:0000000000000038 .L0 
     /tmp/ccdnxwNR.s:85     .text:000000000000003c .L0 
     /tmp/ccdnxwNR.s:87     .text:000000000000003c .L0 
     /tmp/ccdnxwNR.s:93     .text:0000000000000044 .L0 
   src/syscall_c.cpp:30     .text:0000000000000044 .L0 
     /tmp/ccdnxwNR.s:98     .text:0000000000000048 .L0 
   src/syscall_c.cpp:31     .text:0000000000000048 .L0 
     /tmp/ccdnxwNR.s:104    .text:000000000000004c .L0 
     /tmp/ccdnxwNR.s:106    .text:000000000000004c .L0 
     /tmp/ccdnxwNR.s:108    .text:0000000000000054 .L0 
     /tmp/ccdnxwNR.s:109    .text:0000000000000054 .L0 
     /tmp/ccdnxwNR.s:111    .text:0000000000000058 .L0 
     /tmp/ccdnxwNR.s:113    .text:000000000000005c .L0 
     /tmp/ccdnxwNR.s:119    .text:000000000000005c _Z13thread_createPP3TCBPFvPvES2_
     /tmp/ccdnxwNR.s:122    .text:000000000000005c .L0 
     /tmp/ccdnxwNR.s:124    .text:000000000000005c .L0 
     /tmp/ccdnxwNR.s:125    .text:0000000000000060 .L0 
     /tmp/ccdnxwNR.s:127    .text:0000000000000064 .L0 
     /tmp/ccdnxwNR.s:129    .text:0000000000000068 .L0 
     /tmp/ccdnxwNR.s:131    .text:0000000000000068 .L0 
     /tmp/ccdnxwNR.s:133    .text:0000000000000068 .L0 
     /tmp/ccdnxwNR.s:134    .text:0000000000000068 .L0 
   src/syscall_c.cpp:43     .text:0000000000000068 .L0 
     /tmp/ccdnxwNR.s:140    .text:000000000000006c .L0 
GAS LISTING /tmp/ccdnxwNR.s 			page 13


   src/syscall_c.cpp:44     .text:000000000000006c .L0 
     /tmp/ccdnxwNR.s:145    .text:0000000000000070 .L0 
   src/syscall_c.cpp:45     .text:0000000000000070 .L0 
     /tmp/ccdnxwNR.s:150    .text:0000000000000074 .L0 
     /tmp/ccdnxwNR.s:152    .text:0000000000000074 .L0 
     /tmp/ccdnxwNR.s:158    .text:000000000000007c .L0 
   src/syscall_c.cpp:47     .text:000000000000007c .L0 
     /tmp/ccdnxwNR.s:163    .text:0000000000000080 .L0 
   src/syscall_c.cpp:48     .text:0000000000000080 .L0 
     /tmp/ccdnxwNR.s:169    .text:0000000000000084 .L0 
     /tmp/ccdnxwNR.s:171    .text:0000000000000084 .L0 
     /tmp/ccdnxwNR.s:174    .text:000000000000008c .L0 
     /tmp/ccdnxwNR.s:175    .text:000000000000008c .L0 
     /tmp/ccdnxwNR.s:177    .text:0000000000000090 .L0 
     /tmp/ccdnxwNR.s:179    .text:0000000000000094 .L0 
     /tmp/ccdnxwNR.s:185    .text:0000000000000094 _Z11thread_exitv
     /tmp/ccdnxwNR.s:188    .text:0000000000000094 .L0 
     /tmp/ccdnxwNR.s:189    .text:0000000000000094 .L0 
     /tmp/ccdnxwNR.s:190    .text:0000000000000098 .L0 
     /tmp/ccdnxwNR.s:192    .text:000000000000009c .L0 
     /tmp/ccdnxwNR.s:194    .text:00000000000000a0 .L0 
     /tmp/ccdnxwNR.s:197    .text:00000000000000a0 .L0 
     /tmp/ccdnxwNR.s:198    .text:00000000000000a0 .L0 
     /tmp/ccdnxwNR.s:199    .text:00000000000000a0 .L0 
     /tmp/ccdnxwNR.s:200    .text:00000000000000a0 .L0 
     /tmp/ccdnxwNR.s:206    .text:00000000000000a8 .L0 
   src/syscall_c.cpp:57     .text:00000000000000a8 .L0 
     /tmp/ccdnxwNR.s:211    .text:00000000000000ac .L0 
   src/syscall_c.cpp:59     .text:00000000000000ac .L0 
     /tmp/ccdnxwNR.s:217    .text:00000000000000b0 .L0 
     /tmp/ccdnxwNR.s:219    .text:00000000000000b0 .L0 
     /tmp/ccdnxwNR.s:221    .text:00000000000000b8 .L0 
     /tmp/ccdnxwNR.s:222    .text:00000000000000b8 .L0 
     /tmp/ccdnxwNR.s:224    .text:00000000000000bc .L0 
     /tmp/ccdnxwNR.s:226    .text:00000000000000c0 .L0 
     /tmp/ccdnxwNR.s:232    .text:00000000000000c0 _Z15thread_dispatchv
     /tmp/ccdnxwNR.s:235    .text:00000000000000c0 .L0 
     /tmp/ccdnxwNR.s:236    .text:00000000000000c0 .L0 
     /tmp/ccdnxwNR.s:237    .text:00000000000000c4 .L0 
     /tmp/ccdnxwNR.s:239    .text:00000000000000c8 .L0 
     /tmp/ccdnxwNR.s:241    .text:00000000000000cc .L0 
     /tmp/ccdnxwNR.s:244    .text:00000000000000cc .L0 
     /tmp/ccdnxwNR.s:245    .text:00000000000000cc .L0 
     /tmp/ccdnxwNR.s:246    .text:00000000000000cc .L0 
     /tmp/ccdnxwNR.s:252    .text:00000000000000d4 .L0 
   src/syscall_c.cpp:66     .text:00000000000000d4 .L0 
     /tmp/ccdnxwNR.s:258    .text:00000000000000d8 .L0 
     /tmp/ccdnxwNR.s:259    .text:00000000000000dc .L0 
     /tmp/ccdnxwNR.s:260    .text:00000000000000dc .L0 
     /tmp/ccdnxwNR.s:262    .text:00000000000000e0 .L0 
     /tmp/ccdnxwNR.s:264    .text:00000000000000e4 .L0 
     /tmp/ccdnxwNR.s:270    .text:00000000000000e4 _Z8sem_openPP9semaphorej
     /tmp/ccdnxwNR.s:273    .text:00000000000000e4 .L0 
     /tmp/ccdnxwNR.s:275    .text:00000000000000e4 .L0 
     /tmp/ccdnxwNR.s:276    .text:00000000000000e8 .L0 
     /tmp/ccdnxwNR.s:278    .text:00000000000000ec .L0 
     /tmp/ccdnxwNR.s:280    .text:00000000000000f0 .L0 
GAS LISTING /tmp/ccdnxwNR.s 			page 14


     /tmp/ccdnxwNR.s:283    .text:00000000000000f0 .L0 
     /tmp/ccdnxwNR.s:284    .text:00000000000000f0 .L0 
     /tmp/ccdnxwNR.s:285    .text:00000000000000f0 .L0 
   src/syscall_c.cpp:75     .text:00000000000000f0 .L0 
     /tmp/ccdnxwNR.s:291    .text:00000000000000f4 .L0 
   src/syscall_c.cpp:76     .text:00000000000000f4 .L0 
     /tmp/ccdnxwNR.s:296    .text:00000000000000f8 .L0 
     /tmp/ccdnxwNR.s:298    .text:00000000000000f8 .L0 
     /tmp/ccdnxwNR.s:304    .text:0000000000000100 .L0 
   src/syscall_c.cpp:78     .text:0000000000000100 .L0 
     /tmp/ccdnxwNR.s:309    .text:0000000000000104 .L0 
   src/syscall_c.cpp:79     .text:0000000000000104 .L0 
     /tmp/ccdnxwNR.s:315    .text:0000000000000108 .L0 
     /tmp/ccdnxwNR.s:317    .text:0000000000000108 .L0 
     /tmp/ccdnxwNR.s:319    .text:0000000000000110 .L0 
     /tmp/ccdnxwNR.s:320    .text:0000000000000110 .L0 
     /tmp/ccdnxwNR.s:322    .text:0000000000000114 .L0 
     /tmp/ccdnxwNR.s:324    .text:0000000000000118 .L0 
     /tmp/ccdnxwNR.s:330    .text:0000000000000118 _Z9sem_closeP9semaphore
     /tmp/ccdnxwNR.s:333    .text:0000000000000118 .L0 
     /tmp/ccdnxwNR.s:335    .text:0000000000000118 .L0 
     /tmp/ccdnxwNR.s:336    .text:000000000000011c .L0 
     /tmp/ccdnxwNR.s:338    .text:0000000000000120 .L0 
     /tmp/ccdnxwNR.s:340    .text:0000000000000124 .L0 
     /tmp/ccdnxwNR.s:343    .text:0000000000000124 .L0 
     /tmp/ccdnxwNR.s:344    .text:0000000000000124 .L0 
     /tmp/ccdnxwNR.s:345    .text:0000000000000124 .L0 
   src/syscall_c.cpp:86     .text:0000000000000124 .L0 
     /tmp/ccdnxwNR.s:351    .text:0000000000000128 .L0 
     /tmp/ccdnxwNR.s:353    .text:0000000000000128 .L0 
     /tmp/ccdnxwNR.s:359    .text:0000000000000130 .L0 
   src/syscall_c.cpp:88     .text:0000000000000130 .L0 
     /tmp/ccdnxwNR.s:364    .text:0000000000000134 .L0 
   src/syscall_c.cpp:89     .text:0000000000000134 .L0 
     /tmp/ccdnxwNR.s:370    .text:0000000000000138 .L0 
     /tmp/ccdnxwNR.s:372    .text:0000000000000138 .L0 
     /tmp/ccdnxwNR.s:374    .text:0000000000000140 .L0 
     /tmp/ccdnxwNR.s:375    .text:0000000000000140 .L0 
     /tmp/ccdnxwNR.s:377    .text:0000000000000144 .L0 
     /tmp/ccdnxwNR.s:379    .text:0000000000000148 .L0 
     /tmp/ccdnxwNR.s:385    .text:0000000000000148 _Z8sem_waitP9semaphore
     /tmp/ccdnxwNR.s:388    .text:0000000000000148 .L0 
     /tmp/ccdnxwNR.s:390    .text:0000000000000148 .L0 
     /tmp/ccdnxwNR.s:391    .text:000000000000014c .L0 
     /tmp/ccdnxwNR.s:393    .text:0000000000000150 .L0 
     /tmp/ccdnxwNR.s:395    .text:0000000000000154 .L0 
     /tmp/ccdnxwNR.s:398    .text:0000000000000154 .L0 
     /tmp/ccdnxwNR.s:399    .text:0000000000000154 .L0 
     /tmp/ccdnxwNR.s:400    .text:0000000000000154 .L0 
   src/syscall_c.cpp:96     .text:0000000000000154 .L0 
     /tmp/ccdnxwNR.s:406    .text:0000000000000158 .L0 
     /tmp/ccdnxwNR.s:408    .text:0000000000000158 .L0 
     /tmp/ccdnxwNR.s:414    .text:0000000000000160 .L0 
   src/syscall_c.cpp:98     .text:0000000000000160 .L0 
     /tmp/ccdnxwNR.s:419    .text:0000000000000164 .L0 
   src/syscall_c.cpp:99     .text:0000000000000164 .L0 
     /tmp/ccdnxwNR.s:425    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccdnxwNR.s 			page 15


     /tmp/ccdnxwNR.s:427    .text:0000000000000168 .L0 
     /tmp/ccdnxwNR.s:429    .text:0000000000000170 .L0 
     /tmp/ccdnxwNR.s:430    .text:0000000000000170 .L0 
     /tmp/ccdnxwNR.s:432    .text:0000000000000174 .L0 
     /tmp/ccdnxwNR.s:434    .text:0000000000000178 .L0 
     /tmp/ccdnxwNR.s:440    .text:0000000000000178 _Z10sem_signalP9semaphore
     /tmp/ccdnxwNR.s:443    .text:0000000000000178 .L0 
     /tmp/ccdnxwNR.s:445    .text:0000000000000178 .L0 
     /tmp/ccdnxwNR.s:446    .text:000000000000017c .L0 
     /tmp/ccdnxwNR.s:448    .text:0000000000000180 .L0 
     /tmp/ccdnxwNR.s:450    .text:0000000000000184 .L0 
     /tmp/ccdnxwNR.s:453    .text:0000000000000184 .L0 
     /tmp/ccdnxwNR.s:454    .text:0000000000000184 .L0 
     /tmp/ccdnxwNR.s:455    .text:0000000000000184 .L0 
   src/syscall_c.cpp:106    .text:0000000000000184 .L0 
     /tmp/ccdnxwNR.s:461    .text:0000000000000188 .L0 
     /tmp/ccdnxwNR.s:463    .text:0000000000000188 .L0 
     /tmp/ccdnxwNR.s:469    .text:0000000000000190 .L0 
   src/syscall_c.cpp:108    .text:0000000000000190 .L0 
     /tmp/ccdnxwNR.s:474    .text:0000000000000194 .L0 
   src/syscall_c.cpp:109    .text:0000000000000194 .L0 
     /tmp/ccdnxwNR.s:480    .text:0000000000000198 .L0 
     /tmp/ccdnxwNR.s:482    .text:0000000000000198 .L0 
     /tmp/ccdnxwNR.s:484    .text:00000000000001a0 .L0 
     /tmp/ccdnxwNR.s:485    .text:00000000000001a0 .L0 
     /tmp/ccdnxwNR.s:487    .text:00000000000001a4 .L0 
     /tmp/ccdnxwNR.s:489    .text:00000000000001a8 .L0 
     /tmp/ccdnxwNR.s:497    .text:00000000000001a8 .L0 
     /tmp/ccdnxwNR.s:1357   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccdnxwNR.s:2421   .debug_str:0000000000000534 .LASF90
     /tmp/ccdnxwNR.s:2345   .debug_str:00000000000002f2 .LASF91
     /tmp/ccdnxwNR.s:2305   .debug_str:00000000000001d8 .LASF92
     /tmp/ccdnxwNR.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccdnxwNR.s:492    .text:00000000000001a8 .Letext0
     /tmp/ccdnxwNR.s:2243   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccdnxwNR.s:2321   .debug_str:000000000000023e .LASF0
     /tmp/ccdnxwNR.s:2333   .debug_str:000000000000028c .LASF1
     /tmp/ccdnxwNR.s:2393   .debug_str:0000000000000485 .LASF2
     /tmp/ccdnxwNR.s:2397   .debug_str:00000000000004a0 .LASF4
     /tmp/ccdnxwNR.s:2323   .debug_str:000000000000024b .LASF3
     /tmp/ccdnxwNR.s:2255   .debug_str:0000000000000051 .LASF5
     /tmp/ccdnxwNR.s:2373   .debug_str:00000000000003dd .LASF6
     /tmp/ccdnxwNR.s:2327   .debug_str:0000000000000266 .LASF7
     /tmp/ccdnxwNR.s:2303   .debug_str:00000000000001c8 .LASF8
     /tmp/ccdnxwNR.s:2309   .debug_str:0000000000000202 .LASF9
     /tmp/ccdnxwNR.s:2275   .debug_str:00000000000000e2 .LASF10
     /tmp/ccdnxwNR.s:2299   .debug_str:00000000000001ad .LASF11
     /tmp/ccdnxwNR.s:2279   .debug_str:0000000000000104 .LASF12
     /tmp/ccdnxwNR.s:2273   .debug_str:00000000000000d2 .LASF13
     /tmp/ccdnxwNR.s:2411   .debug_str:0000000000000504 .LASF14
     /tmp/ccdnxwNR.s:2291   .debug_str:0000000000000161 .LASF15
     /tmp/ccdnxwNR.s:2405   .debug_str:00000000000004d0 .LASF16
     /tmp/ccdnxwNR.s:2359   .debug_str:0000000000000385 .LASF93
     /tmp/ccdnxwNR.s:2415   .debug_str:0000000000000519 .LASF94
     /tmp/ccdnxwNR.s:2447   .debug_str:0000000000000693 .LASF17
     /tmp/ccdnxwNR.s:2307   .debug_str:00000000000001f6 .LASF19
     /tmp/ccdnxwNR.s:2269   .debug_str:00000000000000a7 .LASF18
GAS LISTING /tmp/ccdnxwNR.s 			page 16


     /tmp/ccdnxwNR.s:2301   .debug_str:00000000000001bc .LASF20
     /tmp/ccdnxwNR.s:2247   .debug_str:0000000000000005 .LASF21
     /tmp/ccdnxwNR.s:2341   .debug_str:00000000000002d9 .LASF23
     /tmp/ccdnxwNR.s:2403   .debug_str:00000000000004bd .LASF22
     /tmp/ccdnxwNR.s:2395   .debug_str:0000000000000493 .LASF24
     /tmp/ccdnxwNR.s:2399   .debug_str:00000000000004a7 .LASF25
     /tmp/ccdnxwNR.s:2253   .debug_str:0000000000000045 .LASF26
     /tmp/ccdnxwNR.s:2409   .debug_str:00000000000004f7 .LASF27
     /tmp/ccdnxwNR.s:2385   .debug_str:0000000000000449 .LASF28
     /tmp/ccdnxwNR.s:2365   .debug_str:00000000000003be .LASF95
     /tmp/ccdnxwNR.s:2383   .debug_str:0000000000000439 .LASF31
     /tmp/ccdnxwNR.s:2339   .debug_str:00000000000002be .LASF33
     /tmp/ccdnxwNR.s:2343   .debug_str:00000000000002e6 .LASF79
     /tmp/ccdnxwNR.s:2297   .debug_str:0000000000000196 .LASF96
     /tmp/ccdnxwNR.s:2417   .debug_str:0000000000000521 .LASF47
     /tmp/ccdnxwNR.s:2353   .debug_str:000000000000033b .LASF49
     /tmp/ccdnxwNR.s:2263   .debug_str:0000000000000083 .LASF29
     /tmp/ccdnxwNR.s:2431   .debug_str:0000000000000636 .LASF30
     /tmp/ccdnxwNR.s:2335   .debug_str:000000000000029f .LASF32
     /tmp/ccdnxwNR.s:2423   .debug_str:00000000000005f8 .LASF34
     /tmp/ccdnxwNR.s:2419   .debug_str:000000000000052c .LASF97
     /tmp/ccdnxwNR.s:2245   .debug_str:0000000000000000 .LASF35
     /tmp/ccdnxwNR.s:2445   .debug_str:000000000000068d .LASF36
     /tmp/ccdnxwNR.s:2429   .debug_str:000000000000062e .LASF37
     /tmp/ccdnxwNR.s:2413   .debug_str:0000000000000510 .LASF38
     /tmp/ccdnxwNR.s:2369   .debug_str:00000000000003cb .LASF39
     /tmp/ccdnxwNR.s:2377   .debug_str:000000000000040a .LASF40
     /tmp/ccdnxwNR.s:2267   .debug_str:0000000000000099 .LASF41
     /tmp/ccdnxwNR.s:2337   .debug_str:00000000000002a5 .LASF43
     /tmp/ccdnxwNR.s:2281   .debug_str:0000000000000114 .LASF98
     /tmp/ccdnxwNR.s:2251   .debug_str:000000000000001d .LASF99
     /tmp/ccdnxwNR.s:2287   .debug_str:0000000000000142 .LASF42
     /tmp/ccdnxwNR.s:2277   .debug_str:00000000000000f1 .LASF44
     /tmp/ccdnxwNR.s:2401   .debug_str:00000000000004ac .LASF100
     /tmp/ccdnxwNR.s:2439   .debug_str:000000000000066e .LASF101
     /tmp/ccdnxwNR.s:2387   .debug_str:000000000000046d .LASF45
     /tmp/ccdnxwNR.s:2391   .debug_str:000000000000047b .LASF46
     /tmp/ccdnxwNR.s:2315   .debug_str:0000000000000229 .LASF48
     /tmp/ccdnxwNR.s:2357   .debug_str:000000000000036e .LASF50
     /tmp/ccdnxwNR.s:2285   .debug_str:000000000000013a .LASF51
     /tmp/ccdnxwNR.s:2355   .debug_str:0000000000000352 .LASF52
     /tmp/ccdnxwNR.s:2325   .debug_str:000000000000025d .LASF53
     /tmp/ccdnxwNR.s:2271   .debug_str:00000000000000b7 .LASF54
     /tmp/ccdnxwNR.s:2367   .debug_str:00000000000003c3 .LASF55
     /tmp/ccdnxwNR.s:2381   .debug_str:000000000000041f .LASF56
     /tmp/ccdnxwNR.s:2265   .debug_str:000000000000008f .LASF57
     /tmp/ccdnxwNR.s:2427   .debug_str:0000000000000612 .LASF58
     /tmp/ccdnxwNR.s:2319   .debug_str:0000000000000238 .LASF59
     /tmp/ccdnxwNR.s:2289   .debug_str:000000000000014b .LASF60
     /tmp/ccdnxwNR.s:2249   .debug_str:0000000000000015 .LASF61
     /tmp/ccdnxwNR.s:2283   .debug_str:0000000000000122 .LASF62
     /tmp/ccdnxwNR.s:2361   .debug_str:0000000000000395 .LASF63
     /tmp/ccdnxwNR.s:2435   .debug_str:0000000000000657 .LASF64
     /tmp/ccdnxwNR.s:2441   .debug_str:0000000000000679 .LASF65
     /tmp/ccdnxwNR.s:2313   .debug_str:000000000000021e .LASF68
     /tmp/ccdnxwNR.s:2375   .debug_str:00000000000003f0 .LASF70
     /tmp/ccdnxwNR.s:441    .text:0000000000000178 .LFB53
GAS LISTING /tmp/ccdnxwNR.s 			page 17


     /tmp/ccdnxwNR.s:490    .text:00000000000001a8 .LFE53
     /tmp/ccdnxwNR.s:2096   .debug_loc:0000000000000000 .LLST9
     /tmp/ccdnxwNR.s:2433   .debug_str:000000000000064d .LASF66
     /tmp/ccdnxwNR.s:2295   .debug_str:000000000000018f .LASF67
     /tmp/ccdnxwNR.s:2449   .debug_str:00000000000006a0 .LASF69
     /tmp/ccdnxwNR.s:2347   .debug_str:0000000000000304 .LASF71
     /tmp/ccdnxwNR.s:386    .text:0000000000000148 .LFB52
     /tmp/ccdnxwNR.s:435    .text:0000000000000178 .LFE52
     /tmp/ccdnxwNR.s:2110   .debug_loc:0000000000000039 .LLST8
     /tmp/ccdnxwNR.s:2379   .debug_str:0000000000000415 .LASF72
     /tmp/ccdnxwNR.s:2293   .debug_str:0000000000000177 .LASF73
     /tmp/ccdnxwNR.s:331    .text:0000000000000118 .LFB51
     /tmp/ccdnxwNR.s:380    .text:0000000000000148 .LFE51
     /tmp/ccdnxwNR.s:2351   .debug_str:0000000000000334 .LASF74
     /tmp/ccdnxwNR.s:2124   .debug_loc:0000000000000072 .LLST7
     /tmp/ccdnxwNR.s:2389   .debug_str:0000000000000472 .LASF75
     /tmp/ccdnxwNR.s:2349   .debug_str:000000000000031b .LASF76
     /tmp/ccdnxwNR.s:271    .text:00000000000000e4 .LFB50
     /tmp/ccdnxwNR.s:325    .text:0000000000000118 .LFE50
     /tmp/ccdnxwNR.s:2138   .debug_loc:00000000000000ab .LLST6
     /tmp/ccdnxwNR.s:2259   .debug_str:000000000000006d .LASF77
     /tmp/ccdnxwNR.s:2257   .debug_str:0000000000000058 .LASF78
     /tmp/ccdnxwNR.s:233    .text:00000000000000c0 .LFB49
     /tmp/ccdnxwNR.s:265    .text:00000000000000e4 .LFE49
     /tmp/ccdnxwNR.s:2407   .debug_str:00000000000004e6 .LASF80
     /tmp/ccdnxwNR.s:186    .text:0000000000000094 .LFB48
     /tmp/ccdnxwNR.s:227    .text:00000000000000c0 .LFE48
     /tmp/ccdnxwNR.s:2152   .debug_loc:00000000000000e4 .LLST5
     /tmp/ccdnxwNR.s:2437   .debug_str:0000000000000660 .LASF81
     /tmp/ccdnxwNR.s:2363   .debug_str:000000000000039d .LASF82
     /tmp/ccdnxwNR.s:120    .text:000000000000005c .LFB47
     /tmp/ccdnxwNR.s:180    .text:0000000000000094 .LFE47
     /tmp/ccdnxwNR.s:2164   .debug_loc:000000000000011b .LLST4
     /tmp/ccdnxwNR.s:2329   .debug_str:0000000000000279 .LASF83
     /tmp/ccdnxwNR.s:2261   .debug_str:0000000000000072 .LASF102
     /tmp/ccdnxwNR.s:2317   .debug_str:000000000000022f .LASF84
     /tmp/ccdnxwNR.s:2443   .debug_str:000000000000067f .LASF85
     /tmp/ccdnxwNR.s:65     .text:000000000000002c .LFB46
     /tmp/ccdnxwNR.s:114    .text:000000000000005c .LFE46
     /tmp/ccdnxwNR.s:2178   .debug_loc:0000000000000154 .LLST2
     /tmp/ccdnxwNR.s:2192   .debug_loc:000000000000018d .LLST3
     /tmp/ccdnxwNR.s:2425   .debug_str:0000000000000608 .LASF86
     /tmp/ccdnxwNR.s:2311   .debug_str:0000000000000210 .LASF87
     /tmp/ccdnxwNR.s:10     .text:0000000000000000 .LFB45
     /tmp/ccdnxwNR.s:59     .text:000000000000002c .LFE45
     /tmp/ccdnxwNR.s:2331   .debug_str:0000000000000287 .LASF88
     /tmp/ccdnxwNR.s:2204   .debug_loc:00000000000001c4 .LLST0
     /tmp/ccdnxwNR.s:2371   .debug_str:00000000000003d5 .LASF89
     /tmp/ccdnxwNR.s:2218   .debug_loc:00000000000001fd .LLST1
     /tmp/ccdnxwNR.s:444    .text:0000000000000178 .LVL22
     /tmp/ccdnxwNR.s:478    .text:0000000000000198 .LVL24
     /tmp/ccdnxwNR.s:389    .text:0000000000000148 .LVL19
     /tmp/ccdnxwNR.s:423    .text:0000000000000168 .LVL21
     /tmp/ccdnxwNR.s:334    .text:0000000000000118 .LVL16
     /tmp/ccdnxwNR.s:368    .text:0000000000000138 .LVL18
     /tmp/ccdnxwNR.s:274    .text:00000000000000e4 .LVL13
     /tmp/ccdnxwNR.s:313    .text:0000000000000108 .LVL15
GAS LISTING /tmp/ccdnxwNR.s 			page 18


     /tmp/ccdnxwNR.s:196    .text:00000000000000a0 .LVL10
     /tmp/ccdnxwNR.s:215    .text:00000000000000b0 .LVL11
     /tmp/ccdnxwNR.s:123    .text:000000000000005c .LVL6
     /tmp/ccdnxwNR.s:172    .text:0000000000000088 .LVL9
     /tmp/ccdnxwNR.s:68     .text:000000000000002c .LVL3
     /tmp/ccdnxwNR.s:102    .text:000000000000004c .LVL5
     /tmp/ccdnxwNR.s:76     .text:0000000000000038 .LVL4
     /tmp/ccdnxwNR.s:14     .text:0000000000000000 .LVL0
     /tmp/ccdnxwNR.s:48     .text:0000000000000020 .LVL2
     /tmp/ccdnxwNR.s:22     .text:000000000000000c .LVL1
     /tmp/ccdnxwNR.s:498    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
